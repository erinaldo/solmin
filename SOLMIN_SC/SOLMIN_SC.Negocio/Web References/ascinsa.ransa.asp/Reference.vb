'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace ascinsa.ransa.asp
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WsSolminSilSoap", [Namespace]:="http://ransa.biz/")>  _
    Partial Public Class WsSolminSil
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ListaDirectoriosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListaArchivosDirectorioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GuardarArchivosFtpOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DescargaArchivoFtpOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaOrdenServicioCabeceraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaOrdenServicioDetalleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SOLMIN_SC.Negocio.My.MySettings.Default.SOLMIN_SC_Negocio_ascinsa_ransa_asp_WsSolminSil
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ListaDirectoriosCompleted As ListaDirectoriosCompletedEventHandler
        
        '''<remarks/>
        Public Event ListaArchivosDirectorioCompleted As ListaArchivosDirectorioCompletedEventHandler
        
        '''<remarks/>
        Public Event GuardarArchivosFtpCompleted As GuardarArchivosFtpCompletedEventHandler
        
        '''<remarks/>
        Public Event DescargaArchivoFtpCompleted As DescargaArchivoFtpCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaOrdenServicioCabeceraCompleted As ConsultaOrdenServicioCabeceraCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaOrdenServicioDetalleCompleted As ConsultaOrdenServicioDetalleCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/ListaDirectorios", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListaDirectorios(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String) As String
            Dim results() As Object = Me.Invoke("ListaDirectorios", New Object() {FtpServer, User, Passwd, FolderName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListaDirectoriosAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String)
            Me.ListaDirectoriosAsync(FtpServer, User, Passwd, FolderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListaDirectoriosAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal userState As Object)
            If (Me.ListaDirectoriosOperationCompleted Is Nothing) Then
                Me.ListaDirectoriosOperationCompleted = AddressOf Me.OnListaDirectoriosOperationCompleted
            End If
            Me.InvokeAsync("ListaDirectorios", New Object() {FtpServer, User, Passwd, FolderName}, Me.ListaDirectoriosOperationCompleted, userState)
        End Sub
        
        Private Sub OnListaDirectoriosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListaDirectoriosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListaDirectoriosCompleted(Me, New ListaDirectoriosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/ListaArchivosDirectorio", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListaArchivosDirectorio(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String) As String
            Dim results() As Object = Me.Invoke("ListaArchivosDirectorio", New Object() {FtpServer, User, Passwd, FolderName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListaArchivosDirectorioAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String)
            Me.ListaArchivosDirectorioAsync(FtpServer, User, Passwd, FolderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListaArchivosDirectorioAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal userState As Object)
            If (Me.ListaArchivosDirectorioOperationCompleted Is Nothing) Then
                Me.ListaArchivosDirectorioOperationCompleted = AddressOf Me.OnListaArchivosDirectorioOperationCompleted
            End If
            Me.InvokeAsync("ListaArchivosDirectorio", New Object() {FtpServer, User, Passwd, FolderName}, Me.ListaArchivosDirectorioOperationCompleted, userState)
        End Sub
        
        Private Sub OnListaArchivosDirectorioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListaArchivosDirectorioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListaArchivosDirectorioCompleted(Me, New ListaArchivosDirectorioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/GuardarArchivosFtp", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GuardarArchivosFtp(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal cantidad_extraccion As Integer) As String
            Dim results() As Object = Me.Invoke("GuardarArchivosFtp", New Object() {FtpServer, User, Passwd, FolderName, cantidad_extraccion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GuardarArchivosFtpAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal cantidad_extraccion As Integer)
            Me.GuardarArchivosFtpAsync(FtpServer, User, Passwd, FolderName, cantidad_extraccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GuardarArchivosFtpAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal cantidad_extraccion As Integer, ByVal userState As Object)
            If (Me.GuardarArchivosFtpOperationCompleted Is Nothing) Then
                Me.GuardarArchivosFtpOperationCompleted = AddressOf Me.OnGuardarArchivosFtpOperationCompleted
            End If
            Me.InvokeAsync("GuardarArchivosFtp", New Object() {FtpServer, User, Passwd, FolderName, cantidad_extraccion}, Me.GuardarArchivosFtpOperationCompleted, userState)
        End Sub
        
        Private Sub OnGuardarArchivosFtpOperationCompleted(ByVal arg As Object)
            If (Not (Me.GuardarArchivosFtpCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GuardarArchivosFtpCompleted(Me, New GuardarArchivosFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/DescargaArchivoFtp", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DescargaArchivoFtp(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal filename As String) As String
            Dim results() As Object = Me.Invoke("DescargaArchivoFtp", New Object() {FtpServer, User, Passwd, FolderName, filename})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DescargaArchivoFtpAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal filename As String)
            Me.DescargaArchivoFtpAsync(FtpServer, User, Passwd, FolderName, filename, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DescargaArchivoFtpAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal filename As String, ByVal userState As Object)
            If (Me.DescargaArchivoFtpOperationCompleted Is Nothing) Then
                Me.DescargaArchivoFtpOperationCompleted = AddressOf Me.OnDescargaArchivoFtpOperationCompleted
            End If
            Me.InvokeAsync("DescargaArchivoFtp", New Object() {FtpServer, User, Passwd, FolderName, filename}, Me.DescargaArchivoFtpOperationCompleted, userState)
        End Sub
        
        Private Sub OnDescargaArchivoFtpOperationCompleted(ByVal arg As Object)
            If (Not (Me.DescargaArchivoFtpCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DescargaArchivoFtpCompleted(Me, New DescargaArchivoFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/ConsultaOrdenServicioCabecera", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaOrdenServicioCabecera(ByVal NumeroOrden As String, ByVal Medio As String) As String
            Dim results() As Object = Me.Invoke("ConsultaOrdenServicioCabecera", New Object() {NumeroOrden, Medio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaOrdenServicioCabeceraAsync(ByVal NumeroOrden As String, ByVal Medio As String)
            Me.ConsultaOrdenServicioCabeceraAsync(NumeroOrden, Medio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaOrdenServicioCabeceraAsync(ByVal NumeroOrden As String, ByVal Medio As String, ByVal userState As Object)
            If (Me.ConsultaOrdenServicioCabeceraOperationCompleted Is Nothing) Then
                Me.ConsultaOrdenServicioCabeceraOperationCompleted = AddressOf Me.OnConsultaOrdenServicioCabeceraOperationCompleted
            End If
            Me.InvokeAsync("ConsultaOrdenServicioCabecera", New Object() {NumeroOrden, Medio}, Me.ConsultaOrdenServicioCabeceraOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaOrdenServicioCabeceraOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaOrdenServicioCabeceraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaOrdenServicioCabeceraCompleted(Me, New ConsultaOrdenServicioCabeceraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/ConsultaOrdenServicioDetalle", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaOrdenServicioDetalle(ByVal NumeroOrden As String, ByVal Medio As String) As String
            Dim results() As Object = Me.Invoke("ConsultaOrdenServicioDetalle", New Object() {NumeroOrden, Medio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaOrdenServicioDetalleAsync(ByVal NumeroOrden As String, ByVal Medio As String)
            Me.ConsultaOrdenServicioDetalleAsync(NumeroOrden, Medio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaOrdenServicioDetalleAsync(ByVal NumeroOrden As String, ByVal Medio As String, ByVal userState As Object)
            If (Me.ConsultaOrdenServicioDetalleOperationCompleted Is Nothing) Then
                Me.ConsultaOrdenServicioDetalleOperationCompleted = AddressOf Me.OnConsultaOrdenServicioDetalleOperationCompleted
            End If
            Me.InvokeAsync("ConsultaOrdenServicioDetalle", New Object() {NumeroOrden, Medio}, Me.ConsultaOrdenServicioDetalleOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaOrdenServicioDetalleOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaOrdenServicioDetalleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaOrdenServicioDetalleCompleted(Me, New ConsultaOrdenServicioDetalleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub ListaDirectoriosCompletedEventHandler(ByVal sender As Object, ByVal e As ListaDirectoriosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListaDirectoriosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub ListaArchivosDirectorioCompletedEventHandler(ByVal sender As Object, ByVal e As ListaArchivosDirectorioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListaArchivosDirectorioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GuardarArchivosFtpCompletedEventHandler(ByVal sender As Object, ByVal e As GuardarArchivosFtpCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GuardarArchivosFtpCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub DescargaArchivoFtpCompletedEventHandler(ByVal sender As Object, ByVal e As DescargaArchivoFtpCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DescargaArchivoFtpCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub ConsultaOrdenServicioCabeceraCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaOrdenServicioCabeceraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaOrdenServicioCabeceraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub ConsultaOrdenServicioDetalleCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaOrdenServicioDetalleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaOrdenServicioDetalleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
