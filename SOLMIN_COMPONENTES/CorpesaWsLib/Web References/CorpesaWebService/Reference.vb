'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace CorpesaWebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WebTrackingWSSoap11Binding", [Namespace]:="http://ws.wtr.corpesa.com")>  _
    Partial Public Class WebTrackingWS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private consultaLectorTiposOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarInformacionCargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorGuiasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorAlmacenesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorOCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorCargasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private informarMovimientoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaInformacionCargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorConductoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private informarSepCargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private informarUbicacionGPSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorTipoDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaInformacionCargaDespachoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorTransportesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaGPSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorResponsablesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorMonedasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaDespachosCargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorUsuariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorGrupoUnidadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorUbicacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorEstadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultaLectorIncidenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CorpesaWsLib.My.MySettings.Default.CorpesaWsLib_CorpesaWebService_WebTrackingWS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event consultaLectorTiposCompleted As consultaLectorTiposCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarInformacionCargaCompleted As insertarInformacionCargaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorGuiasCompleted As consultaLectorGuiasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorAlmacenesCompleted As consultaLectorAlmacenesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorOCCompleted As consultaLectorOCCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorCargasCompleted As consultaLectorCargasCompletedEventHandler
        
        '''<remarks/>
        Public Event informarMovimientoCompleted As informarMovimientoCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaInformacionCargaCompleted As consultaInformacionCargaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorConductoresCompleted As consultaLectorConductoresCompletedEventHandler
        
        '''<remarks/>
        Public Event informarSepCargaCompleted As informarSepCargaCompletedEventHandler
        
        '''<remarks/>
        Public Event informarUbicacionGPSCompleted As informarUbicacionGPSCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorTipoDocumentosCompleted As consultaLectorTipoDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaInformacionCargaDespachoCompleted As consultaInformacionCargaDespachoCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorTransportesCompleted As consultaLectorTransportesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaGPSCompleted As consultaGPSCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorResponsablesCompleted As consultaLectorResponsablesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorMonedasCompleted As consultaLectorMonedasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaDespachosCargaCompleted As consultaDespachosCargaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorUsuariosCompleted As consultaLectorUsuariosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorGrupoUnidadesCompleted As consultaLectorGrupoUnidadesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorUbicacionesCompleted As consultaLectorUbicacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorEstadosCompleted As consultaLectorEstadosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultaLectorIncidenciasCompleted As consultaLectorIncidenciasCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorTipos", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorTipos(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorTipos", New Object() {usuario, password, usulector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorTiposAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String)
            Me.consultaLectorTiposAsync(usuario, password, usulector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorTiposAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal userState As Object)
            If (Me.consultaLectorTiposOperationCompleted Is Nothing) Then
                Me.consultaLectorTiposOperationCompleted = AddressOf Me.OnconsultaLectorTiposOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorTipos", New Object() {usuario, password, usulector}, Me.consultaLectorTiposOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorTiposOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorTiposCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorTiposCompleted(Me, New consultaLectorTiposCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:insertarInformacionCarga", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarInformacionCarga(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal cliente As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal codigoCargaOrigen As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("insertarInformacionCarga", New Object() {usuario, password, cliente, codigoCargaOrigen})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarInformacionCargaAsync(ByVal usuario As String, ByVal password As String, ByVal cliente As String, ByVal codigoCargaOrigen As String)
            Me.insertarInformacionCargaAsync(usuario, password, cliente, codigoCargaOrigen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarInformacionCargaAsync(ByVal usuario As String, ByVal password As String, ByVal cliente As String, ByVal codigoCargaOrigen As String, ByVal userState As Object)
            If (Me.insertarInformacionCargaOperationCompleted Is Nothing) Then
                Me.insertarInformacionCargaOperationCompleted = AddressOf Me.OninsertarInformacionCargaOperationCompleted
            End If
            Me.InvokeAsync("insertarInformacionCarga", New Object() {usuario, password, cliente, codigoCargaOrigen}, Me.insertarInformacionCargaOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarInformacionCargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarInformacionCargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarInformacionCargaCompleted(Me, New insertarInformacionCargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorGuias", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorGuias(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaini As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechafin As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorGuias", New Object() {usuario, password, usulector, fechaini, fechafin})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorGuiasAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String)
            Me.consultaLectorGuiasAsync(usuario, password, usulector, fechaini, fechafin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorGuiasAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String, ByVal userState As Object)
            If (Me.consultaLectorGuiasOperationCompleted Is Nothing) Then
                Me.consultaLectorGuiasOperationCompleted = AddressOf Me.OnconsultaLectorGuiasOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorGuias", New Object() {usuario, password, usulector, fechaini, fechafin}, Me.consultaLectorGuiasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorGuiasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorGuiasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorGuiasCompleted(Me, New consultaLectorGuiasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorAlmacenes", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorAlmacenes(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaini As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechafin As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorAlmacenes", New Object() {usuario, password, usulector, fechaini, fechafin})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorAlmacenesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String)
            Me.consultaLectorAlmacenesAsync(usuario, password, usulector, fechaini, fechafin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorAlmacenesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String, ByVal userState As Object)
            If (Me.consultaLectorAlmacenesOperationCompleted Is Nothing) Then
                Me.consultaLectorAlmacenesOperationCompleted = AddressOf Me.OnconsultaLectorAlmacenesOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorAlmacenes", New Object() {usuario, password, usulector, fechaini, fechafin}, Me.consultaLectorAlmacenesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorAlmacenesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorAlmacenesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorAlmacenesCompleted(Me, New consultaLectorAlmacenesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorOC", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorOC(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaini As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechafin As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorOC", New Object() {usuario, password, usulector, fechaini, fechafin})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorOCAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String)
            Me.consultaLectorOCAsync(usuario, password, usulector, fechaini, fechafin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorOCAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String, ByVal userState As Object)
            If (Me.consultaLectorOCOperationCompleted Is Nothing) Then
                Me.consultaLectorOCOperationCompleted = AddressOf Me.OnconsultaLectorOCOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorOC", New Object() {usuario, password, usulector, fechaini, fechafin}, Me.consultaLectorOCOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorOCOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorOCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorOCCompleted(Me, New consultaLectorOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorCargas", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorCargas(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaini As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechafin As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorCargas", New Object() {usuario, password, usulector, fechaini, fechafin})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorCargasAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String)
            Me.consultaLectorCargasAsync(usuario, password, usulector, fechaini, fechafin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorCargasAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String, ByVal userState As Object)
            If (Me.consultaLectorCargasOperationCompleted Is Nothing) Then
                Me.consultaLectorCargasOperationCompleted = AddressOf Me.OnconsultaLectorCargasOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorCargas", New Object() {usuario, password, usulector, fechaini, fechafin}, Me.consultaLectorCargasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorCargasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorCargasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorCargasCompleted(Me, New consultaLectorCargasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:informarMovimiento", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function informarMovimiento(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal informacion As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("informarMovimiento", New Object() {usuario, password, informacion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub informarMovimientoAsync(ByVal usuario As String, ByVal password As String, ByVal informacion As String)
            Me.informarMovimientoAsync(usuario, password, informacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub informarMovimientoAsync(ByVal usuario As String, ByVal password As String, ByVal informacion As String, ByVal userState As Object)
            If (Me.informarMovimientoOperationCompleted Is Nothing) Then
                Me.informarMovimientoOperationCompleted = AddressOf Me.OninformarMovimientoOperationCompleted
            End If
            Me.InvokeAsync("informarMovimiento", New Object() {usuario, password, informacion}, Me.informarMovimientoOperationCompleted, userState)
        End Sub
        
        Private Sub OninformarMovimientoOperationCompleted(ByVal arg As Object)
            If (Not (Me.informarMovimientoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent informarMovimientoCompleted(Me, New informarMovimientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaInformacionCarga", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaInformacionCarga(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal cliente As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal codigoCargaOrigen As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaInformacionCarga", New Object() {usuario, password, cliente, codigoCargaOrigen})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaInformacionCargaAsync(ByVal usuario As String, ByVal password As String, ByVal cliente As String, ByVal codigoCargaOrigen As String)
            Me.consultaInformacionCargaAsync(usuario, password, cliente, codigoCargaOrigen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaInformacionCargaAsync(ByVal usuario As String, ByVal password As String, ByVal cliente As String, ByVal codigoCargaOrigen As String, ByVal userState As Object)
            If (Me.consultaInformacionCargaOperationCompleted Is Nothing) Then
                Me.consultaInformacionCargaOperationCompleted = AddressOf Me.OnconsultaInformacionCargaOperationCompleted
            End If
            Me.InvokeAsync("consultaInformacionCarga", New Object() {usuario, password, cliente, codigoCargaOrigen}, Me.consultaInformacionCargaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaInformacionCargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaInformacionCargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaInformacionCargaCompleted(Me, New consultaInformacionCargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorConductores", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorConductores(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorConductores", New Object() {usuario, password, usulector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorConductoresAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String)
            Me.consultaLectorConductoresAsync(usuario, password, usulector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorConductoresAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal userState As Object)
            If (Me.consultaLectorConductoresOperationCompleted Is Nothing) Then
                Me.consultaLectorConductoresOperationCompleted = AddressOf Me.OnconsultaLectorConductoresOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorConductores", New Object() {usuario, password, usulector}, Me.consultaLectorConductoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorConductoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorConductoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorConductoresCompleted(Me, New consultaLectorConductoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:informarSepCarga", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function informarSepCarga(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal informacion As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("informarSepCarga", New Object() {usuario, password, informacion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub informarSepCargaAsync(ByVal usuario As String, ByVal password As String, ByVal informacion As String)
            Me.informarSepCargaAsync(usuario, password, informacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub informarSepCargaAsync(ByVal usuario As String, ByVal password As String, ByVal informacion As String, ByVal userState As Object)
            If (Me.informarSepCargaOperationCompleted Is Nothing) Then
                Me.informarSepCargaOperationCompleted = AddressOf Me.OninformarSepCargaOperationCompleted
            End If
            Me.InvokeAsync("informarSepCarga", New Object() {usuario, password, informacion}, Me.informarSepCargaOperationCompleted, userState)
        End Sub
        
        Private Sub OninformarSepCargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.informarSepCargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent informarSepCargaCompleted(Me, New informarSepCargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:informarUbicacionGPS", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function informarUbicacionGPS(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal informacion As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("informarUbicacionGPS", New Object() {usuario, password, informacion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub informarUbicacionGPSAsync(ByVal usuario As String, ByVal password As String, ByVal informacion As String)
            Me.informarUbicacionGPSAsync(usuario, password, informacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub informarUbicacionGPSAsync(ByVal usuario As String, ByVal password As String, ByVal informacion As String, ByVal userState As Object)
            If (Me.informarUbicacionGPSOperationCompleted Is Nothing) Then
                Me.informarUbicacionGPSOperationCompleted = AddressOf Me.OninformarUbicacionGPSOperationCompleted
            End If
            Me.InvokeAsync("informarUbicacionGPS", New Object() {usuario, password, informacion}, Me.informarUbicacionGPSOperationCompleted, userState)
        End Sub
        
        Private Sub OninformarUbicacionGPSOperationCompleted(ByVal arg As Object)
            If (Not (Me.informarUbicacionGPSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent informarUbicacionGPSCompleted(Me, New informarUbicacionGPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorTipoDocumentos", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorTipoDocumentos(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorTipoDocumentos", New Object() {usuario, password, usulector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorTipoDocumentosAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String)
            Me.consultaLectorTipoDocumentosAsync(usuario, password, usulector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorTipoDocumentosAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal userState As Object)
            If (Me.consultaLectorTipoDocumentosOperationCompleted Is Nothing) Then
                Me.consultaLectorTipoDocumentosOperationCompleted = AddressOf Me.OnconsultaLectorTipoDocumentosOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorTipoDocumentos", New Object() {usuario, password, usulector}, Me.consultaLectorTipoDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorTipoDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorTipoDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorTipoDocumentosCompleted(Me, New consultaLectorTipoDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaInformacionCargaDespacho", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaInformacionCargaDespacho(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal cliente As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal codigoCarga As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaInformacionCargaDespacho", New Object() {usuario, password, cliente, codigoCarga})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaInformacionCargaDespachoAsync(ByVal usuario As String, ByVal password As String, ByVal cliente As String, ByVal codigoCarga As String)
            Me.consultaInformacionCargaDespachoAsync(usuario, password, cliente, codigoCarga, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaInformacionCargaDespachoAsync(ByVal usuario As String, ByVal password As String, ByVal cliente As String, ByVal codigoCarga As String, ByVal userState As Object)
            If (Me.consultaInformacionCargaDespachoOperationCompleted Is Nothing) Then
                Me.consultaInformacionCargaDespachoOperationCompleted = AddressOf Me.OnconsultaInformacionCargaDespachoOperationCompleted
            End If
            Me.InvokeAsync("consultaInformacionCargaDespacho", New Object() {usuario, password, cliente, codigoCarga}, Me.consultaInformacionCargaDespachoOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaInformacionCargaDespachoOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaInformacionCargaDespachoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaInformacionCargaDespachoCompleted(Me, New consultaInformacionCargaDespachoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorTransportes", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorTransportes(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaini As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechafin As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorTransportes", New Object() {usuario, password, usulector, fechaini, fechafin})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorTransportesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String)
            Me.consultaLectorTransportesAsync(usuario, password, usulector, fechaini, fechafin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorTransportesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String, ByVal userState As Object)
            If (Me.consultaLectorTransportesOperationCompleted Is Nothing) Then
                Me.consultaLectorTransportesOperationCompleted = AddressOf Me.OnconsultaLectorTransportesOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorTransportes", New Object() {usuario, password, usulector, fechaini, fechafin}, Me.consultaLectorTransportesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorTransportesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorTransportesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorTransportesCompleted(Me, New consultaLectorTransportesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaGPS", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaGPS(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal codigoCarga As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaHoraIni As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaHoraFin As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaGPS", New Object() {usuario, password, codigoCarga, fechaHoraIni, fechaHoraFin})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaGPSAsync(ByVal usuario As String, ByVal password As String, ByVal codigoCarga As String, ByVal fechaHoraIni As String, ByVal fechaHoraFin As String)
            Me.consultaGPSAsync(usuario, password, codigoCarga, fechaHoraIni, fechaHoraFin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaGPSAsync(ByVal usuario As String, ByVal password As String, ByVal codigoCarga As String, ByVal fechaHoraIni As String, ByVal fechaHoraFin As String, ByVal userState As Object)
            If (Me.consultaGPSOperationCompleted Is Nothing) Then
                Me.consultaGPSOperationCompleted = AddressOf Me.OnconsultaGPSOperationCompleted
            End If
            Me.InvokeAsync("consultaGPS", New Object() {usuario, password, codigoCarga, fechaHoraIni, fechaHoraFin}, Me.consultaGPSOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaGPSOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaGPSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaGPSCompleted(Me, New consultaGPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorResponsables", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorResponsables(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorResponsables", New Object() {usuario, password, usulector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorResponsablesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String)
            Me.consultaLectorResponsablesAsync(usuario, password, usulector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorResponsablesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal userState As Object)
            If (Me.consultaLectorResponsablesOperationCompleted Is Nothing) Then
                Me.consultaLectorResponsablesOperationCompleted = AddressOf Me.OnconsultaLectorResponsablesOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorResponsables", New Object() {usuario, password, usulector}, Me.consultaLectorResponsablesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorResponsablesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorResponsablesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorResponsablesCompleted(Me, New consultaLectorResponsablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorMonedas", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorMonedas(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorMonedas", New Object() {usuario, password, usulector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorMonedasAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String)
            Me.consultaLectorMonedasAsync(usuario, password, usulector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorMonedasAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal userState As Object)
            If (Me.consultaLectorMonedasOperationCompleted Is Nothing) Then
                Me.consultaLectorMonedasOperationCompleted = AddressOf Me.OnconsultaLectorMonedasOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorMonedas", New Object() {usuario, password, usulector}, Me.consultaLectorMonedasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorMonedasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorMonedasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorMonedasCompleted(Me, New consultaLectorMonedasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaDespachosCarga", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaDespachosCarga(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal cliente As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaInicio As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaFin As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaDespachosCarga", New Object() {usuario, password, cliente, fechaInicio, fechaFin})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaDespachosCargaAsync(ByVal usuario As String, ByVal password As String, ByVal cliente As String, ByVal fechaInicio As String, ByVal fechaFin As String)
            Me.consultaDespachosCargaAsync(usuario, password, cliente, fechaInicio, fechaFin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaDespachosCargaAsync(ByVal usuario As String, ByVal password As String, ByVal cliente As String, ByVal fechaInicio As String, ByVal fechaFin As String, ByVal userState As Object)
            If (Me.consultaDespachosCargaOperationCompleted Is Nothing) Then
                Me.consultaDespachosCargaOperationCompleted = AddressOf Me.OnconsultaDespachosCargaOperationCompleted
            End If
            Me.InvokeAsync("consultaDespachosCarga", New Object() {usuario, password, cliente, fechaInicio, fechaFin}, Me.consultaDespachosCargaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaDespachosCargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaDespachosCargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaDespachosCargaCompleted(Me, New consultaDespachosCargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorUsuarios", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorUsuarios(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorUsuarios", New Object() {usuario, password, usulector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorUsuariosAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String)
            Me.consultaLectorUsuariosAsync(usuario, password, usulector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorUsuariosAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal userState As Object)
            If (Me.consultaLectorUsuariosOperationCompleted Is Nothing) Then
                Me.consultaLectorUsuariosOperationCompleted = AddressOf Me.OnconsultaLectorUsuariosOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorUsuarios", New Object() {usuario, password, usulector}, Me.consultaLectorUsuariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorUsuariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorUsuariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorUsuariosCompleted(Me, New consultaLectorUsuariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorGrupoUnidades", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorGrupoUnidades(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorGrupoUnidades", New Object() {usuario, password, usulector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorGrupoUnidadesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String)
            Me.consultaLectorGrupoUnidadesAsync(usuario, password, usulector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorGrupoUnidadesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal userState As Object)
            If (Me.consultaLectorGrupoUnidadesOperationCompleted Is Nothing) Then
                Me.consultaLectorGrupoUnidadesOperationCompleted = AddressOf Me.OnconsultaLectorGrupoUnidadesOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorGrupoUnidades", New Object() {usuario, password, usulector}, Me.consultaLectorGrupoUnidadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorGrupoUnidadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorGrupoUnidadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorGrupoUnidadesCompleted(Me, New consultaLectorGrupoUnidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorUbicaciones", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorUbicaciones(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechaini As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal fechafin As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorUbicaciones", New Object() {usuario, password, usulector, fechaini, fechafin})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorUbicacionesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String)
            Me.consultaLectorUbicacionesAsync(usuario, password, usulector, fechaini, fechafin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorUbicacionesAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal fechaini As String, ByVal fechafin As String, ByVal userState As Object)
            If (Me.consultaLectorUbicacionesOperationCompleted Is Nothing) Then
                Me.consultaLectorUbicacionesOperationCompleted = AddressOf Me.OnconsultaLectorUbicacionesOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorUbicaciones", New Object() {usuario, password, usulector, fechaini, fechafin}, Me.consultaLectorUbicacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorUbicacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorUbicacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorUbicacionesCompleted(Me, New consultaLectorUbicacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorEstados", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorEstados(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorEstados", New Object() {usuario, password, usulector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorEstadosAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String)
            Me.consultaLectorEstadosAsync(usuario, password, usulector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorEstadosAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal userState As Object)
            If (Me.consultaLectorEstadosOperationCompleted Is Nothing) Then
                Me.consultaLectorEstadosOperationCompleted = AddressOf Me.OnconsultaLectorEstadosOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorEstados", New Object() {usuario, password, usulector}, Me.consultaLectorEstadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorEstadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorEstadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorEstadosCompleted(Me, New consultaLectorEstadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:consultaLectorIncidencias", RequestNamespace:="http://ws.wtr.corpesa.com", ResponseNamespace:="http://ws.wtr.corpesa.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultaLectorIncidencias(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usuario As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal usulector As String) As <System.Xml.Serialization.XmlElementAttribute("return", IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("consultaLectorIncidencias", New Object() {usuario, password, usulector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultaLectorIncidenciasAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String)
            Me.consultaLectorIncidenciasAsync(usuario, password, usulector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultaLectorIncidenciasAsync(ByVal usuario As String, ByVal password As String, ByVal usulector As String, ByVal userState As Object)
            If (Me.consultaLectorIncidenciasOperationCompleted Is Nothing) Then
                Me.consultaLectorIncidenciasOperationCompleted = AddressOf Me.OnconsultaLectorIncidenciasOperationCompleted
            End If
            Me.InvokeAsync("consultaLectorIncidencias", New Object() {usuario, password, usulector}, Me.consultaLectorIncidenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultaLectorIncidenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultaLectorIncidenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultaLectorIncidenciasCompleted(Me, New consultaLectorIncidenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorTiposCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorTiposCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorTiposCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub insertarInformacionCargaCompletedEventHandler(ByVal sender As Object, ByVal e As insertarInformacionCargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarInformacionCargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorGuiasCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorGuiasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorGuiasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorAlmacenesCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorAlmacenesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorAlmacenesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorOCCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorOCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorOCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorCargasCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorCargasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorCargasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub informarMovimientoCompletedEventHandler(ByVal sender As Object, ByVal e As informarMovimientoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class informarMovimientoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaInformacionCargaCompletedEventHandler(ByVal sender As Object, ByVal e As consultaInformacionCargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaInformacionCargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorConductoresCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorConductoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorConductoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub informarSepCargaCompletedEventHandler(ByVal sender As Object, ByVal e As informarSepCargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class informarSepCargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub informarUbicacionGPSCompletedEventHandler(ByVal sender As Object, ByVal e As informarUbicacionGPSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class informarUbicacionGPSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorTipoDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorTipoDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorTipoDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaInformacionCargaDespachoCompletedEventHandler(ByVal sender As Object, ByVal e As consultaInformacionCargaDespachoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaInformacionCargaDespachoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorTransportesCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorTransportesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorTransportesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaGPSCompletedEventHandler(ByVal sender As Object, ByVal e As consultaGPSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaGPSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorResponsablesCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorResponsablesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorResponsablesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorMonedasCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorMonedasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorMonedasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaDespachosCargaCompletedEventHandler(ByVal sender As Object, ByVal e As consultaDespachosCargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaDespachosCargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorUsuariosCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorUsuariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorUsuariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorGrupoUnidadesCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorGrupoUnidadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorGrupoUnidadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorUbicacionesCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorUbicacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorUbicacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorEstadosCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorEstadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorEstadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub consultaLectorIncidenciasCompletedEventHandler(ByVal sender As Object, ByVal e As consultaLectorIncidenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultaLectorIncidenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
