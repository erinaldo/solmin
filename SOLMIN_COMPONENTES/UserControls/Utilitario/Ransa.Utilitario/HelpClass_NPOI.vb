Imports NPOI.HSSF.UserModel
Imports System.Windows.Forms
Imports System.Drawing
Imports Microsoft.VisualBasic
Imports System
Imports System.Text
Imports System.IO
Imports System.IO.Directory
Imports System.Data
Imports System.Reflection
Imports System.Data.OleDb
Imports System.ComponentModel
Imports NPOI.HPSF
Imports NPOI.POIFS.FileSystem
Imports NPOI.SS.UserModel


Imports Excel = Microsoft.Office.Interop.Excel
Public Class HelpClass_NPOI

    ''' <summary>
    ''' Exporta a Excel mediante DDL MOPI
    ''' </summary>
    ''' <param name="objListdt"></param>
    ''' <param name="title"></param>
    ''' <remarks></remarks>
    Public Shared Sub ExportExcel(ByVal objListdt As List(Of DataTable), ByVal title As String, Optional ByVal filtro As Hashtable = Nothing)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls" 'xml
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            For Each odtg As DataTable In objListdt
                objWorkSheet = objWorkBook.CreateSheet(odtg.TableName)
                objWorkSheet.CreateRow(3)
                '=============Style======================
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.FontHeight = 165

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 220

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 170

                styleFiltro.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFiltro.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFiltro.SetFont(oFontFiltro)
                styleFiltro.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleFiltro.FillPattern = FillPatternType.SOLID_FOREGROUND

                styleCab.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREEN.index
                styleCab.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                styleCab.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleCab.SetFont(oFontCab)
                styleCab.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleCab.FillPattern = FillPatternType.SOLID_FOREGROUND

                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREEN.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                style.SetFont(oFont)
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                '===============================
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                styleNumber.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                styleNumber.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleNumber.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleNumber.SetFont(oFontFiltro)
                styleNumber.DataFormat = HSSFDataFormat.GetBuiltinFormat("#.##0,00")
                styleNumber.FillPattern = FillPatternType.SOLID_FOREGROUND
                '===============================
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                styleMonto.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                styleMonto.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleMonto.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleMonto.SetFont(oFontFiltro)
                styleMonto.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                styleMonto.FillPattern = FillPatternType.SOLID_FOREGROUND
                '===============================
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                styleFecha.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                styleFecha.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFecha.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFecha.SetFont(oFontFiltro)
                styleFecha.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleFecha.FillPattern = FillPatternType.SOLID_FOREGROUND
                '============================================
                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                'create the anchor
                Dim anchor As HSSFClientAnchor
                anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, 0, _
                 0, 0)
                If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If
                If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If
                Dim rowActual As Integer = 3
                '==============Verificamos Filtro a utilizar==================
                If filtro Is Nothing Then
                    rowActual = rowActual + 1
                Else
                    Dim x As Integer = 0
                    For Each items As DictionaryEntry In filtro
                        x = x + 1
                        objWorkSheet.CreateRow(rowActual + x)

                        objWorkSheet.GetRow(rowActual + x).CreateCell(0).CellStyle = styleFiltro
                        objWorkSheet.GetRow(rowActual + x).GetCell(0).SetCellValue(items.Key.ToString.Trim)

                        objWorkSheet.GetRow(rowActual + x).CreateCell(1).CellStyle = styleFiltro
                        objWorkSheet.GetRow(rowActual + x).GetCell(1).SetCellValue(items.Value.ToString.Trim)

                    Next
                    rowActual = rowActual + filtro.Count + 1
                End If
                rowActual += 1
                '===============Titulo
                objWorkSheet.CreateRow(rowActual).Height = 100 * 4
                '===========================
                For x As Integer = 0 To odtg.Columns.Count - 1
                    objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = styleCab
                Next
                '===========Titulo es centrado segun tamaño de grilla===========        
                objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(title)
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, odtg.Columns.Count - 1))
                rowActual = rowActual + 2
                '===================Se cargan Las Cabeceras=====================
                Dim flgCabDoble As Boolean = False
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To odtg.Columns.Count - 1
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = style
                    '===Valores===
                    Dim valorCab As String = odtg.Columns(x).ColumnName.ToString().Trim()
                    Dim valorCabDoble As String()
                    valorCabDoble = Split(valorCab, "\n")
                    If valorCabDoble.Length = 2 Then
                        flgCabDoble = True
                    Else
                        flgCabDoble = False
                    End If

                    objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCabDoble(0))
                Next
                rowActual = rowActual + 1
                If flgCabDoble = True Then
                    '==========Limpiamos los Cells Repetidos en el Row Anterior=========
                    For x As Integer = 0 To odtg.Columns.Count - 1
                        If x < odtg.Columns.Count - 1 Then
                            If objWorkSheet.GetRow(rowActual - 1).GetCell(x).StringCellValue = objWorkSheet.GetRow(rowActual - 1).GetCell(x + 1).StringCellValue Then
                                Dim valorTemp = objWorkSheet.GetRow(rowActual - 1).GetCell(x).StringCellValue
                                objWorkSheet.GetRow(rowActual - 1).GetCell(x + 1).SetCellValue("")
                                '===Union===
                                Dim Region As New NPOI.SS.Util.Region(rowActual - 1, x, rowActual - 1, x + 1)
                                objWorkSheet.AddMergedRegion(Region)
                            End If
                        End If
                    Next
                    '===================================================================
                    objWorkSheet.CreateRow(rowActual)
                    For x As Integer = 0 To odtg.Columns.Count - 1
                        '===Estilo===
                        objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = style
                        '===Valores===
                        Dim valorCab As String = odtg.Columns(x).ColumnName.ToString().Trim()
                        Dim valorCabDoble As String()
                        valorCabDoble = Split(valorCab, "\n")
                        If valorCabDoble.Length = 2 Then
                            objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCabDoble(1))
                        End If
                    Next
                    rowActual = rowActual + 1
                End If
                '===================Se Carga El Detalle============================
                For i As Integer = 0 To odtg.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To odtg.Columns.Count - 1
                        Dim celda As String = odtg.Rows(i).Item(x).ToString().Trim()
                        If IsNumeric(celda) Then
                            If celda.Contains(".") And Not celda.Contains("S") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            ElseIf celda.Contains("S") OrElse celda.Contains("US") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleNumber
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            End If
                        ElseIf odtg.Columns(x).ColumnName.Contains("Hora") Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(celda)
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = styleFecha
                        Else
                            If IsDate(celda) Then
                                celda = String.Format("{0:d}", CDate(celda))
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleFecha
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(celda)
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = styleFiltro
                            End If
                        End If
                    Next
                Next
                '===================================================================
                For z As Integer = 0 To odtg.Columns.Count - 1
                    objWorkSheet.AutoSizeColumn(z, True)
                Next
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub

    ''' <summary>
    ''' Exporta a Excel Generico mediante DDL MOPI
    ''' </summary>
    ''' <param name="objDs"></param>
    ''' <param name="title"></param>
    ''' <remarks></remarks>
    Public Shared Sub ExportExcel_Generico(ByVal objDs As DataSet, ByVal title As String)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls" 'xml
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)

            Dim odtDetalle As DataTable = objDs.Tables(0)
            Dim odtFiltro As New DataTable
            If objDs.Tables.Count > 1 Then odtFiltro = objDs.Tables(1)
            objWorkSheet = objWorkBook.CreateSheet(odtDetalle.TableName)

            objWorkSheet.CreateRow(3)
            '=============Style======================
            Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
            oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontTitulo.FontHeight = 180

            Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontFiltro.FontHeight = 165

            Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
            oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.FontHeight = 165

            Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.FontHeight = 170

            Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
            Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
            Estilos_Excel_NPOI(style, FORMATO.Normal)
            Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
            Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
            Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
            '============================================
            styleFiltro.SetFont(oFontFiltro)
            styleCab.SetFont(oFontCab)
            style.SetFont(oFont)
            styleTitulo.SetFont(oFontTitulo)
            styleNumber.SetFont(oFont)
            styleMonto.SetFont(oFont)
            styleFecha.SetFont(oFont)

            Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
            'create the anchor
            Dim anchor As HSSFClientAnchor
            anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, 0, 0, 0)
            If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                'load the picture and get the picture index in the workbook
                Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                'Reset the image to the original size.
                picture.Resize(0.5)
            End If
            If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
                'load the picture and get the picture index in the workbook
                Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
                'Reset the image to the original size.
                picture.Resize(0.5)
            End If
            Dim rowActual As Integer = 3
            rowActual += 1
            '===============Filtro
            For i As Integer = 0 To odtFiltro.Rows.Count - 1
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = styleFiltro
                objWorkSheet.GetRow(rowActual).CreateCell(2).CellStyle = styleFiltro
                objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue(odtFiltro.Rows(i).Item("ETIQUETA").ToString.Trim)
                objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue(odtFiltro.Rows(i).Item("DESCRIPCION").ToString.Trim)
                rowActual += 1
            Next
            '===============
            Dim pIni As Integer = 1
            '===============Titulo
            objWorkSheet.CreateRow(rowActual).Height = 100 * 4
            '===========================
            For x As Integer = 1 To odtDetalle.Columns.Count
                objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = styleCab
            Next
            '===========Titulo es centrado segun tamaño de grilla===========        
            objWorkSheet.GetRow(rowActual).GetCell(pIni).SetCellValue(title)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, pIni, rowActual, odtDetalle.Columns.Count))
            rowActual = rowActual + 2
            '===================Se cargan Las Cabeceras=====================
            Dim flgCabDoble As Boolean = False
            objWorkSheet.CreateRow(rowActual)
            For x As Integer = 0 To odtDetalle.Columns.Count - 1
                '===Estilo===
                objWorkSheet.GetRow(rowActual).CreateCell(x + pIni).CellStyle = styleCab
                '===Valores===
                Dim valorCab As String = odtDetalle.Columns(x).ColumnName.ToString().Trim()
                Dim valorCabDoble As String()
                valorCabDoble = Split(valorCab, "\n")
                objWorkSheet.GetRow(rowActual).GetCell(x + pIni).SetCellValue(valorCabDoble(0))
            Next
            rowActual = rowActual + 1
            '===================Se Carga El Detalle============================
            For i As Integer = 0 To odtDetalle.Rows.Count - 1
                objWorkSheet.CreateRow(i + rowActual)
                For x As Integer = 0 To odtDetalle.Columns.Count - 1
                    Dim celda As String = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    pIni = x + 1
                    If IsNumeric(celda) Then
                        If celda.Contains(".") And Not celda.Contains("S") Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(pIni).CellStyle = styleMonto
                            objWorkSheet.GetRow(i + rowActual).GetCell(pIni).SetCellValue(Convert.ToDouble(celda))
                        ElseIf celda.Contains("S") OrElse celda.Contains("US") Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(pIni).CellStyle = styleMonto
                            objWorkSheet.GetRow(i + rowActual).GetCell(pIni).SetCellValue(celda)
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(pIni).CellStyle = styleNumber
                            objWorkSheet.GetRow(i + rowActual).GetCell(pIni).SetCellValue(Convert.ToDouble(celda))
                        End If
                    Else
                        If IsDate(celda) Then
                            celda = String.Format("{0:d}", CDate(celda))
                            objWorkSheet.GetRow(i + rowActual).CreateCell(pIni).CellStyle = styleFecha
                            objWorkSheet.GetRow(i + rowActual).GetCell(pIni).SetCellValue(celda)
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(pIni).SetCellValue(celda)
                            objWorkSheet.GetRow(i + rowActual).GetCell(pIni).CellStyle = style
                        End If
                    End If
                Next
            Next
            '===================================================================
            For z As Integer = 0 To odtDetalle.Columns.Count
                objWorkSheet.AutoSizeColumn(z, True)
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub

    Public Shared Sub ExportExcel_RZC20_General_List(ByVal oDsList As List(Of DataSet))
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls" 'xml
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)

            Dim opeTempCom As String = ""
            Dim opeTempIni As String = ""

            For Each oDs As DataSet In oDsList
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim stylePorcentaje As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontTitulo.FontHeight = 180

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontFiltro.FontHeight = 165

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 165

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 170

                Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
                Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
                Estilos_Excel_NPOI(style, FORMATO.Normal)
                Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
                Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
                Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
                Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
                Estilos_Excel_NPOI(stylePorcentaje, FORMATO.Porcentaje)
                '============================================
                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontTitulo)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                stylePorcentaje.SetFont(oFont)

                Dim odtDetalle As New DataTable
                odtDetalle = oDs.Tables(0)
                Dim odtFiltro As New DataTable
                odtFiltro = oDs.Tables(1)
                Dim odtResumen As New DataTable
                odtResumen = oDs.Tables(2)
                Dim odtResLote As New DataTable
                odtResLote = oDs.Tables(3)

                Dim odtCI As New DataTable
                odtCI = oDs.Tables(4)


                Dim rowActual As Integer = 6
                objWorkSheet = objWorkBook.CreateSheet(odtDetalle.TableName)
                objWorkSheet.CreateRow(3)

                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                'create the anchor
                Dim anchor As HSSFClientAnchor
                anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, 0, _
                 0, 0)
                If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If
                If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If

                Dim valorFiltro As String = ""
                For i As Integer = 0 To odtFiltro.Rows.Count - 1
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = style
                    objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = style
                    valorFiltro = odtFiltro.Rows(i).Item("Filtro")
                    objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(valorFiltro)
                    valorFiltro = odtFiltro.Rows(i).Item("Valor")
                    objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue(valorFiltro)
                    rowActual = rowActual + 1
                Next
                rowActual = rowActual + 1
                '===========Titulo es centrado segun tamaño de grilla===========                  
                objWorkSheet.CreateRow(rowActual).Height = 400
                objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue("Reporte Consistencia")
                objWorkSheet.AddMergedRegion((New NPOI.SS.Util.Region(rowActual, 0, rowActual, odtDetalle.Columns.Count - 1)))
                rowActual = rowActual + 1
                '===================Se cargan Las Cabeceras=====================
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To odtDetalle.Columns.Count - 1
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = styleCab
                    Dim valorCab As String = odtDetalle.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCab)
                Next
                rowActual = rowActual + 1
                '===================Se Carga El Detalle==========================
                For i As Integer = 0 To odtDetalle.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To odtDetalle.Columns.Count - 1
                        Dim celda As String = odtDetalle.Rows(i).Item(x).ToString().Trim()
                        Dim TypoDato As String = odtDetalle.Columns.Item(x).DataType.ToString

                        If i = 0 And odtDetalle.Columns(x).ColumnName = "Operación" Then 'COGE EL PRIMER registro 
                            opeTempIni = celda
                        End If
                        If i > 0 And odtDetalle.Columns(x).ColumnName = "Operación" Then 'A partir del segundo registro empieza a validar
                            opeTempCom = celda
                            If opeTempCom = opeTempIni Then 'Si se repite operacion  Pintar Blanco
                                celda = ""
                            Else
                                opeTempIni = celda
                            End If
                        End If
                        If odtDetalle.Columns(x).ColumnName.ToString.Trim = "OC" Or odtDetalle.Columns(x).ColumnName.ToString.Trim = "RUC" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                            Continue For
                        End If
                        If odtDetalle.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = stylePorcentaje
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda) / 100)
                            Continue For
                        End If

                        If TypoDato.Equals("System.Decimal") Or TypoDato.Equals("System.Int32") Or TypoDato.Equals("System.Double") Or TypoDato.Equals("System.Integer") Then

                            If TypoDato.Equals("System.Decimal") Or TypoDato.Equals("System.Double") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleMonto
                                If celda Is "" Then
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue("")
                                Else
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(Val(celda)))
                                End If

                            Else
                                If celda Is "" Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleNumber
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue("")
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleNumber
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToInt64(Val(celda)))
                                End If
                            End If
                            '****
                        Else
                            If TypoDato.Equals("System.Date") Then
                                celda = String.Format("{0:yyyy/MM/dd}", CDate(celda))
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleFecha
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                            ElseIf TypoDato.Equals("System.DateTime") Then
                                If celda <> "" Then
                                    celda = String.Format("{0:yyyy/MM/dd}", CDate(celda))
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleFecha
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(celda)
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = style
                                End If

                            Else
                                If celda Is DBNull.Value Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue("")
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = style
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(celda)
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = style
                                End If

                            End If
                        End If
                    Next
                Next
                rowActual = rowActual + odtDetalle.Rows.Count + 2
                '===================Se Carga El Resumen=============================
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.CreateRow(rowActual + 1)
                For i As Integer = 1 To 7
                    objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                Next
                objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("RESUMEN SERVICIOS")
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 1, rowActual, 7))
                rowActual = rowActual + 1
                objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("Cod. Tarifa")
                objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("Descripción")
                objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Moneda")
                objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue("Tarifa")
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue("Cantidad")
                objWorkSheet.GetRow(rowActual).GetCell(6).SetCellValue("Monto Soles")
                objWorkSheet.GetRow(rowActual).GetCell(7).SetCellValue("Monto Dolares")
                rowActual = rowActual + 1
                For i As Integer = 0 To odtResumen.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To odtResumen.Columns.Count - 1
                        Dim celda As String = odtResumen.Rows(i).Item(x).ToString().Trim()
                        Dim posCelda As Integer = x + 1
                        If IsNumeric(celda) Then
                            If celda.Contains(".") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(Convert.ToDouble(celda))
                        Else
                            If IsDate(celda) Then
                                celda = String.Format("{0:d}", CDate(celda))
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleFecha
                                objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).SetCellValue(odtResumen.Rows(i).Item(x).ToString().Trim())
                                objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).CellStyle = style
                            End If
                        End If
                    Next
                Next
                Dim cIniS As String
                Dim cIniD As String
                cIniS = "G" & (rowActual + 1).ToString
                cIniD = "H" & (rowActual + 1).ToString
                rowActual = rowActual + odtResumen.Rows.Count + 1
                Dim cFinS As String
                Dim cFinD As String
                cFinS = "G" & (rowActual - 1).ToString
                cFinD = "H" & (rowActual - 1).ToString
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).CreateCell(6).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual).CreateCell(7).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue("Total")
                Dim dblTotalSoles As String = "SUM(" & cIniS & ":" & cFinS & ")"
                Dim dblTotalDolares As String = "SUM(" & cIniD & ":" & cFinD & ")"
                objWorkSheet.GetRow(rowActual).GetCell(6).CellFormula() = (dblTotalSoles)
                objWorkSheet.GetRow(rowActual).GetCell(7).CellFormula() = (dblTotalDolares)
                '===================================================================      
                If odtResLote.Rows.Count > 0 Then
                    '===================Se Carga El Resumen por Lote====================
                    rowActual += 2
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.CreateRow(rowActual + 1)
                    For i As Integer = 2 To 5
                        objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                        objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                    Next
                    objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("RESUMEN POR LOTE")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 2, rowActual, 5))
                    rowActual += 1
                    For x As Integer = 0 To odtResLote.Columns.Count - 1
                        objWorkSheet.GetRow(rowActual).GetCell(x + 2).SetCellValue(odtResLote.Columns(x).ColumnName)
                    Next
                    rowActual += 1
                    For i As Integer = 0 To odtResLote.Rows.Count - 1
                        objWorkSheet.CreateRow(i + rowActual)
                        For x As Integer = 0 To odtResLote.Columns.Count - 1
                            Dim celda As String = odtResLote.Rows(i).Item(x).ToString().Trim()
                            Select Case odtResLote.Columns(x).ColumnName
                                Case "SOLES", "DOLARES"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = styleMonto
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda))
                                Case "LOTE", "MONEDA"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = style
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(celda)
                            End Select
                        Next
                    Next
                End If
                'Redimensiono tamaño de columnas automaticamente
                For z As Integer = 0 To odtDetalle.Columns.Count - 1
                    objWorkSheet.AutoSizeColumn(z, True)
                Next
                '=======suma los totales del lote==================
                cIniS = String.Empty
                cIniD = String.Empty
                dblTotalSoles = 0
                dblTotalDolares = 0

                cIniS = "E" & (rowActual + 1).ToString
                cIniD = "F" & (rowActual + 1).ToString
                rowActual = rowActual + odtResLote.Rows.Count + 1
                cFinS = String.Empty
                cFinD = String.Empty
                cFinS = "E" & (rowActual - 1).ToString
                cFinD = "F" & (rowActual - 1).ToString
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Total")
                dblTotalSoles = "SUM(" & cIniS & ":" & cFinS & ")"
                dblTotalDolares = "SUM(" & cIniD & ":" & cFinD & ")"
                objWorkSheet.GetRow(rowActual).GetCell(4).CellFormula() = (dblTotalSoles)
                objWorkSheet.GetRow(rowActual).GetCell(5).CellFormula() = (dblTotalDolares)




                '=======RESUMEN DE CUENTA DE IMPUTACION============================

                '===================================================================
                If odtCI.Rows.Count > 0 Then
                    '===================Se Carga El Resumen por CI====================
                    rowActual += 2
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.CreateRow(rowActual + 1)
                    For i As Integer = 2 To 5
                        objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                        objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                    Next
                    objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("RESUMEN POR CUENTA IMPUTACION")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 2, rowActual, 5))
                    rowActual += 1
                    For x As Integer = 0 To odtCI.Columns.Count - 1
                        objWorkSheet.GetRow(rowActual).GetCell(x + 2).SetCellValue(odtCI.Columns(x).ColumnName)
                    Next
                    rowActual += 1
                    For i As Integer = 0 To odtCI.Rows.Count - 1
                        objWorkSheet.CreateRow(i + rowActual)
                        For x As Integer = 0 To odtCI.Columns.Count - 1
                            Dim celda As String = odtCI.Rows(i).Item(x).ToString().Trim()
                            Select Case odtCI.Columns(x).ColumnName
                                Case "SOLES", "DOLARES"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = styleMonto
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda))
                                Case "CI", "MONEDA"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = style
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(celda)
                                Case "PORCENTAJE"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = stylePorcentaje
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda) / 100)
                            End Select
                        Next
                    Next

                    '=======suma los totales de CI ==================
                    cIniS = String.Empty
                    cIniD = String.Empty
                    dblTotalSoles = 0
                    dblTotalDolares = 0

                    cIniS = "E" & (rowActual + 1).ToString
                    cIniD = "F" & (rowActual + 1).ToString
                    rowActual = rowActual + odtCI.Rows.Count + 1
                    cFinS = String.Empty
                    cFinD = String.Empty
                    cFinS = "E" & (rowActual).ToString
                    cFinD = "F" & (rowActual).ToString
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue("Total")
                    dblTotalSoles = "SUM(" & cIniS & ":" & cFinS & ")"
                    dblTotalDolares = "SUM(" & cIniD & ":" & cFinD & ")"
                    objWorkSheet.GetRow(rowActual).GetCell(4).CellFormula() = (dblTotalSoles)
                    objWorkSheet.GetRow(rowActual).GetCell(5).CellFormula() = (dblTotalDolares)

                End If

            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub

    Public Shared Sub ExportExcel_RZC20(ByVal oDs As DataSet, Optional ByVal CantDetalles As Integer = 1, Optional ByVal oDtReemb As DataTable = Nothing)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim opeTempIni As String = ""
            Dim opeTempCom As String = ""

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim stylePorcentaje As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
            oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontTitulo.FontHeight = 180

            Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontFiltro.FontHeight = 165

            Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
            oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.FontHeight = 165

            Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.FontHeight = 170

            Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
            Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
            Estilos_Excel_NPOI(style, FORMATO.Normal)
            Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
            Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)

            Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
            Estilos_Excel_NPOI(stylePorcentaje, FORMATO.Porcentaje)

            '============================================

            styleCab.SetFont(oFontCab)
            style.SetFont(oFont)
            styleTitulo.SetFont(oFontTitulo)
            styleNumber.SetFont(oFont)
            styleMonto.SetFont(oFont)

            styleFecha.SetFont(oFont)
            stylePorcentaje.SetFont(oFont)

            Dim odtDetalle As New DataTable
            odtDetalle = oDs.Tables(0)

            Dim odtFiltro As New DataTable
            odtFiltro = oDs.Tables(1)

            Dim odtResumen As New DataTable
            odtResumen = oDs.Tables(2)

            Dim odtResLote As New DataTable
            odtResLote = oDs.Tables(3)

            Dim odtCI As New DataTable
            If oDs.Tables.Count = 5 Then odtCI = oDs.Tables(4)




            For d As Integer = 0 To CantDetalles - 1

                Dim rowActual As Integer = 6

                objWorkSheet = objWorkBook.CreateSheet(odtDetalle.TableName & Convert.ToString(d + 1))
                objWorkSheet.CreateRow(3)

                If d = 0 And oDtReemb IsNot Nothing Then
                    odtDetalle = oDtReemb
                Else
                    odtDetalle = oDs.Tables(0)
                End If


                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                'create the anchor
                Dim anchor As HSSFClientAnchor
                anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, 0, _
                 0, 0)
                If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If
                If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If

                Dim valorFiltro As String = ""
                For i As Integer = 0 To odtFiltro.Rows.Count - 1
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = style
                    objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = style
                    valorFiltro = odtFiltro.Rows(i).Item("Filtro")
                    objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(valorFiltro)
                    valorFiltro = odtFiltro.Rows(i).Item("Valor")
                    objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue(valorFiltro)
                    rowActual = rowActual + 1
                Next
                rowActual = rowActual + 1
                '===========Titulo es centrado segun tamaño de grilla===========                  
                objWorkSheet.CreateRow(rowActual).Height = 400
                objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue("Reporte Consistencia")
                objWorkSheet.AddMergedRegion((New NPOI.SS.Util.Region(rowActual, 0, rowActual, odtDetalle.Columns.Count - 1)))
                rowActual = rowActual + 1
                '===================Se cargan Las Cabeceras=====================
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To odtDetalle.Columns.Count - 1
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = styleCab
                    Dim valorCab As String = odtDetalle.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCab)
                Next
                rowActual = rowActual + 1

                '===================Se Carga El Detalle==========================
                For i As Integer = 0 To odtDetalle.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)

                    For x As Integer = 0 To odtDetalle.Columns.Count - 1
                        Dim celda As String = odtDetalle.Rows(i).Item(x).ToString().Trim()
                        Dim TypoDato As String = odtDetalle.Columns.Item(x).DataType.ToString
                        If i = 0 And odtDetalle.Columns(x).ColumnName = "Operacion" Then 'COGE EL PRIMER registro 
                            opeTempIni = celda
                        End If
                        If i > 0 And odtDetalle.Columns(x).ColumnName = "Operacion" Then 'A partir del segundo registro empieza a validar
                            opeTempCom = celda
                            If opeTempCom = opeTempIni Then 'Si se repite operacion  Pintar Blanco
                                celda = ""
                            Else
                                opeTempIni = celda
                            End If
                        End If
                        If odtDetalle.Columns(x).ColumnName.ToString.Trim = "OC" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                            Continue For
                        End If
                        If odtDetalle.Columns(x).ColumnName.ToString.Trim = "RUC" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                            Continue For
                        End If
                        If odtDetalle.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = stylePorcentaje
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda) / 100)
                            Continue For
                        End If

                        If TypoDato.Equals("System.Decimal") Or TypoDato.Equals("System.Int32") Or TypoDato.Equals("System.Double") Or TypoDato.Equals("System.Integer") Then

                            If TypoDato.Equals("System.Decimal") Or TypoDato.Equals("System.Double") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleMonto
                                If celda Is "" Then
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue("")
                                Else
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(Val(celda)))
                                End If

                            Else
                                If celda Is "" Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleNumber
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue("")
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleNumber
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToInt64(Val(celda)))
                                End If
                            End If
                            '****
                        Else
                            If TypoDato.Equals("System.Date") Then
                                celda = String.Format("{0:yyyy/MM/dd}", CDate(celda))
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleFecha
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                            ElseIf TypoDato.Equals("System.DateTime") Then
                                If celda <> "" Then
                                    celda = String.Format("{0:yyyy/MM/dd}", CDate(celda))
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleFecha
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(celda)
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = style
                                End If

                            Else
                                If celda Is DBNull.Value Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue("")
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = style
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(celda)
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = style
                                End If

                            End If
                        End If
                    Next
                Next
                rowActual = rowActual + odtDetalle.Rows.Count + 2
                '===================Se Carga El Resumen=============================
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.CreateRow(rowActual + 1)
                For i As Integer = 1 To 7
                    objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                Next
                objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("RESUMEN SERVICIOS")
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 1, rowActual, 7))
                rowActual = rowActual + 1
                objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("Cod. Tarifa")
                objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("Descripción")
                objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Moneda")
                objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue("Tarifa")
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue("Cantidad")
                objWorkSheet.GetRow(rowActual).GetCell(6).SetCellValue("Monto Soles")
                objWorkSheet.GetRow(rowActual).GetCell(7).SetCellValue("Monto Dolares")
                rowActual = rowActual + 1
                For i As Integer = 0 To odtResumen.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To odtResumen.Columns.Count - 1
                        Dim celda As String = odtResumen.Rows(i).Item(x).ToString().Trim()
                        Dim TypoDato As String = odtResumen.Columns.Item(x).DataType.ToString
                        Dim posCelda As Integer = x + 1
                        If TypoDato.Equals("System.Decimal") Or TypoDato.Equals("System.Int32") Or TypoDato.Equals("System.Double") Or TypoDato.Equals("System.Integer") Then

                            If TypoDato.Equals("System.Decimal") Or TypoDato.Equals("System.Double") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleMonto
                                If celda Is "" Then
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue("")
                                Else
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(Convert.ToDouble(Val(celda)))
                                End If

                            Else
                                If celda Is "" Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleNumber
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue("")
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleNumber
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(Convert.ToInt64(Val(celda)))
                                End If
                            End If
                            '****
                        Else
                            If TypoDato.Equals("System.Date") Then
                                celda = String.Format("{0:yyyy/MM/dd}", CDate(celda))
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleFecha
                                objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(celda)
                            ElseIf TypoDato.Equals("System.DateTime") Then
                                If celda <> "" Then
                                    celda = String.Format("{0:yyyy/MM/dd}", CDate(celda))
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleFecha
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(celda)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).SetCellValue(celda)
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).CellStyle = style
                                End If

                            Else
                                If celda Is DBNull.Value Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).SetCellValue("")
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).CellStyle = style
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).SetCellValue(celda)
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).CellStyle = style
                                End If

                            End If
                        End If



                    Next
                Next

                Dim cIniS As String
                Dim cIniD As String
                cIniS = "G" & (rowActual).ToString
                cIniD = "H" & (rowActual).ToString

                rowActual = objWorkSheet.LastRowNum + 1
                Dim cFinS As String
                Dim cFinD As String
                cFinS = "G" & (rowActual).ToString
                cFinD = "H" & (rowActual).ToString
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).CreateCell(6).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual).CreateCell(7).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue("Total")
                Dim dblTotalSoles As String = "SUM(" & cIniS & ":" & cFinS & ")"
                Dim dblTotalDolares As String = "SUM(" & cIniD & ":" & cFinD & ")"
                objWorkSheet.GetRow(rowActual).GetCell(6).CellFormula() = (dblTotalSoles)
                objWorkSheet.GetRow(rowActual).GetCell(7).CellFormula() = (dblTotalDolares)
                '===================================================================
                If odtResLote.Rows.Count > 0 Then
                    '===================Se Carga El Resumen por Lote====================
                    rowActual += 2
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.CreateRow(rowActual + 1)
                    For i As Integer = 2 To 5
                        objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                        objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                    Next
                    objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("RESUMEN POR LOTE")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 2, rowActual, 5))
                    rowActual += 1
                    For x As Integer = 0 To odtResLote.Columns.Count - 1
                        objWorkSheet.GetRow(rowActual).GetCell(x + 2).SetCellValue(odtResLote.Columns(x).ColumnName)
                    Next
                    rowActual += 1
                    For i As Integer = 0 To odtResLote.Rows.Count - 1
                        objWorkSheet.CreateRow(i + rowActual)
                        For x As Integer = 0 To odtResLote.Columns.Count - 1
                            Dim celda As String = odtResLote.Rows(i).Item(x).ToString().Trim()
                            Select Case odtResLote.Columns(x).ColumnName
                                Case "SOLES", "DOLARES"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = styleMonto
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda))
                                Case "LOTE", "MONEDA"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = style
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(celda)
                            End Select
                        Next
                    Next

                    '=======suma los totales del lote==================
                    cIniS = String.Empty
                    cIniD = String.Empty
                    dblTotalSoles = 0
                    dblTotalDolares = 0

                    cIniS = "E" & (rowActual + 1).ToString
                    cIniD = "F" & (rowActual + 1).ToString
                    rowActual = rowActual + odtResLote.Rows.Count + 1
                    cFinS = String.Empty
                    cFinD = String.Empty
                    cFinS = "E" & (rowActual).ToString
                    cFinD = "F" & (rowActual).ToString
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Total")
                    dblTotalSoles = "SUM(" & cIniS & ":" & cFinS & ")"
                    dblTotalDolares = "SUM(" & cIniD & ":" & cFinD & ")"
                    objWorkSheet.GetRow(rowActual).GetCell(4).CellFormula() = (dblTotalSoles)
                    objWorkSheet.GetRow(rowActual).GetCell(5).CellFormula() = (dblTotalDolares)

                End If

                '=======RESUMEN DE CUENTA DE IMPUTACION============================

                '===================================================================
                If odtCI.Rows.Count > 0 Then
                    '===================Se Carga El Resumen por CI====================
                    rowActual += 2
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.CreateRow(rowActual + 1)
                    For i As Integer = 2 To 5
                        objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                        objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                    Next
                    objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("RESUMEN POR CUENTA IMPUTACION")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 2, rowActual, 5))
                    rowActual += 1
                    For x As Integer = 0 To odtCI.Columns.Count - 1
                        objWorkSheet.GetRow(rowActual).GetCell(x + 2).SetCellValue(odtCI.Columns(x).ColumnName)
                    Next
                    rowActual += 1
                    For i As Integer = 0 To odtCI.Rows.Count - 1
                        objWorkSheet.CreateRow(i + rowActual)
                        For x As Integer = 0 To odtCI.Columns.Count - 1
                            Dim celda As String = odtCI.Rows(i).Item(x).ToString().Trim()
                            Select Case odtCI.Columns(x).ColumnName
                                Case "SOLES", "DOLARES"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = styleMonto
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda))
                                Case "CI", "MONEDA"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = style
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(celda)
                                Case "PORCENTAJE"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = stylePorcentaje
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda) / 100)
                            End Select
                        Next
                    Next

                    '=======suma los totales de CI ==================
                    cIniS = String.Empty
                    cIniD = String.Empty
                    dblTotalSoles = 0
                    dblTotalDolares = 0

                    cIniS = "E" & (rowActual + 1).ToString
                    cIniD = "F" & (rowActual + 1).ToString
                    rowActual = rowActual + odtCI.Rows.Count + 1
                    cFinS = String.Empty
                    cFinD = String.Empty
                    cFinS = "E" & (rowActual).ToString
                    cFinD = "F" & (rowActual).ToString
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Total")
                    dblTotalSoles = "SUM(" & cIniS & ":" & cFinS & ")"
                    dblTotalDolares = "SUM(" & cIniD & ":" & cFinD & ")"
                    objWorkSheet.GetRow(rowActual).GetCell(4).CellFormula() = (dblTotalSoles)
                    objWorkSheet.GetRow(rowActual).GetCell(5).CellFormula() = (dblTotalDolares)

                End If

                '===================================================================          
                'Redimensiono tamaño de columnas automaticamente
                For z As Integer = 0 To odtDetalle.Columns.Count - 1
                    objWorkSheet.AutoSizeColumn(z, True)
                Next


            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub

    Public Shared Sub ExportExcel_Consistencia(ByVal oDs As DataSet, ByVal linea2 As String, Optional ByVal sTipo As String = "", _
                                      Optional ByVal SoloDetalle As Boolean = False, Optional ByVal strTipoItem As String = "I", _
                                      Optional ByVal CantDetalles As Integer = 1, Optional ByVal oDtReem As DataTable = Nothing, _
                                      Optional ByVal bolTipoRevisado As Boolean = False, Optional ByVal TipoAlmSimple As Boolean = False)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)


            For intTable As Integer = 0 To oDs.Tables.Count - 1

                If intTable > 1 And oDtReem Is Nothing Then Exit For

                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCabColor As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim stylePorcentaje As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontTitulo.FontHeight = 180

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontFiltro.FontHeight = 165

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 165

                Dim oFontCabColor As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCabColor.Color = NPOI.HSSF.Util.HSSFColor.LIGHT_YELLOW.index
                oFontCabColor.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCabColor.FontHeight = 165

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 170

                Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
                Estilos_Excel_NPOI(styleCabColor, FORMATO.Cabecera)
                Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
                Estilos_Excel_NPOI(style, FORMATO.Normal)
                Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
                Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
                Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
                Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
                Estilos_Excel_NPOI(stylePorcentaje, FORMATO.Porcentaje)
                '============================================
                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                styleCabColor.SetFont(oFontCabColor)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontTitulo)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                stylePorcentaje.SetFont(oFont)

                objWorkSheet = objWorkBook.CreateSheet(IIf(intTable = 0, "Detalle1", IIf(intTable = 1, "Detalle2", "Detalle3")))
                objWorkSheet.CreateRow(3)
                If oDtReem IsNot Nothing Then
                    If oDtReem.Columns.Count > 0 Then
                        If Not oDtReem.Columns("NGUITR1") Is Nothing Then oDtReem.Columns("NGUITR1").ColumnName = "Guía de Transporte"
                        If Not oDtReem.Columns("TCMTRT") Is Nothing Then oDtReem.Columns("TCMTRT").ColumnName = "Empresa de Transporte"
                        If Not oDtReem.Columns("FEMVLH") Is Nothing Then oDtReem.Columns("FEMVLH").ColumnName = "Fecha de Zarpe"
                        If Not oDtReem.Columns("EMBARCACION") Is Nothing Then oDtReem.Columns("EMBARCACION").ColumnName = "Embarcación"
                    End If
                End If

                Dim odtDetalle As New DataTable
                If Not oDs.Tables("Detalle").Columns("NGUITR1") Is Nothing Then oDs.Tables("Detalle").Columns("NGUITR1").ColumnName = "Guía de Transporte"
                If Not oDs.Tables("Detalle").Columns("TCMTRT") Is Nothing Then oDs.Tables("Detalle").Columns("TCMTRT").ColumnName = "Empresa de Transporte"
                If Not oDs.Tables("Detalle").Columns("FEMVLH") Is Nothing Then oDs.Tables("Detalle").Columns("FEMVLH").ColumnName = "Fecha de Zarpe"
                If Not oDs.Tables("Detalle").Columns("EMBARCACION") Is Nothing Then oDs.Tables("Detalle").Columns("EMBARCACION").ColumnName = "Embarcación"
                odtDetalle = oDs.Tables("Detalle")
                Dim rowActual As Integer = 4

                If intTable = 0 Then

                    '================se carga las consistencias en forma horizontal===============

                    Dim ord As Integer = 0
                    Dim odtTarifa As New DataTable
                    Dim columnFinal As Integer = 0
                    Dim columnIniTarifa As Integer = 0
                    If Not oDs.Tables("Detalles").Columns("Guía de Transporte") Is Nothing Then

                        ord = oDs.Tables("Detalles").Columns("Guía de Transporte").Ordinal
                    End If
                    If Not oDs.Tables("Detalles").Columns("Empresa de Transporte") Is Nothing Then
                        oDs.Tables("Detalles").Columns("Empresa de Transporte").SetOrdinal(ord + 1)
                    End If
                    If Not oDs.Tables("Detalles").Columns("Fecha de Zarpe") Is Nothing Then
                        oDs.Tables("Detalles").Columns("Fecha de Zarpe").SetOrdinal(ord + 2)
                    End If
                    If Not oDs.Tables("Detalles").Columns("Embarcación") Is Nothing Then
                        oDs.Tables("Detalles").Columns("Embarcación").SetOrdinal(ord + 3)
                    End If
                    If Not oDs.Tables("Detalles").Columns("MONEDA") Is Nothing Then
                        oDs.Tables("Detalles").Columns("MONEDA").SetOrdinal(ord + 4)
                    End If

                    If sTipo = "RE" Then
                        columnFinal = oDs.Tables("Detalles").Columns.Count - 11
                        columnIniTarifa = IIf(bolTipoRevisado, 17, 16)
                    Else
                        If sTipo = "SL" Then
                            columnFinal = oDs.Tables("Detalles").Columns.Count - 7
                            columnIniTarifa = IIf(bolTipoRevisado, 29, 28)
                        Else
                            If TipoAlmSimple Then

                                columnFinal = oDs.Tables("Detalles").Columns.Count - 10
                                columnIniTarifa = IIf(bolTipoRevisado, 18, 17)
                            Else
                                If strTipoItem <> "I" Then
                                    columnFinal = oDs.Tables("Detalles").Columns.Count - 18
                                    columnIniTarifa = IIf(bolTipoRevisado, 27, 26)

                                Else
                                    columnFinal = oDs.Tables("Detalles").Columns.Count - 13
                                    columnIniTarifa = IIf(bolTipoRevisado, 32, 31)
                                End If


                            End If

                        End If
                    End If



                    'Columnas Dinamicas siempre inician aca
                    Dim columnActual As Integer = 0
                    Dim celda As String = ""
                    Dim cantRecep As Integer = 0
                    Dim cantDesp As Integer = 0
                    Dim cantOtros As Integer = 0
                    Dim tipoServ As String = ""
                    Dim valorCab As String = ""
                    Dim iniRowDet As Integer = 0
                    Dim finRowDet As Integer = 0
                    Dim opeTempIni As String = ""
                    Dim opeTempCom As String = ""

                    odtDetalle = oDs.Tables("Detalles")
                    odtTarifa = oDs.Tables("Tarifas")




                    Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                    'create the anchor
                    Dim anchor As HSSFClientAnchor
                    anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, 0, 0, 0)
                    If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                        'load the picture and get the picture index in the workbook
                        Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                        'Reset the image to the original size.
                        picture.Resize(0.5)
                    End If
                    rowActual = rowActual + 1
                    '===========Titulo es centrado segun tamaño de grilla===========                  
                    objWorkSheet.CreateRow(rowActual).Height = 400
                    objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = styleFiltro
                    objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("REPORTE DETALLE FACTURACION")
                    objWorkSheet.AddMergedRegion((New NPOI.SS.Util.Region(rowActual, 1, rowActual, 6)))
                    objWorkSheet.GetRow(rowActual).CreateCell(columnFinal).CellStyle = styleFiltro
                    objWorkSheet.GetRow(rowActual).GetCell(columnFinal).SetCellValue("Fecha: " & Format(Now, "dd-MM-yyyy"))
                    objWorkSheet.AddMergedRegion((New NPOI.SS.Util.Region(rowActual, columnFinal, rowActual, columnFinal + 1)))
                    rowActual = rowActual + 1


                    Dim odtFiltro As New DataTable
                    odtFiltro = oDs.Tables("Filtro")

                    Dim valorFiltro As String = ""
                    For i As Integer = 0 To odtFiltro.Rows.Count - 1
                        If i = 3 Then
                            objWorkSheet.CreateRow(rowActual).Height = 400
                        Else
                            objWorkSheet.CreateRow(rowActual)
                        End If

                        objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = style
                        valorFiltro = odtFiltro.Rows(i).Item("Filtro")
                        objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(valorFiltro)
                        valorFiltro = odtFiltro.Rows(i).Item("Valor")
                        objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue(valorFiltro)
                        If i <= odtFiltro.Rows.Count - 2 Then rowActual = rowActual + 1
                    Next


                    '' ''Creamos El emcabezado si son Despacho - Recepcion u Otros
                    For x As Integer = 0 To odtTarifa.Columns.Count - 1
                        tipoServ = odtTarifa.Columns(x).Caption.ToString.Split("-")(1)
                        Select Case tipoServ
                            Case "RECEPCION"
                                cantRecep += 1
                            Case "DESPACHO"
                                cantDesp += 1
                            Case Else
                                cantOtros += 1
                        End Select
                    Next
                    For i As Integer = 0 To cantRecep - 1
                        objWorkSheet.GetRow(rowActual).CreateCell(columnIniTarifa + i).CellStyle = styleCab
                    Next
                    If cantRecep > 0 Then
                        objWorkSheet.GetRow(rowActual).GetCell(columnIniTarifa).SetCellValue("SERVICIOS P/ RECEPCIONES")
                        objWorkSheet.AddMergedRegion((New NPOI.SS.Util.Region(rowActual, columnIniTarifa, rowActual, columnIniTarifa + cantRecep - 1)))
                    End If
                    For i As Integer = 0 To cantDesp - 1
                        objWorkSheet.GetRow(rowActual).CreateCell(columnIniTarifa + cantRecep + i).CellStyle = styleCab
                    Next
                    If cantDesp > 0 Then
                        objWorkSheet.GetRow(rowActual).GetCell(columnIniTarifa + cantRecep).SetCellValue("SERVICIOS P/ DESPACHOS")
                        objWorkSheet.AddMergedRegion((New NPOI.SS.Util.Region(rowActual, columnIniTarifa + cantRecep, rowActual, columnIniTarifa + cantRecep + cantDesp - 1)))
                    End If
                    For i As Integer = 0 To cantOtros - 1
                        objWorkSheet.GetRow(rowActual).CreateCell(columnIniTarifa + cantRecep + cantDesp + i).CellStyle = styleCab
                    Next
                    If cantOtros > 0 Then
                        objWorkSheet.GetRow(rowActual).GetCell(columnIniTarifa + cantRecep + cantDesp).SetCellValue("OTROS")
                        objWorkSheet.AddMergedRegion((New NPOI.SS.Util.Region(rowActual, columnIniTarifa + cantRecep + cantDesp, rowActual, columnIniTarifa + cantRecep + cantDesp + cantOtros - 1)))
                    End If
                    rowActual += 1
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.GetRow(rowActual).CreateCell(columnIniTarifa - 1).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual).GetCell(columnIniTarifa - 1).SetCellValue("TARIFA USD. ")
                    '===============Cargamos las Tarifas Existentes=================
                    For i As Integer = 0 To odtTarifa.Rows.Count - 1
                        For x As Integer = 0 To odtTarifa.Columns.Count - 1
                            columnActual = x + columnIniTarifa
                            objWorkSheet.GetRow(rowActual).CreateCell(columnActual).CellStyle = styleMonto
                            celda = odtTarifa.Rows(i).Item(x)
                            objWorkSheet.GetRow(rowActual).GetCell(columnActual).SetCellValue(CDbl(celda))
                        Next
                    Next
                    rowActual += 1
                    '===================Se cargan Las Cabeceras=====================
                    objWorkSheet.CreateRow(rowActual)
                    For x As Integer = 0 To odtDetalle.Columns.Count - 1
                        '===Estilo===
                        If x > columnFinal Then Continue For
                        columnActual = x + 1
                        If x <= 3 Then
                            objWorkSheet.GetRow(rowActual).CreateCell(columnActual).CellStyle = styleCabColor
                            objWorkSheet.GetRow(rowActual).GetCell(columnActual).CellStyle.WrapText = True
                        Else
                            'objWorkSheet.GetRow(rowActual).CreateCell(columnActual).CellStyle = styleCab
                        End If

                        If x >= columnIniTarifa - 1 And x < columnFinal Then 'para los servicios generados pintamos el segundo parrafo de tarifas

                            valorCab = odtDetalle.Columns(x).ColumnName.ToString().Trim().Split("-")(1)
                            objWorkSheet.GetRow(rowActual).CreateCell(columnActual).CellStyle = styleCabColor
                            objWorkSheet.GetRow(rowActual).GetCell(columnActual).CellStyle.WrapText = True
                        Else
                            If x > 3 Then
                                objWorkSheet.GetRow(rowActual).CreateCell(columnActual).CellStyle = styleCab
                                objWorkSheet.GetRow(rowActual).GetCell(columnActual).CellStyle.WrapText = True
                            End If
                            valorCab = odtDetalle.Columns(x).ColumnName.ToString().Trim()
                        End If
                        objWorkSheet.GetRow(rowActual).GetCell(columnActual).SetCellValue(valorCab)
                    Next
                    rowActual += 1
                    '===================Se Carga El Detalle==========================
                    iniRowDet = rowActual + 1
                    For i As Integer = 0 To odtDetalle.Rows.Count - 1
                        objWorkSheet.CreateRow(i + rowActual)
                        If odtDetalle.Columns(1).Caption = "NOPRCN" Then 'Validacion de Operaciones Repetidas
                            If (i = 0 OrElse opeTempIni <> opeTempCom) Then
                                opeTempIni = odtDetalle.Rows(i).Item(1)
                            End If
                        End If
                        For x As Integer = 0 To odtDetalle.Columns.Count - 1
                            If x > columnFinal Then Continue For
                            columnActual = x + 1
                            celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                            If i > 0 And odtDetalle.Columns(x).Caption = "NOPRCN" Then 'A partir del segundo registro empieza a validar
                                opeTempCom = celda
                                If opeTempIni = celda Then 'Si se repite operacion  Pintar Blanco
                                    'celda = ""
                                End If
                            End If
                            If odtDetalle.Columns(x).Caption = "GUIA" Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(columnActual).CellStyle = style
                                objWorkSheet.GetRow(i + rowActual).GetCell(columnActual).SetCellValue(celda.ToString)
                                Continue For
                            End If
                            If IsNumeric(celda) And celda = "0" Then celda = " "

                            If IsNumeric(celda) Then
                                If celda.Contains(".") Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(columnActual).CellStyle = styleMonto
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(columnActual).CellStyle = styleNumber
                                End If
                                If x = 0 Then
                                    objWorkSheet.GetRow(i + rowActual).GetCell(columnActual).SetCellValue(celda.ToString)
                                Else
                                    If celda.Substring(0, 1) = "0" And celda.Contains(".") And celda.Length > 1 Then
                                        objWorkSheet.GetRow(i + rowActual).GetCell(columnActual).SetCellValue(Convert.ToDouble(celda))
                                    ElseIf celda.Substring(0, 1) = "0" And celda.Length > 0 Then
                                        objWorkSheet.GetRow(i + rowActual).GetCell(columnActual).SetCellValue(celda.ToString)
                                    Else
                                        objWorkSheet.GetRow(i + rowActual).GetCell(columnActual).SetCellValue(Convert.ToDouble(celda))
                                    End If
                                End If
                            Else
                                If IsDate(celda) Then
                                    celda = String.Format("{0:d}", CDate(celda))
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(columnActual).CellStyle = styleFecha
                                    objWorkSheet.GetRow(i + rowActual).GetCell(columnActual).SetCellValue(celda)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(columnActual).SetCellValue(celda.ToString.Trim)
                                    objWorkSheet.GetRow(i + rowActual).GetCell(columnActual).CellStyle = style
                                End If
                            End If
                        Next
                    Next
                    finRowDet = rowActual + odtDetalle.Rows.Count
                    objWorkSheet.CreateRow(finRowDet)
                    Dim cTarif As String
                    Dim cIni As String
                    Dim cFin As String
                    Dim sumTota As String = ""
                    For i As Integer = columnIniTarifa To columnFinal + 1
                        If i = columnFinal + 1 Then
                            cTarif = 1 'Para no afectar la multiplicacion
                        Else
                            cTarif = LetraNumero_NPOI(i + 1) & (iniRowDet - 2).ToString 'Multiplica por la tarifa aplicada
                        End If
                        cIni = LetraNumero_NPOI(i + 1) & (iniRowDet).ToString
                        cFin = LetraNumero_NPOI(i + 1) & (finRowDet).ToString
                        If odtDetalle.Rows.Count <> 0 Then
                            sumTota = "SUM(" & cIni & ":" & cFin & ")*" & cTarif
                        Else
                            sumTota = "0"
                        End If
                        objWorkSheet.GetRow(finRowDet).CreateCell(i).CellStyle = styleMonto
                        objWorkSheet.GetRow(finRowDet).GetCell(i).CellFormula = (sumTota)
                    Next

                    'Redimensiono tamaño de columnas automaticamente
                    For z As Integer = 0 To oDs.Tables(intTable).Columns.Count - 1
                        If z < columnIniTarifa Then
                            objWorkSheet.AutoSizeColumn(z, True)
                        Else
                            objWorkSheet.DefaultColumnWidth = 10
                        End If
                    Next

                Else
                    '==================se carga la consistencia el forma vertical========================
                    Dim opeTempIni As String = ""
                    Dim opeTempCom As String = ""



                    Dim odtFiltro As New DataTable
                    odtFiltro = oDs.Tables("Filtro")

                    Dim odtResumen As New DataTable
                    odtResumen = oDs.Tables(4)

                    Dim odtResLote As New DataTable
                    If oDs.Tables.Count >= 6 Then

                        odtResLote = oDs.Tables(5)
                    End If

                    Dim odtCI As New DataTable
                    If oDs.Tables.Count = 7 Then odtCI = oDs.Tables(6)





                    If oDtReem IsNot Nothing And intTable = 1 Then
                        odtDetalle = oDtReem
                    Else
                        odtDetalle = oDs.Tables("Detalle")
                    End If

                    Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                    'create the anchor
                    Dim anchor As HSSFClientAnchor
                    anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, 0, _
                     0, 0)
                    If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                        'load the picture and get the picture index in the workbook
                        Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                        'Reset the image to the original size.
                        picture.Resize(0.5)
                    End If
                    If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
                        'load the picture and get the picture index in the workbook
                        Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
                        'Reset the image to the original size.
                        picture.Resize(0.5)
                    End If

                    Dim valorFiltro As String = ""
                    For i As Integer = 0 To odtFiltro.Rows.Count - 1
                        objWorkSheet.CreateRow(rowActual)
                        objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = style
                        valorFiltro = odtFiltro.Rows(i).Item("Filtro")
                        objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(valorFiltro)
                        valorFiltro = odtFiltro.Rows(i).Item("Valor")
                        objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue(valorFiltro)
                        rowActual = rowActual + 1
                    Next
                    rowActual = rowActual + 1
                    '===========Titulo es centrado segun tamaño de grilla===========                  
                    objWorkSheet.CreateRow(rowActual).Height = 400
                    objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue("Reporte Consistencia")
                    objWorkSheet.AddMergedRegion((New NPOI.SS.Util.Region(rowActual, 0, rowActual, odtDetalle.Columns.Count - 1)))
                    rowActual = rowActual + 1
                    '===================Se cargan Las Cabeceras=====================
                    objWorkSheet.CreateRow(rowActual)
                    For x As Integer = 0 To odtDetalle.Columns.Count - 1
                        '===Estilo===
                        objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = styleCab
                        Dim valorCab As String = odtDetalle.Columns(x).ColumnName.ToString().Trim()
                        objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCab)
                    Next
                    rowActual = rowActual + 1

                    '===================Se Carga El Detalle==========================
                    For i As Integer = 0 To odtDetalle.Rows.Count - 1
                        objWorkSheet.CreateRow(i + rowActual)

                        For x As Integer = 0 To odtDetalle.Columns.Count - 1
                            Dim celda As String = odtDetalle.Rows(i).Item(x).ToString().Trim()
                            If i = 0 And odtDetalle.Columns(x).ColumnName = "Operacion" Then 'COGE EL PRIMER registro 
                                opeTempIni = celda
                            End If
                            If i > 0 And odtDetalle.Columns(x).ColumnName = "Operacion" Then 'A partir del segundo registro empieza a validar
                                opeTempCom = celda
                                If opeTempCom = opeTempIni Then 'Si se repite operacion  Pintar Blanco
                                    celda = ""
                                Else
                                    opeTempIni = celda
                                End If
                            End If
                            If odtDetalle.Columns(x).ColumnName.ToString.Trim = "OC" Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = style
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                                Continue For
                            End If

                            If IsNumeric(celda) And celda = "0" Or celda = "0.000" Then celda = " "
                            If IsNumeric(celda) Then
                                If celda.Contains(".") Then
                                    ' objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleMonto
                                    If odtDetalle.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Or odtDetalle.Columns(x).ColumnName.ToString.Trim = "FEE" Then
                                        objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = stylePorcentaje
                                    Else
                                        objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleMonto
                                    End If
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleNumber

                                End If
                                If x = 0 Then
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                                Else
                                    If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                                        objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                                    ElseIf celda.Length > 10 Then
                                        objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                                    Else

                                        If odtDetalle.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Or odtDetalle.Columns(x).ColumnName.ToString.Trim = "FEE" Then
                                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda) / 100)
                                        Else
                                            If odtDetalle.Columns(x).ColumnName.ToString.Trim = "T/C" Then
                                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                                            Else
                                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                                            End If

                                        End If

                                    End If
                                End If
                            Else
                                If IsDate(celda) Then
                                    celda = String.Format("{0:d}", CDate(celda))
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleFecha
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(celda.ToString.Trim) 'odtDetalle.Rows(i).Item(x).ToString().Trim()
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = style
                                End If
                            End If
                        Next
                    Next
                    rowActual = rowActual + odtDetalle.Rows.Count + 2
                    '===================Se Carga El Resumen=============================
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.CreateRow(rowActual + 1)
                    For i As Integer = 1 To 7
                        objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                        objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                    Next
                    objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("RESUMEN SERVICIOS")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 1, rowActual, 7))
                    rowActual = rowActual + 1
                    objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("Cod. Tarifa")
                    objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("Descripción")
                    objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Moneda")
                    objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue("Tarifa")
                    objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue("Cantidad")
                    objWorkSheet.GetRow(rowActual).GetCell(6).SetCellValue("Monto Soles")
                    objWorkSheet.GetRow(rowActual).GetCell(7).SetCellValue("Monto Dolares")
                    rowActual = rowActual + 1
                    For i As Integer = 0 To odtResumen.Rows.Count - 1
                        objWorkSheet.CreateRow(i + rowActual)
                        For x As Integer = 0 To odtResumen.Columns.Count - 1
                            Dim celda As String = odtResumen.Rows(i).Item(x).ToString().Trim()
                            Dim posCelda As Integer = x + 1
                            If IsNumeric(celda) Then
                                If celda.Contains(".") Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleMonto
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleNumber
                                End If
                                objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(Convert.ToDouble(celda))
                            Else
                                If IsDate(celda) Then
                                    celda = String.Format("{0:d}", CDate(celda))
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleFecha
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(celda)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).SetCellValue(odtResumen.Rows(i).Item(x).ToString().Trim())
                                    objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).CellStyle = style
                                End If
                            End If
                        Next
                    Next
                    Dim cIniS As String
                    Dim cIniD As String
                    cIniS = "G" & (rowActual).ToString
                    cIniD = "H" & (rowActual).ToString
                    'rowActual = rowActual + odtResumen.Rows.Count + 1
                    rowActual = objWorkSheet.LastRowNum + 1
                    Dim cFinS As String
                    Dim cFinD As String
                    cFinS = "G" & (rowActual).ToString
                    cFinD = "H" & (rowActual).ToString
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual).CreateCell(6).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).CreateCell(7).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue("Total")
                    Dim dblTotalSoles As String = "SUM(" & cIniS & ":" & cFinS & ")"
                    Dim dblTotalDolares As String = "SUM(" & cIniD & ":" & cFinD & ")"
                    objWorkSheet.GetRow(rowActual).GetCell(6).CellFormula() = (dblTotalSoles)
                    objWorkSheet.GetRow(rowActual).GetCell(7).CellFormula() = (dblTotalDolares)
                    '===================================================================
                    If odtResLote.Rows.Count > 0 Then
                        '===================Se Carga El Resumen por Lote====================
                        rowActual += 2
                        objWorkSheet.CreateRow(rowActual)
                        objWorkSheet.CreateRow(rowActual + 1)
                        For i As Integer = 2 To 5
                            objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                            objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                        Next
                        objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("RESUMEN POR LOTE")
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 2, rowActual, 5))
                        rowActual += 1
                        For x As Integer = 0 To odtResLote.Columns.Count - 1
                            objWorkSheet.GetRow(rowActual).GetCell(x + 2).SetCellValue(odtResLote.Columns(x).ColumnName)
                        Next
                        rowActual += 1
                        For i As Integer = 0 To odtResLote.Rows.Count - 1
                            objWorkSheet.CreateRow(i + rowActual)
                            For x As Integer = 0 To odtResLote.Columns.Count - 1
                                Dim celda As String = odtResLote.Rows(i).Item(x).ToString().Trim()
                                Select Case odtResLote.Columns(x).ColumnName
                                    Case "SOLES", "DOLARES"
                                        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = styleMonto
                                        objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda))
                                    Case "LOTE", "MONEDA"
                                        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = style
                                        objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(celda)
                                End Select
                            Next
                        Next
                        '=======suma los totales del lote==================
                        cIniS = String.Empty
                        cIniD = String.Empty
                        dblTotalSoles = 0
                        dblTotalDolares = 0

                        cIniS = "E" & (rowActual).ToString
                        cIniD = "F" & (rowActual).ToString
                        rowActual = objWorkSheet.LastRowNum + 1
                        cFinS = String.Empty
                        cFinD = String.Empty
                        cFinS = "E" & (rowActual).ToString
                        cFinD = "F" & (rowActual).ToString
                        objWorkSheet.CreateRow(rowActual)
                        objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleCab
                        objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleMonto
                        objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleMonto
                        objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Total")
                        dblTotalSoles = "SUM(" & cIniS & ":" & cFinS & ")"
                        dblTotalDolares = "SUM(" & cIniD & ":" & cFinD & ")"
                        objWorkSheet.GetRow(rowActual).GetCell(4).CellFormula() = (dblTotalSoles)
                        objWorkSheet.GetRow(rowActual).GetCell(5).CellFormula() = (dblTotalDolares)
                    End If



                    '=======RESUMEN DE CUENTA DE IMPUTACION============================

                    '===================================================================
                    If odtCI.Rows.Count > 0 Then
                        '===================Se Carga El Resumen por CI====================
                        rowActual += 2
                        objWorkSheet.CreateRow(rowActual)
                        objWorkSheet.CreateRow(rowActual + 1)
                        For i As Integer = 2 To 5
                            objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                            objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                        Next
                        objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("RESUMEN POR CUENTA IMPUTACION")
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 2, rowActual, 5))
                        rowActual += 1
                        For x As Integer = 0 To odtCI.Columns.Count - 1
                            objWorkSheet.GetRow(rowActual).GetCell(x + 2).SetCellValue(odtCI.Columns(x).ColumnName)
                        Next
                        rowActual += 1
                        For i As Integer = 0 To odtCI.Rows.Count - 1
                            objWorkSheet.CreateRow(i + rowActual)
                            For x As Integer = 0 To odtCI.Columns.Count - 1
                                Dim celda As String = odtCI.Rows(i).Item(x).ToString().Trim()
                                Select Case odtCI.Columns(x).ColumnName
                                    Case "SOLES", "DOLARES"
                                        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = styleMonto
                                        objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda))
                                    Case "CI", "MONEDA"
                                        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = style
                                        objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(celda)
                                        'Case "PORCENTAJE"
                                        '    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = stylePorcentaje
                                        '    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda) / 100)
                                End Select
                            Next
                        Next

                        '=======suma los totales de CI ==================

                        cIniS = String.Empty
                        cIniD = String.Empty
                        dblTotalSoles = 0
                        dblTotalDolares = 0

                        cIniS = "E" & (rowActual + 1).ToString
                        cIniD = "F" & (rowActual + 1).ToString
                        rowActual = rowActual + odtCI.Rows.Count + 1
                        cFinS = String.Empty
                        cFinD = String.Empty
                        cFinS = "E" & (rowActual).ToString
                        cFinD = "F" & (rowActual).ToString
                        objWorkSheet.CreateRow(rowActual)
                        objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleCab
                        objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleMonto
                        objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleMonto
                        objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Total")
                        dblTotalSoles = "SUM(" & cIniS & ":" & cFinS & ")"
                        dblTotalDolares = "SUM(" & cIniD & ":" & cFinD & ")"
                        objWorkSheet.GetRow(rowActual).GetCell(4).CellFormula() = (dblTotalSoles)
                        objWorkSheet.GetRow(rowActual).GetCell(5).CellFormula() = (dblTotalDolares)

                    End If


                    '===================================================================          
                    'Redimensiono tamaño de columnas automaticamente
                    For z As Integer = 0 To odtDetalle.Columns.Count - 1
                        objWorkSheet.AutoSizeColumn(z, True)
                    Next

                    'Next ' fin por cantidad de detalles

                End If

                If intTable = 2 Then
                    Exit For
                End If

            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub

    ''' <summary>
    ''' Exporta a Excel mediante DDL NPOI
    ''' </summary>
    ''' <param name="objListdt"></param>
    ''' <param name="title"></param>
    ''' <remarks></remarks>
    Public Shared Sub ExportExcel_ConTitulos(ByVal objListdt As List(Of DataTable), ByVal title As List(Of String), Optional ByVal filtro As Hashtable = Nothing)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls" 'xml
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            For Each odtg As DataTable In objListdt
                objWorkSheet = objWorkBook.CreateSheet(odtg.TableName)
                objWorkSheet.CreateRow(3)
                '=============Style======================
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
                oFontFiltro.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.FontHeight = 165

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 220

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 170

                Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
                oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontTitulo.FontHeight = 190

                styleFiltro.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFiltro.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFiltro.BorderRight = CellBorderType.THIN
                styleFiltro.BorderBottom = CellBorderType.THIN
                styleFiltro.BorderLeft = CellBorderType.THIN
                styleFiltro.BorderTop = CellBorderType.THIN
                styleFiltro.SetFont(oFontFiltro)
                styleFiltro.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleFiltro.FillPattern = FillPatternType.SOLID_FOREGROUND

                styleCab.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREEN.index
                styleCab.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                styleCab.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleCab.BorderRight = CellBorderType.THIN
                styleCab.BorderBottom = CellBorderType.THIN
                styleCab.BorderLeft = CellBorderType.THIN
                styleCab.BorderTop = CellBorderType.THIN
                styleCab.SetFont(oFontCab)
                styleCab.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleCab.FillPattern = FillPatternType.SOLID_FOREGROUND

                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREEN.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER

                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
                style.SetFont(oFont)
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND

                'styleTitulo.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREEN.index
                styleTitulo.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleTitulo.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
                styleTitulo.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleTitulo.SetFont(oFontTitulo)
                '===============================
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                styleNumber.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                styleNumber.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleNumber.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleNumber.BorderRight = CellBorderType.THIN
                styleNumber.BorderBottom = CellBorderType.THIN
                styleNumber.BorderLeft = CellBorderType.THIN
                styleNumber.BorderTop = CellBorderType.THIN

                styleNumber.SetFont(oFontFiltro)
                styleNumber.DataFormat = HSSFDataFormat.GetBuiltinFormat("#.##0,00")
                styleNumber.FillPattern = FillPatternType.SOLID_FOREGROUND
                '===============================
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                styleMonto.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                styleMonto.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleMonto.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleMonto.BorderRight = CellBorderType.THIN
                styleMonto.BorderBottom = CellBorderType.THIN
                styleMonto.BorderLeft = CellBorderType.THIN
                styleMonto.BorderTop = CellBorderType.THIN
                styleMonto.SetFont(oFontFiltro)
                styleMonto.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                styleMonto.FillPattern = FillPatternType.SOLID_FOREGROUND
                '===============================
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                styleFecha.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                styleFecha.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFecha.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFecha.BorderRight = CellBorderType.THIN
                styleFecha.BorderBottom = CellBorderType.THIN
                styleFecha.BorderLeft = CellBorderType.THIN
                styleFecha.BorderTop = CellBorderType.THIN
                styleFecha.SetFont(oFontFiltro)
                styleFecha.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleFecha.FillPattern = FillPatternType.SOLID_FOREGROUND
                '============================================
                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                'create the anchor
                Dim anchor As HSSFClientAnchor
                anchor = New HSSFClientAnchor(0, 0, 0, 50, 0, 0, _
                 0, 0)
                If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    ' picture.Resize()
                    picture.Resize(0.5)
                End If
                If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If
                Dim rowActual As Integer = 4
                '===============Titulo
                objWorkSheet.CreateRow(rowActual).Height = 100 * 2
                '===========================

                '===========Titulo es centrado segun tamaño de grilla===========
                'objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(title)
                'objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, odtg.Columns.Count - 1))
                '==============Verificamos Filtro a utilizar==================

                For intCont As Integer = 0 To title.Count - 1
                    Dim strDescripcionTitulo As String()
                    strDescripcionTitulo = Split(title.Item(intCont), "\n")

                    objWorkSheet.CreateRow(rowActual + 1)
                    objWorkSheet.GetRow(rowActual + 1).CreateCell(0).CellStyle = styleTitulo
                    objWorkSheet.GetRow(rowActual + 1).GetCell(0).SetCellValue(strDescripcionTitulo(0))

                    objWorkSheet.GetRow(rowActual + 1).CreateCell(1)
                    ' objWorkSheet.GetRow(rowActual + 1).CreateCell(1).CellStyle = style
                    objWorkSheet.GetRow(rowActual + 1).GetCell(1).SetCellValue(strDescripcionTitulo(1))

                    rowActual += 1
                Next
                objWorkSheet.CreateRow(rowActual + 1)
                rowActual += 1
                If filtro Is Nothing Then
                    rowActual = rowActual + 1
                Else
                    Dim x As Integer = 0
                    For Each items As DictionaryEntry In filtro
                        x = x + 1
                        objWorkSheet.CreateRow(rowActual + x)
                        objWorkSheet.GetRow(rowActual + x).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowActual + x).GetCell(0).SetCellValue(items.Key.ToString.Trim)

                        objWorkSheet.GetRow(rowActual + x).CreateCell(1).CellStyle = styleFiltro
                        objWorkSheet.GetRow(rowActual + x).GetCell(1).SetCellValue(items.Value.ToString.Trim)

                    Next
                    rowActual = rowActual + filtro.Count + 1
                End If
                '===================Se cargan Las Cabeceras=====================
                Dim flgCabDoble As Boolean = False
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To odtg.Columns.Count - 1
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = style
                    '===Valores===
                    Dim valorCab As String = odtg.Columns(x).ColumnName.ToString().Trim()
                    Dim valorCabDoble As String()
                    valorCabDoble = Split(valorCab, "\n")
                    If valorCabDoble.Length = 2 Then
                        flgCabDoble = True
                    Else
                        flgCabDoble = False
                    End If
                    objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCabDoble(0))
                Next
                rowActual = rowActual + 1
                If flgCabDoble = True Then
                    '==========Limpiamos los Cells Repetidos en el Row Anterior=========
                    For x As Integer = 0 To odtg.Columns.Count - 1
                        If x < odtg.Columns.Count - 1 Then
                            If objWorkSheet.GetRow(rowActual - 1).GetCell(x).StringCellValue = objWorkSheet.GetRow(rowActual - 1).GetCell(x + 1).StringCellValue Then
                                Dim valorTemp = objWorkSheet.GetRow(rowActual - 1).GetCell(x).StringCellValue
                                objWorkSheet.GetRow(rowActual - 1).GetCell(x + 1).SetCellValue("")
                                '===Union===
                                Dim Region As New NPOI.SS.Util.Region(rowActual - 1, x, rowActual - 1, x + 1)
                                objWorkSheet.AddMergedRegion(Region)
                            End If
                        End If
                    Next
                    '===================================================================
                    objWorkSheet.CreateRow(rowActual)
                    For x As Integer = 0 To odtg.Columns.Count - 1
                        '===Estilo===
                        objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = style
                        '===Valores===
                        Dim valorCab As String = odtg.Columns(x).ColumnName.ToString().Trim()
                        Dim valorCabDoble As String()
                        valorCabDoble = Split(valorCab, "\n")
                        If valorCabDoble.Length = 2 Then
                            objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCabDoble(1))
                        End If
                    Next
                    rowActual = rowActual + 1
                End If
                '===================Se Carga El Detalle============================
                For i As Integer = 0 To odtg.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To odtg.Columns.Count - 1
                        Dim celda As String = odtg.Rows(i).Item(x).ToString().Trim()
                        If IsNumeric(celda) Then
                            If celda.Contains(".") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleNumber
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            End If
                        Else
                            If IsDate(celda) Then
                                celda = String.Format("{0:d}", CDate(celda))
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleFecha
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(odtg.Rows(i).Item(x).ToString().Trim())
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = styleFiltro
                            End If
                        End If

                    Next
                Next

                Dim cIniV As String
                Dim cFinV As String
                cIniV = "G" & (12).ToString
                cFinV = "G" & (12 + odtg.Rows.Count - 1).ToString
                Dim dblTotalBultos As String = "SUM(" & cIniV & ":" & cFinV & ")"
                objWorkSheet.CreateRow(rowActual + odtg.Rows.Count)
                objWorkSheet.GetRow(rowActual + odtg.Rows.Count).CreateCell(6).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual + odtg.Rows.Count).GetCell(6).CellFormula = (dblTotalBultos)


                cIniV = "I" & (12).ToString
                cFinV = "I" & (12 + odtg.Rows.Count - 1).ToString
                Dim sumKg As String = "SUM(" & cIniV & ":" & cFinV & ")"
                objWorkSheet.GetRow(rowActual + odtg.Rows.Count).CreateCell(8).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual + odtg.Rows.Count).GetCell(8).CellFormula = (sumKg)


                '    objWorkSheet.GroupRow(rowActual, rowActual + odtg.Rows.Count)
                '===================================================================
                For z As Integer = 0 To odtg.Columns.Count - 1
                    objWorkSheet.AutoSizeColumn(z, True)
                Next
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub

    ''' <summary>
    ''' Exporta a Excel mediante DDL MOPI PlussPetrol Terrestre
    ''' </summary>
    ''' <param name="oDs"></param>
    ''' <param name="filtro"></param>
    ''' <param name="totales"></param>
    ''' <remarks></remarks>
    Public Shared Sub ExportExcelPP_Terrestre_Unitario(ByVal oDs As DataSet, Optional ByVal filtro As Hashtable = Nothing, Optional ByVal totales As Hashtable = Nothing)
        '=====================================================================
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)

            Dim oDtDetalle As DataTable = oDs.Tables("Terrestre")
            Dim oDtResCuenta As DataTable = oDs.Tables("ResCuenta")
            Dim oDtCI_x_OI As DataTable = oDs.Tables("CI_x_OS")
            Dim oDtDetAdicional As New DataTable
            objWorkSheet = objWorkBook.CreateSheet(oDtDetalle.TableName)
            objWorkSheet.CreateRow(3)
            '=============Stilos======================
            Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontFiltro.FontHeight = 165

            Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
            oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.FontHeight = 165

            Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.FontHeight = 170

            '============================================
            Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
            Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
            Estilos_Excel_NPOI(style, FORMATO.Normal)
            Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
            Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
            Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
            Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
            '============================================
            styleFiltro.SetFont(oFontFiltro)
            styleCab.SetFont(oFontCab)
            style.SetFont(oFont)
            styleTitulo.SetFont(oFontFiltro)
            styleNumber.SetFont(oFont)
            styleMonto.SetFont(oFont)
            styleFecha.SetFont(oFont)
            styleMontoCI.SetFont(oFont)
            '============================================
            '============================================
            Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
            'create the anchor
            Dim anchor As HSSFClientAnchor
            anchor = New HSSFClientAnchor(0, 0, 0, 100, 0, 0, 0, 0)
            Dim rutaImagen As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.PNG" 'logo.png -------------- 'Logo_Cargo_Plan.PNG
            If IO.File.Exists(rutaImagen) Then
                'load the picture and get the picture index in the workbook
                Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaImagen, objWorkBook)), HSSFPicture)
                'Reset the image to the original size.
                picture.Resize(0.7)
            End If
            Dim rowActual As Integer = 6
            '===============Titulo                
            Dim txtFiltro As String = ""
            objWorkSheet.CreateRow(rowActual)

            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("CARGO_PLAN")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 1))

            objWorkSheet.GetRow(rowActual).CreateCell(2).CellStyle = styleTitulo
            txtFiltro = filtro.Item("TITULO")
            objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue(txtFiltro)
            Dim Region As New NPOI.SS.Util.Region(rowActual, 2, rowActual, 4)
            objWorkSheet.AddMergedRegion(Region)

            objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
            txtFiltro = filtro.Item("ORIGEN")
            objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 6))
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)

            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("FECHA")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 1))

            objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleFiltro
            txtFiltro = filtro.Item("OPERACION")
            objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 3, rowActual, 4))

            objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
            txtFiltro = filtro.Item("DESTINO")
            objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 6))
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)

            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("CHOFER")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2))

            objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleFiltro
            txtFiltro = filtro.Item("BREVETE")
            objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 3, rowActual, 4))
            '==========validamos permiso para visualizar cotizacion==========
            If filtro.Item("VER_COTIZACION") = True Then
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
                If filtro.Item("TARIFA_MONEDA") = 0 Then
                    txtFiltro = "TARIFA :  " & filtro.Item("TARIFA_MONTO")
                Else
                    If filtro.Item("TARIFA_MONEDA") = 1 Then
                        txtFiltro = "TARIFA : S/. " & filtro.Item("TARIFA_MONTO")
                    Else
                        txtFiltro = "TARIFA : USD " & filtro.Item("TARIFA_MONTO")
                    End If
                End If
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 6))
            End If
            '================================================================
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)

            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("MARCA")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2))

            objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleFiltro
            txtFiltro = filtro.Item("PLACAS")
            objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 3, rowActual, 4))

            objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
            txtFiltro = filtro.Item("TCMTRT")
            objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 7))

            rowActual = rowActual + 1
            '====================================================================================
            '===================Se cargan Las Cabeceras==========================================
            objWorkSheet.CreateRow(rowActual)

            Dim ListaColExport As New List(Of String)
            ListaColExport.Add("ITEM")
            ListaColExport.Add("CLIENTE")
            ListaColExport.Add("GUIA_REMISION")
            ListaColExport.Add("MEDIO_ENVIO")
            ListaColExport.Add("PROVEEDOR")
            ListaColExport.Add("COD_PRODUCTO")
            ListaColExport.Add("GUIA_PROV")
            ListaColExport.Add("CONTENIDO")
            ListaColExport.Add("OC")
            ListaColExport.Add("LOTE")
            ListaColExport.Add("BULTOS")
            ListaColExport.Add("PESO")
            ListaColExport.Add("M3")
            ListaColExport.Add("PESO_VOL")
            ListaColExport.Add("POR")
            ListaColExport.Add("CUENTA_IMPUTACION")
            ListaColExport.Add("F_DE_INGRESO")
            ListaColExport.Add("POR_CI")

            If filtro.Item("VER_COTIZACION") = True Then
                ListaColExport.Add("TARIFA_X_CI")
                ListaColExport.Add("TARIFA")
              
            End If

            Dim PosLisExport As New Hashtable
            Dim iPosList As Integer = 0
            For Each Item As String In ListaColExport

                objWorkSheet.GetRow(rowActual).CreateCell(iPosList).CellStyle = styleCab
                '===Valores===
                Dim valorCab As String = Item
                objWorkSheet.GetRow(rowActual).GetCell(iPosList).SetCellValue(valorCab)
                PosLisExport(valorCab) = iPosList
                iPosList = iPosList + 1

            Next



            'For x As Integer = 0 To oDtDetalle.Columns.Count - 1
            '    '===Estilo===
            '    objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = styleCab
            '    '===Valores===
            '    Dim valorCab As String = oDtDetalle.Columns(x).ColumnName.ToString().Trim()
            '    objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCab)
            'Next
            'If filtro.Item("VER_COTIZACION") = True Then
            '    objWorkSheet.GetRow(rowActual).CreateCell(oDtDetalle.Columns.Count).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(oDtDetalle.Columns.Count).SetCellValue("TARIFA X CI")

            '    objWorkSheet.GetRow(rowActual).CreateCell(oDtDetalle.Columns.Count + 1).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(oDtDetalle.Columns.Count + 1).SetCellValue("TARIFA")
            'End If
            rowActual = rowActual + 1
            '===================Se Carga El Detalle=============
            Dim celda As String
            Dim rowPosition As Double = 0D
            Dim posDinamic As Integer = 0
            Dim ColName As String = ""
            Dim iPostList As Integer = 0
            For i As Integer = 0 To oDtDetalle.Rows.Count - 1
                posDinamic = rowActual + rowPosition
                objWorkSheet.CreateRow(posDinamic)


                For Each Item As String In ListaColExport

                    'Next
                    'For x As Integer = 0 To oDtDetalle.Columns.Count - 1
                    'If x < oDtDetalle.Columns.Count Then
                    '    celda = oDtDetalle.Rows(i).Item(x).ToString().Trim()
                    'Else
                    '    celda = 0
                    'End If
                    If Item = "TARIFA_X_CI" OrElse Item = "TARIFA" Then
                        Continue For
                    End If

                    celda = oDtDetalle.Rows(i).Item(Item).ToString().Trim()
                    iPosList = PosLisExport(Item)
                    'ListaColExport

                    Select Case Item
                        'Select Case oDtDetalle.Columns(x).ColumnName
                        Case "ITEM", "CLIENTE", "GUIA_REMISION", "PROVEEDOR", "COD_PRODUCTO", "GUIA_PROV", "CONTENIDO", "OC", "LOTE", "CUENTA_IMPUTACION", "MEDIO_ENVIO"
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).SetCellValue(celda)
                            'If oDtDetalle.Columns(x).ColumnName = "CUENTA_IMPUTACION" And Not IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).CellStyle = styleMontoCI
                            'Else
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).CellStyle = style
                            'End If
                            objWorkSheet.GetRow(posDinamic).CreateCell(iPosList).SetCellValue(celda)
                            If Item = "CUENTA_IMPUTACION" And Not IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(posDinamic).GetCell(iPosList).CellStyle = styleMontoCI
                            Else
                                objWorkSheet.GetRow(posDinamic).GetCell(iPosList).CellStyle = style
                            End If

                        Case "F_DE_INGRESO"
                            If celda <> "" And celda <> "00/00/0000" Then celda = String.Format("{0:d}", CDate(celda)) ' Valida los casos que tenga distribucion q llegan valores vacios o con formato incorrecto
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleFecha
                            'objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda)
                            objWorkSheet.GetRow(posDinamic).CreateCell(iPosList).CellStyle = styleFecha
                            objWorkSheet.GetRow(posDinamic).GetCell(iPosList).SetCellValue(celda)
                        Case "BULTOS"
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleNumber
                            'If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            'Else
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda)
                            'End If
                            objWorkSheet.GetRow(posDinamic).CreateCell(iPosList).CellStyle = styleNumber
                            If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                objWorkSheet.GetRow(posDinamic).GetCell(iPosList).SetCellValue(Convert.ToDouble(celda))
                            Else
                                objWorkSheet.GetRow(posDinamic).GetCell(iPosList).SetCellValue(celda)
                            End If

                        Case "PESO", "M3", "PESO_VOL"
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMonto
                            'If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            'Else
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda)
                            'End If
                            objWorkSheet.GetRow(posDinamic).CreateCell(iPosList).CellStyle = styleMonto
                            If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                objWorkSheet.GetRow(posDinamic).GetCell(iPosList).SetCellValue(Convert.ToDouble(celda))
                            Else
                                objWorkSheet.GetRow(posDinamic).GetCell(iPosList).SetCellValue(celda)
                            End If

                        Case "POR"
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMonto
                            'Dim valSubPor As Double = 0D
                            'If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                            '    valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            'Else
                            '    valSubPor = CDbl(oDtDetalle.Rows(i).Item("POR_CI")) * 0.01 'Se obtiene el porcentaje de distribucion
                            '    objWorkSheet.GetRow(posDinamic).RemoveCell(objWorkSheet.GetRow(posDinamic).GetCell(x))
                            '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMontoCI
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue("")
                            'End If
                            'If filtro.Item("VER_COTIZACION") = True Then 'Cuando el cargo plan tiene Cotizaciones
                            '    If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            '        objWorkSheet.GetRow(posDinamic).CreateCell(oDtDetalle.Columns.Count).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(posDinamic).GetCell(oDtDetalle.Columns.Count).SetCellValue("")
                            '        '--------------------------------------------------------------------------------------------------
                            '        objWorkSheet.GetRow(posDinamic).CreateCell(oDtDetalle.Columns.Count + 1).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(posDinamic).GetCell(oDtDetalle.Columns.Count + 1).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                            '        '--------------------------------------------------------------------------------------------------
                            '    Else
                            '        objWorkSheet.GetRow(posDinamic).CreateCell(oDtDetalle.Columns.Count).CellStyle = styleMontoCI
                            '        objWorkSheet.GetRow(posDinamic).GetCell(oDtDetalle.Columns.Count).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                            '        '--------------------------------------------------------------------------------------------------
                            '        objWorkSheet.GetRow(posDinamic).CreateCell(oDtDetalle.Columns.Count + 1).CellStyle = styleMontoCI
                            '        objWorkSheet.GetRow(posDinamic).GetCell(oDtDetalle.Columns.Count + 1).SetCellValue("")
                            '        '--------------------------------------------------------------------------------------------------
                            '    End If
                            'End If

                            objWorkSheet.GetRow(posDinamic).CreateCell(iPosList).CellStyle = styleMonto
                            Dim valSubPor As Double = 0D
                            If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                                objWorkSheet.GetRow(posDinamic).GetCell(iPosList).SetCellValue(Convert.ToDouble(celda))
                            Else
                                valSubPor = CDbl(oDtDetalle.Rows(i).Item("POR_CI")) * 0.01 'Se obtiene el porcentaje de distribucion
                                objWorkSheet.GetRow(posDinamic).RemoveCell(objWorkSheet.GetRow(posDinamic).GetCell(iPosList))
                                objWorkSheet.GetRow(posDinamic).CreateCell(iPosList).CellStyle = styleMontoCI
                                objWorkSheet.GetRow(posDinamic).GetCell(iPosList).SetCellValue("")
                            End If
                            If filtro.Item("VER_COTIZACION") = True Then 'Cuando el cargo plan tiene Cotizaciones
                                If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                                    objWorkSheet.GetRow(posDinamic).CreateCell(PosLisExport("TARIFA_X_CI")).CellStyle = styleMonto
                                    objWorkSheet.GetRow(posDinamic).GetCell(PosLisExport("TARIFA_X_CI")).SetCellValue("")
                                    '--------------------------------------------------------------------------------------------------
                                    objWorkSheet.GetRow(posDinamic).CreateCell(PosLisExport("TARIFA")).CellStyle = styleMonto
                                    objWorkSheet.GetRow(posDinamic).GetCell(PosLisExport("TARIFA")).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                                    '--------------------------------------------------------------------------------------------------
                                Else
                                    objWorkSheet.GetRow(posDinamic).CreateCell(PosLisExport("TARIFA_X_CI")).CellStyle = styleMontoCI
                                    objWorkSheet.GetRow(posDinamic).GetCell(PosLisExport("TARIFA_X_CI")).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                                    '--------------------------------------------------------------------------------------------------
                                    objWorkSheet.GetRow(posDinamic).CreateCell(PosLisExport("TARIFA")).CellStyle = styleMontoCI
                                    objWorkSheet.GetRow(posDinamic).GetCell(PosLisExport("TARIFA")).SetCellValue("")
                                    '--------------------------------------------------------------------------------------------------
                                End If

                               

                            End If

                        Case "POR_CI"
                            'If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then 'Si es nulo Pinta cajas Blancas
                            '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMonto
                            'Else 'Caso contrario pinta cajas amarillas
                            '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMontoCI
                            'End If
                            'objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda)
                            If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then 'Si es nulo Pinta cajas Blancas
                                objWorkSheet.GetRow(posDinamic).CreateCell(iPosList).CellStyle = styleMonto
                            Else 'Caso contrario pinta cajas amarillas
                                objWorkSheet.GetRow(posDinamic).CreateCell(iPosList).CellStyle = styleMontoCI
                            End If
                            objWorkSheet.GetRow(posDinamic).GetCell(iPosList).SetCellValue(celda)

                    End Select
                    'If IsNumeric(celda) Then
                    'If celda.Contains(".") Then
                    '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMonto
                    'Else
                    '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleNumber
                    'End If
                    'If x = 13 Then
                    'Dim valSubPor As Double = 0D
                    'If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                    '    valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                    '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                    'Else
                    '    valSubPor = CDbl(oDtDetalle.Rows(i).Item("POR_CI")) * 0.01 'Se obtiene el porcentaje de distribucion
                    '    objWorkSheet.GetRow(posDinamic).RemoveCell(objWorkSheet.GetRow(posDinamic).GetCell(x))
                    '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMontoCI
                    '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue("")
                    'End If
                    'If filtro.Item("VER_COTIZACION") = True Then 'Cuando el cargo plan tiene Cotizaciones
                    '    If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                    '        objWorkSheet.GetRow(posDinamic).CreateCell(oDtDetalle.Columns.Count).CellStyle = styleMonto
                    '        objWorkSheet.GetRow(posDinamic).GetCell(oDtDetalle.Columns.Count).SetCellValue("")
                    '        '--------------------------------------------------------------------------------------------------
                    '        objWorkSheet.GetRow(posDinamic).CreateCell(oDtDetalle.Columns.Count + 1).CellStyle = styleMonto
                    '        objWorkSheet.GetRow(posDinamic).GetCell(oDtDetalle.Columns.Count + 1).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                    '        '--------------------------------------------------------------------------------------------------
                    '    Else
                    '        objWorkSheet.GetRow(posDinamic).CreateCell(oDtDetalle.Columns.Count).CellStyle = styleMontoCI
                    '        objWorkSheet.GetRow(posDinamic).GetCell(oDtDetalle.Columns.Count).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                    '        '--------------------------------------------------------------------------------------------------
                    '        objWorkSheet.GetRow(posDinamic).CreateCell(oDtDetalle.Columns.Count + 1).CellStyle = styleMontoCI
                    '        objWorkSheet.GetRow(posDinamic).GetCell(oDtDetalle.Columns.Count + 1).SetCellValue("")
                    '        '--------------------------------------------------------------------------------------------------
                    '    End If
                    'End If
                    'Else
                    'If x = 15 Then
                    '    objWorkSheet.GetRow(posDinamic).RemoveCell(objWorkSheet.GetRow(posDinamic).GetCell(x))
                    '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMontoCI
                    'End If
                    'If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                    '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda.ToString)
                    'Else
                    '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                    'End If
                    'End If
                    'Else
                    'If IsDate(celda) Then
                    '    celda = String.Format("{0:d}", CDate(celda))
                    '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleFecha
                    '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda)
                    'Else
                    '    objWorkSheet.GetRow(posDinamic).CreateCell(x).SetCellValue(oDtDetalle.Rows(i).Item(x).ToString().Trim())
                    '    If x = 14 And Not IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                    '        objWorkSheet.GetRow(posDinamic).GetCell(x).CellStyle = styleMontoCI
                    '    Else
                    '        objWorkSheet.GetRow(posDinamic).GetCell(x).CellStyle = style
                    '    End If
                    'End If
                    'End If
                Next
                rowPosition += 1
                '===========================================
            Next
            Dim iRow As Integer = objWorkSheet.LastRowNum + 1
            Dim iCelda As String = ""
            objWorkSheet.CreateRow(iRow)
            'objWorkSheet.GetRow(iRow).CreateCell(8).CellStyle = style
            'objWorkSheet.GetRow(iRow).GetCell(8).SetCellValue("TOTAL")
            objWorkSheet.GetRow(iRow).CreateCell(PosLisExport("BULTOS") - 1).CellStyle = style
            objWorkSheet.GetRow(iRow).GetCell(PosLisExport("BULTOS") - 1).SetCellValue("TOTAL")

            iCelda = totales.Item("TBULTOS")
            If iCelda = "" Then iCelda = 0
            'objWorkSheet.GetRow(iRow).CreateCell(9).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(9).SetCellValue(Convert.ToDouble(iCelda))
            objWorkSheet.GetRow(iRow).CreateCell(PosLisExport("BULTOS")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(PosLisExport("BULTOS")).SetCellValue(Convert.ToDouble(iCelda))


            iCelda = totales.Item("TPESO")
            If iCelda = "" Then iCelda = 0
            'objWorkSheet.GetRow(iRow).CreateCell(10).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(10).SetCellValue(Convert.ToDouble(iCelda))
            objWorkSheet.GetRow(iRow).CreateCell(PosLisExport("PESO")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(PosLisExport("PESO")).SetCellValue(Convert.ToDouble(iCelda))

            iCelda = totales.Item("TM3")
            If iCelda = "" Then iCelda = 0
            'objWorkSheet.GetRow(iRow).CreateCell(11).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(11).SetCellValue(Convert.ToDouble(iCelda))
            objWorkSheet.GetRow(iRow).CreateCell(PosLisExport("M3")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(PosLisExport("M3")).SetCellValue(Convert.ToDouble(iCelda))
            '==================total peso volumen==========================
            'Dim cIniV As String = LetraNumero_NPOI(13) & (rowActual + 1).ToString
            'Dim cFinV As String = LetraNumero_NPOI(13) & (iRow).ToString
            Dim cIniV As String = LetraNumero_NPOI(PosLisExport("PESO_VOL") + 1) & (rowActual + 1).ToString
            Dim cFinV As String = LetraNumero_NPOI(PosLisExport("PESO_VOL") + 1) & (iRow).ToString
            Dim sumVol As String = ""
            If oDtDetalle.Rows.Count <> 0 Then
                sumVol = "SUM(" & cIniV & ":" & cFinV & ")"
            Else
                sumVol = "0"
            End If
            'objWorkSheet.GetRow(iRow).CreateCell(12).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(12).CellFormula = (sumVol)
            objWorkSheet.GetRow(iRow).CreateCell(PosLisExport("PESO_VOL")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(PosLisExport("PESO_VOL")).CellFormula = (sumVol)
            '====================total porcentaje======================
            'Dim cIni As String = LetraNumero_NPOI(14) & (rowActual + 1).ToString
            'Dim cFin As String = LetraNumero_NPOI(14) & (iRow).ToString
            Dim cIni As String = LetraNumero_NPOI(PosLisExport("POR") + 1) & (rowActual + 1).ToString
            Dim cFin As String = LetraNumero_NPOI(PosLisExport("POR") + 1) & (iRow).ToString
            Dim sumPorce As String = ""
            If oDtDetalle.Rows.Count <> 0 Then
                sumPorce = "SUM(" & cIni & ":" & cFin & ")"
            Else
                sumPorce = "0"
            End If
            'objWorkSheet.GetRow(iRow).CreateCell(13).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(13).CellFormula = (sumPorce)
            objWorkSheet.GetRow(iRow).CreateCell(PosLisExport("POR")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(PosLisExport("POR")).CellFormula = (sumPorce)
            '=============================================================
            '===========total costos======================================
            If filtro.Item("VER_COTIZACION") = True Then
                'Dim cIniC As String = LetraNumero_NPOI(18) & (rowActual + 1).ToString
                'Dim cFinC As String = LetraNumero_NPOI(18) & (iRow).ToString
                Dim cIniC As String = LetraNumero_NPOI(PosLisExport("TARIFA_X_CI") + 1) & (rowActual + 1).ToString
                Dim cFinC As String = LetraNumero_NPOI(PosLisExport("TARIFA_X_CI") + 1) & (iRow).ToString
                Dim sumCosto As String = ""
                If oDtDetalle.Rows.Count <> 0 Then
                    sumCosto = "SUM(" & cIniC & ":" & cFinC & ")"
                Else
                    sumCosto = "0"
                End If
                'objWorkSheet.GetRow(iRow).CreateCell(17).CellStyle = styleMonto
                'objWorkSheet.GetRow(iRow).GetCell(17).CellFormula = (sumCosto)
                objWorkSheet.GetRow(iRow).CreateCell(PosLisExport("TARIFA_X_CI")).CellStyle = styleMonto
                objWorkSheet.GetRow(iRow).GetCell(PosLisExport("TARIFA_X_CI")).CellFormula = (sumCosto)
            End If
            '=============================================================
            '===============CREAMOS RESUMEN POR CUENTA IMPUTACION=========
            rowActual = objWorkSheet.LastRowNum + 3
            If filtro.Item("VER_COTIZACION") = True Then
                Dim cel As String
                Dim posCelda As Int64 = 0
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue("Resumen por Cuenta de Imputación")
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 4, rowActual, 5))
                rowActual += 1
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                    posCelda = x + 4
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(posCelda).CellStyle = styleCab
                    '===Valores===
                    Dim valorCab As String = oDtResCuenta.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(posCelda).SetCellValue(valorCab)
                Next
                rowActual += 1
                For i As Integer = 0 To oDtResCuenta.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                        posCelda = x + 4
                        cel = oDtResCuenta.Rows(i).Item(x).ToString().Trim()
                        If IsNumeric(cel) Then
                            If cel.Contains(".") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(Double.Parse(cel.ToString))
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(cel)
                        End If
                    Next
                Next
            End If
            '===============================================
            'Redimensiono tamaño de columnas automaticamente
            For z As Integer = 0 To oDtDetalle.Columns.Count - 1
                objWorkSheet.AutoSizeColumn(z, True)
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub
    ''GASTON
    'Private Shared Sub GenerarColumnasTerrestre(ByRef oDat As DataTable, ByVal oDtDetalle As DataTable)

    '    oDat.Columns.Add("ITEM")
    '    oDat.Columns.Add("CLIENTE")
    '    oDat.Columns.Add("GUIA_REMISION")
    '    oDat.Columns.Add("MEDIO_ENVIO")
    '    oDat.Columns.Add("PROVEEDOR")
    '    oDat.Columns.Add("COD_PRODUCTO")
    '    oDat.Columns.Add("GUIA_PROV")
    '    oDat.Columns.Add("CONTENIDO")
    '    oDat.Columns.Add("OC")
    '    oDat.Columns.Add("LOTE")
    '    oDat.Columns.Add("BULTOS")
    '    oDat.Columns.Add("PESO")
    '    oDat.Columns.Add("M3")
    '    oDat.Columns.Add("PESO_VOL")
    '    oDat.Columns.Add("POR")
    '    oDat.Columns.Add("CUENTA_IMPUTACION")
    '    oDat.Columns.Add("F_DE_INGRESO")
    '    oDat.Columns.Add("POR_CI")
    '    oDat.Columns.Add("CUENTA_MAYOR")
    '    oDat.Columns.Add("CENTRO_COSTE")
    '    oDat.Columns.Add("ELEMENTO_PEP")
    '    oDat.Columns.Add("ORDEN")
    '    oDat.Columns.Add("GRAFO")

    '    For Each row As DataRow In oDtDetalle.Rows
    '        Dim fila As DataRow = oDat.NewRow
    '        fila.Item("ITEM") = row("ITEM")
    '        fila.Item("CLIENTE") = row("CLIENTE")
    '        fila.Item("GUIA_REMISION") = row("GUIA_REMISION")
    '        fila.Item("MEDIO_ENVIO") = row("MEDIO_ENVIO")
    '        fila.Item("PROVEEDOR") = row("PROVEEDOR")
    '        fila.Item("COD_PRODUCTO") = row("COD_PRODUCTO")
    '        fila.Item("GUIA_PROV") = row("GUIA_PROV")
    '        fila.Item("CONTENIDO") = row("CONTENIDO")
    '        fila.Item("OC") = row("OC")
    '        fila.Item("BULTOS") = row("BULTOS")
    '        fila.Item("PESO") = row("PESO")
    '        fila.Item("M3") = row("M3")
    '        fila.Item("PESO_VOL") = row("PESO_VOL")
    '        fila.Item("POR") = row("POR")
    '        fila.Item("CUENTA_IMPUTACION") = row("CUENTA_IMPUTACION")
    '        fila.Item("F_DE_INGRESO") = row("F_DE_INGRESO")
    '        fila.Item("POR_CI") = row("POR_CI")
    '        fila.Item("CUENTA_MAYOR") = row("CUENTA_MAYOR")
    '        fila.Item("CENTRO_COSTE") = row("CENTRO_COSTE")
    '        fila.Item("ELEMENTO_PEP") = row("ELEMENTO_PEP")
    '        fila.Item("ORDEN") = row("ORDEN")
    '        fila.Item("GRAFO") = row("GRAFO")

    '        oDat.Rows.Add(fila)
    '    Next

    'End Sub
    Public Shared Sub ExportExcelPP_Terrestre_Unitario_Plus(ByVal oDs As DataSet, Optional ByVal filtro As Hashtable = Nothing, Optional ByVal totales As Hashtable = Nothing)
        '=====================================================================
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)

            Dim oDtDetalle As DataTable = oDs.Tables("Terrestre")
            Dim oDtResCuenta As DataTable = oDs.Tables("ResCuenta")
            Dim oDtCI_x_OI As DataTable = oDs.Tables("CI_x_OS")
            Dim oDtDetAdicional As New DataTable
            objWorkSheet = objWorkBook.CreateSheet(oDtDetalle.TableName)
            objWorkSheet.CreateRow(3)
            '=============Stilos======================
            Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontFiltro.FontHeight = 165

            Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
            oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.FontHeight = 165

            Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.FontHeight = 170

            '============================================
            Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
            Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
            Estilos_Excel_NPOI(style, FORMATO.Normal)
            Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
            Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
            Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
            Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
            '============================================
            styleFiltro.SetFont(oFontFiltro)
            styleCab.SetFont(oFontCab)
            style.SetFont(oFont)
            styleTitulo.SetFont(oFontFiltro)
            styleNumber.SetFont(oFont)
            styleMonto.SetFont(oFont)
            styleFecha.SetFont(oFont)
            styleMontoCI.SetFont(oFont)
            '============================================
            '============================================
            Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
            'create the anchor
            Dim anchor As HSSFClientAnchor
            anchor = New HSSFClientAnchor(0, 0, 0, 100, 0, 0, 0, 0)
            Dim rutaImagen As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.PNG" 'logo.png -------------- 'Logo_Cargo_Plan.PNG
            If IO.File.Exists(rutaImagen) Then
                'load the picture and get the picture index in the workbook
                Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaImagen, objWorkBook)), HSSFPicture)
                'Reset the image to the original size.
                picture.Resize(0.7)
            End If
            Dim rowActual As Integer = 6
            '===============Titulo                
            Dim txtFiltro As String = ""
            objWorkSheet.CreateRow(rowActual)

            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("CARGO_PLAN")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 1))

            objWorkSheet.GetRow(rowActual).CreateCell(2).CellStyle = styleTitulo
            txtFiltro = filtro.Item("TITULO")
            objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue(txtFiltro)
            Dim Region As New NPOI.SS.Util.Region(rowActual, 2, rowActual, 4)
            objWorkSheet.AddMergedRegion(Region)

            objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
            txtFiltro = filtro.Item("ORIGEN")
            objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 6))
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)

            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("FECHA")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 1))

            objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleFiltro
            txtFiltro = filtro.Item("OPERACION")
            objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 3, rowActual, 4))

            objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
            txtFiltro = filtro.Item("DESTINO")
            objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 6))
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)

            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("CHOFER")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2))

            objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleFiltro
            txtFiltro = filtro.Item("BREVETE")
            objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 3, rowActual, 4))
            '==========validamos permiso para visualizar cotizacion==========
            If filtro.Item("VER_COTIZACION") = True Then
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
                If filtro.Item("TARIFA_MONEDA") = 0 Then
                    txtFiltro = "TARIFA :  " & filtro.Item("TARIFA_MONTO")
                Else
                    If filtro.Item("TARIFA_MONEDA") = 1 Then
                        txtFiltro = "TARIFA : S/. " & filtro.Item("TARIFA_MONTO")
                    Else
                        txtFiltro = "TARIFA : USD " & filtro.Item("TARIFA_MONTO")
                    End If
                End If
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 6))
            End If
            '================================================================
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)

            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("MARCA")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2))

            objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleFiltro
            txtFiltro = filtro.Item("PLACAS")
            objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 3, rowActual, 4))

            objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
            txtFiltro = filtro.Item("TCMTRT")
            objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 7))

            rowActual = rowActual + 1
            '====================================================================================
            '===================Se cargan Las Cabeceras==========================================


           

            Dim ListaColExport As New List(Of String)
            ListaColExport.Add("ITEM")
            ListaColExport.Add("CLIENTE")
            ListaColExport.Add("GUIA_REMISION")
            ListaColExport.Add("MEDIO_ENVIO")
            ListaColExport.Add("PROVEEDOR")
            ListaColExport.Add("COD_PRODUCTO")
            ListaColExport.Add("GUIA_PROV")
            ListaColExport.Add("CONTENIDO")
            ListaColExport.Add("OC")
            ListaColExport.Add("LOTE")
            ListaColExport.Add("BULTOS")
            ListaColExport.Add("PESO")
            ListaColExport.Add("M3")
            ListaColExport.Add("PESO_VOL")
            ListaColExport.Add("POR")
            ListaColExport.Add("CUENTA_IMPUTACION")
            ListaColExport.Add("F_DE_INGRESO")
            ListaColExport.Add("POR_CI")

            If filtro.Item("VER_COTIZACION") = True Then
                ListaColExport.Add("TARIFA_X_CI")
                ListaColExport.Add("TARIFA")
                ListaColExport.Add("CUENTA_MAYOR")
                ListaColExport.Add("CENTRO_COSTE")
                ListaColExport.Add("ELEMENTO_PEP")
                ListaColExport.Add("ORDEN")
                ListaColExport.Add("GRAFO")
                ListaColExport.Add("SIN_CUENTA")
            Else
                ListaColExport.Add("CUENTA_MAYOR")
                ListaColExport.Add("CENTRO_COSTE")
                ListaColExport.Add("ELEMENTO_PEP")
                ListaColExport.Add("ORDEN")
                ListaColExport.Add("GRAFO")
                ListaColExport.Add("SIN_CUENTA")
            End If





            'Dim dt_temp As New DataTable
            'dt_temp = oDtDetalle.Copy
            'dt_temp.Columns.Remove("CUENTA_MAYOR")
            'dt_temp.Columns.Remove("CENTRO_COSTE")
            'dt_temp.Columns.Remove("ELEMENTO_PEP")
            'dt_temp.Columns.Remove("ORDEN")
            'dt_temp.Columns.Remove("GRAFO")


            objWorkSheet.CreateRow(rowActual)

            'Dim ListVerCotiz As New List(Of String)
            'ListVerCotiz.Add("TARIFA_X_CI")
            'ListVerCotiz.Add("TARIFA")
            'ListVerCotiz.Add("CUENTA_MAYOR")
            'ListVerCotiz.Add("CENTRO_COSTE")
            'ListVerCotiz.Add("ELEMENTO_PEP")
            'ListVerCotiz.Add("ORDEN")
            'ListVerCotiz.Add("GRAFO")
            'ListVerCotiz.Add("SIN_CUENTA")




            'Dim ListNoVerCotiz As New List(Of String)
            'ListNoVerCotiz.Add("CUENTA_MAYOR")
            'ListNoVerCotiz.Add("CENTRO_COSTE")
            'ListNoVerCotiz.Add("ELEMENTO_PEP")
            'ListNoVerCotiz.Add("ORDEN")
            'ListNoVerCotiz.Add("GRAFO")
            'ListNoVerCotiz.Add("SIN_CUENTA")


            Dim listPosCol As New Hashtable
            Dim PosList As Integer = 0
            For Each ItemColumna As String In ListaColExport
                '===Estilo===
                objWorkSheet.GetRow(rowActual).CreateCell(PosList).CellStyle = styleCab
                '===Valores===
                'Dim valorCab As String = ItemColumna
                objWorkSheet.GetRow(rowActual).GetCell(PosList).SetCellValue(ItemColumna)
                listPosCol(ItemColumna) = PosList
                PosList = PosList + 1
            Next



            'Dim listPosCol As New Hashtable
            'For x As Integer = 0 To dt_temp.Columns.Count - 1
            '    '===Estilo===
            '    objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = styleCab
            '    '===Valores===
            '    Dim valorCab As String = dt_temp.Columns(x).ColumnName.ToString().Trim()
            '    objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCab)

            '    listPosCol(valorCab) = x
            'Next


            'Dim iReg As Integer = 0
            'If filtro.Item("VER_COTIZACION") = True Then
            '    iReg = dt_temp.Columns.Count
            '    For Each Item As String In ListVerCotiz
            '        objWorkSheet.GetRow(rowActual).CreateCell(iReg).CellStyle = styleCab
            '        objWorkSheet.GetRow(rowActual).GetCell(iReg).SetCellValue(Item)
            '        listPosCol(Item) = iReg
            '        iReg = iReg + 1
            '    Next
            'Else

            '    iReg = dt_temp.Columns.Count
            '    For Each Item As String In ListNoVerCotiz
            '        objWorkSheet.GetRow(rowActual).CreateCell(iReg).CellStyle = styleCab
            '        objWorkSheet.GetRow(rowActual).GetCell(iReg).SetCellValue(Item)
            '        listPosCol(Item) = iReg
            '        iReg = iReg + 1
            '    Next

            'End If

            'If filtro.Item("VER_COTIZACION") = True Then
            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count).SetCellValue("TARIFA_X_CI")

            '    listPosColumna("TARIFA_X_CI") = dt_temp.Columns.Count

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 1).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 1).SetCellValue("TARIFA")

            '    listPosColumna("TARIFA") = dt_temp.Columns.Count + 1

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 2).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 2).SetCellValue("CUENTA_MAYOR")

            '    listPosColumna("CUENTA_MAYOR") = dt_temp.Columns.Count + 2

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 3).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 3).SetCellValue("CENTRO_COSTE")


            '    listPosColumna("CENTRO_COSTE") = dt_temp.Columns.Count + 3

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 4).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 4).SetCellValue("ELEMENTO_PEP")


            '    listPosColumna("ELEMENTO_PEP") = dt_temp.Columns.Count + 4

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 5).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 5).SetCellValue("ORDEN")

            '    listPosColumna("ORDEN") = dt_temp.Columns.Count + 5

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 6).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 6).SetCellValue("GRAFO")

            '    listPosColumna("GRAFO") = dt_temp.Columns.Count + 6

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 7).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 7).SetCellValue("SIN_CUENTA")

            '    listPosColumna("SIN_CUENTA") = dt_temp.Columns.Count + 7

            'Else
            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count).SetCellValue("CUENTA_MAYOR")

            '    listPosColumna("CUENTA_MAYOR") = dt_temp.Columns.Count

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 1).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 1).SetCellValue("CENTRO_COSTE")

            '    listPosColumna("CENTRO_COSTE") = dt_temp.Columns.Count + 1

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 2).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 2).SetCellValue("ELEMENTO_PEP")

            '    listPosColumna("ELEMENTO_PEP") = dt_temp.Columns.Count + 2

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 3).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 3).SetCellValue("ORDEN")

            '    listPosColumna("ORDEN") = dt_temp.Columns.Count + 3

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 4).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 4).SetCellValue("GRAFO")


            '    listPosColumna("GRAFO") = dt_temp.Columns.Count + 4

            '    objWorkSheet.GetRow(rowActual).CreateCell(dt_temp.Columns.Count + 5).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(dt_temp.Columns.Count + 5).SetCellValue("SIN_CUENTA")

            '    listPosColumna("SIN_CUENTA") = dt_temp.Columns.Count + 5

            'End If

            'Dim oDat As New DataTable
            'GenerarColumnasTerrestre(oDat, oDtDetalle)


            rowActual = rowActual + 1
            '===================Se Carga El Detalle=============
            Dim celda As String
            Dim rowPosition As Double = 0D
            Dim posDinamic As Integer = 0
            Dim sin_cuenta As String
            Dim ColName As String = ""
            Dim PosColExcel As Integer = 0



            'ListVerCotiz.Add("TARIFA_X_CI")
            'ListVerCotiz.Add("TARIFA")

            'oDtDetalle
            'For i As Integer = 0 To oDat.Rows.Count - 1
            For i As Integer = 0 To oDtDetalle.Rows.Count - 1
                posDinamic = rowActual + rowPosition
                objWorkSheet.CreateRow(posDinamic)

                'ListaColExport

                'SIN_CUENTA
                For Each itemCol As String In ListaColExport
                    'Next
                    'For x As Integer = 0 To oDat.Columns.Count - 1
                    'If x < oDat.Columns.Count Then
                    '    celda = oDat.Rows(i).Item(x).ToString().Trim()
                    'Else
                    '    celda = 0
                    'End If
                    If itemCol = "SIN_CUENTA" OrElse itemCol = "TARIFA_X_CI" OrElse itemCol = "TARIFA" Then
                        Continue For
                    End If

                    celda = oDtDetalle.Rows(i).Item(itemCol).ToString().Trim()
                    ColName = itemCol
                    PosColExcel = listPosCol(ColName)
                    Select Case ColName
                        Case "ITEM", "CLIENTE", "GUIA_REMISION", "MEDIO_ENVIO", "PROVEEDOR", "COD_PRODUCTO", "GUIA_PROV", "CONTENIDO", "OC", "LOTE", "CUENTA_IMPUTACION"
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).SetCellValue(celda)
                            'If ColName = "CUENTA_IMPUTACION" And Not IsDBNull(oDat.Rows(i).Item("POR_CI")) Then
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).CellStyle = styleMontoCI
                            'Else
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).CellStyle = style
                            'End If

                            objWorkSheet.GetRow(posDinamic).CreateCell(PosColExcel).SetCellValue(celda)
                            'If ColName = "CUENTA_IMPUTACION" And Not IsDBNull(oDat.Rows(i).Item("POR_CI")) Then
                            '    objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).CellStyle = styleMontoCI
                            'Else
                            '    objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).CellStyle = style
                            'End If
                            If ColName = "CUENTA_IMPUTACION" And Not IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).CellStyle = styleMontoCI
                            Else
                                objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).CellStyle = style
                            End If


                            'listPosColumna(ColName)
                        Case "CUENTA_MAYOR", "CENTRO_COSTE", "ELEMENTO_PEP", "ORDEN", "GRAFO"
                            sin_cuenta = ""
                            If ColName = "GRAFO" Then

                                'If oDat.Rows(i).Item("GRAFO").ToString().Trim() = "" AndAlso _
                                '   oDat.Rows(i).Item("CUENTA_MAYOR").ToString().Trim() = "" AndAlso _
                                '   oDat.Rows(i).Item("CENTRO_COSTE").ToString().Trim() = "" AndAlso _
                                '   oDat.Rows(i).Item("ELEMENTO_PEP").ToString().Trim() = "" AndAlso _
                                '   oDat.Rows(i).Item("ORDEN").ToString().Trim() = "" Then
                                '    sin_cuenta = "MATERIAL SIN STOCK"
                                'End If
                                If oDtDetalle.Rows(i).Item("GRAFO").ToString().Trim() = "" AndAlso _
                                oDtDetalle.Rows(i).Item("CUENTA_MAYOR").ToString().Trim() = "" AndAlso _
                                oDtDetalle.Rows(i).Item("CENTRO_COSTE").ToString().Trim() = "" AndAlso _
                                oDtDetalle.Rows(i).Item("ELEMENTO_PEP").ToString().Trim() = "" AndAlso _
                                oDtDetalle.Rows(i).Item("ORDEN").ToString().Trim() = "" Then
                                    sin_cuenta = "MATERIAL SIN STOCK"
                                End If

                            End If

                            objWorkSheet.GetRow(posDinamic).CreateCell(PosColExcel).SetCellValue(celda)
                            objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).CellStyle = style

                            If ColName = "GRAFO" Then
                                objWorkSheet.GetRow(posDinamic).CreateCell(listPosCol("SIN_CUENTA")).SetCellValue(sin_cuenta)
                                objWorkSheet.GetRow(posDinamic).GetCell(listPosCol("SIN_CUENTA")).CellStyle = style
                            End If


                            'If filtro.Item("VER_COTIZACION") = True Then
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x + 2).SetCellValue(celda)
                            'objWorkSheet.GetRow(posDinamic).GetCell(x + 2).CellStyle = style



                            'If ColName = "GRAFO" Then
                            '    objWorkSheet.GetRow(posDinamic).CreateCell(x + 3).SetCellValue(sin_cuenta)
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x + 3).CellStyle = style
                            'End If

                            'Else
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).SetCellValue(celda)
                            'objWorkSheet.GetRow(posDinamic).GetCell(x).CellStyle = style

                            '    If ColName = "GRAFO" Then

                            '        objWorkSheet.GetRow(posDinamic).CreateCell(x + 1).SetCellValue(sin_cuenta)
                            '        objWorkSheet.GetRow(posDinamic).GetCell(x + 1).CellStyle = style
                            '    End If
                            'End If
                        Case "F_DE_INGRESO"
                            If celda <> "" And celda <> "00/00/0000" Then celda = String.Format("{0:d}", CDate(celda)) ' Valida los casos que tenga distribucion q llegan valores vacios o con formato incorrecto
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleFecha
                            'objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda)
                            objWorkSheet.GetRow(posDinamic).CreateCell(PosColExcel).CellStyle = styleFecha
                            objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).SetCellValue(celda)


                        Case "BULTOS"
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleNumber
                            'If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            'Else
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda)
                            'End If
                            objWorkSheet.GetRow(posDinamic).CreateCell(PosColExcel).CellStyle = styleNumber
                            If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).SetCellValue(Convert.ToDouble(celda))
                            Else
                                objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).SetCellValue(celda)
                            End If
                        Case "PESO", "M3", "PESO_VOL"
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMonto
                            'If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            'Else
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda)
                            'End If
                            objWorkSheet.GetRow(posDinamic).CreateCell(PosColExcel).CellStyle = styleMonto
                            If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).SetCellValue(Convert.ToDouble(celda))
                            Else
                                objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).SetCellValue(celda)
                            End If

                        Case "POR"
                            'objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMonto
                            'Dim valSubPor As Double = 0D
                            'If IsDBNull(oDat.Rows(i).Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                            '    valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                            'Else
                            '    valSubPor = CDbl(oDat.Rows(i).Item("POR_CI")) * 0.01 'Se obtiene el porcentaje de distribucion
                            '    objWorkSheet.GetRow(posDinamic).RemoveCell(objWorkSheet.GetRow(posDinamic).GetCell(x))
                            '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMontoCI
                            '    objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue("")
                            'End If

                            objWorkSheet.GetRow(posDinamic).CreateCell(PosColExcel).CellStyle = styleMonto
                            Dim valSubPor As Double = 0D
                            If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                                objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).SetCellValue(Convert.ToDouble(celda))
                            Else
                                valSubPor = CDbl(oDtDetalle.Rows(i).Item("POR_CI")) * 0.01 'Se obtiene el porcentaje de distribucion
                                objWorkSheet.GetRow(posDinamic).RemoveCell(objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel))
                                objWorkSheet.GetRow(posDinamic).CreateCell(PosColExcel).CellStyle = styleMontoCI
                                objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).SetCellValue("")
                            End If


                            'If filtro.Item("VER_COTIZACION") = True Then 'Cuando el cargo plan tiene Cotizaciones
                            '    If IsDBNull(oDat.Rows(i).Item("POR_CI")) Then
                            '        objWorkSheet.GetRow(posDinamic).CreateCell(oDat.Columns.Count - 5).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(posDinamic).GetCell(oDat.Columns.Count - 5).SetCellValue("")
                            '        '--------------------------------------------------------------------------------------------------
                            '        objWorkSheet.GetRow(posDinamic).CreateCell(oDat.Columns.Count - 4).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(posDinamic).GetCell(oDat.Columns.Count - 4).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                            '        '--------------------------------------------------------------------------------------------------
                            '    Else
                            '        objWorkSheet.GetRow(posDinamic).CreateCell(oDat.Columns.Count - 5).CellStyle = styleMontoCI
                            '        objWorkSheet.GetRow(posDinamic).GetCell(oDat.Columns.Count - 5).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                            '        '--------------------------------------------------------------------------------------------------
                            '        objWorkSheet.GetRow(posDinamic).CreateCell(oDat.Columns.Count - 4).CellStyle = styleMontoCI
                            '        objWorkSheet.GetRow(posDinamic).GetCell(oDat.Columns.Count - 4).SetCellValue("")
                            '        '--------------------------------------------------------------------------------------------------
                            '    End If
                            'End If


                            If filtro.Item("VER_COTIZACION") = True Then 'Cuando el cargo plan tiene Cotizaciones
                                If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                                    objWorkSheet.GetRow(posDinamic).CreateCell(listPosCol("TARIFA_X_CI")).CellStyle = styleMonto
                                    objWorkSheet.GetRow(posDinamic).GetCell(listPosCol("TARIFA_X_CI")).SetCellValue("")
                                    '--------------------------------------------------------------------------------------------------
                                    objWorkSheet.GetRow(posDinamic).CreateCell(listPosCol("TARIFA")).CellStyle = styleMonto
                                    objWorkSheet.GetRow(posDinamic).GetCell(listPosCol("TARIFA")).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                                    '--------------------------------------------------------------------------------------------------
                                Else
                                    objWorkSheet.GetRow(posDinamic).CreateCell(listPosCol("TARIFA_X_CI")).CellStyle = styleMontoCI
                                    objWorkSheet.GetRow(posDinamic).GetCell(listPosCol("TARIFA_X_CI")).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & filtro.Item("TARIFA_MONTO") & "/100")
                                    '--------------------------------------------------------------------------------------------------
                                    objWorkSheet.GetRow(posDinamic).CreateCell(listPosCol("TARIFA")).CellStyle = styleMontoCI
                                    objWorkSheet.GetRow(posDinamic).GetCell(listPosCol("TARIFA")).SetCellValue("")
                                    '--------------------------------------------------------------------------------------------------
                                End If
                            End If



                        Case "POR_CI"
                            'If IsDBNull(oDat.Rows(i).Item("POR_CI")) Then 'Si es nulo Pinta cajas Blancas
                            '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMonto
                            'Else 'Caso contrario pinta cajas amarillas
                            '    objWorkSheet.GetRow(posDinamic).CreateCell(x).CellStyle = styleMontoCI
                            'End If
                            'objWorkSheet.GetRow(posDinamic).GetCell(x).SetCellValue(celda)

                            If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then 'Si es nulo Pinta cajas Blancas
                                objWorkSheet.GetRow(posDinamic).CreateCell(PosColExcel).CellStyle = styleMonto
                            Else 'Caso contrario pinta cajas amarillas
                                objWorkSheet.GetRow(posDinamic).CreateCell(PosColExcel).CellStyle = styleMontoCI
                            End If
                            objWorkSheet.GetRow(posDinamic).GetCell(PosColExcel).SetCellValue(celda)


                    End Select
                Next
                rowPosition += 1
                '===========================================
            Next
            Dim iRow As Integer = objWorkSheet.LastRowNum + 1
            Dim iCelda As String = ""
            objWorkSheet.CreateRow(iRow)
            'objWorkSheet.GetRow(iRow).CreateCell(8).CellStyle = style
            'objWorkSheet.GetRow(iRow).GetCell(8).SetCellValue("TOTAL")
            objWorkSheet.GetRow(iRow).CreateCell(listPosCol("BULTOS") - 1).CellStyle = style
            objWorkSheet.GetRow(iRow).GetCell(listPosCol("BULTOS") - 1).SetCellValue("TOTAL")


            'listPosCol("SIN_CUENTA")

            iCelda = totales.Item("TBULTOS")
            If iCelda = "" Then iCelda = 0
            'objWorkSheet.GetRow(iRow).CreateCell(9).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(9).SetCellValue(Convert.ToDouble(iCelda))
            objWorkSheet.GetRow(iRow).CreateCell(listPosCol("BULTOS")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(listPosCol("BULTOS")).SetCellValue(Convert.ToDouble(iCelda))

            iCelda = totales.Item("TPESO")
            If iCelda = "" Then iCelda = 0
            'objWorkSheet.GetRow(iRow).CreateCell(10).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(10).SetCellValue(Convert.ToDouble(iCelda))
            objWorkSheet.GetRow(iRow).CreateCell(listPosCol("PESO")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(listPosCol("PESO")).SetCellValue(Convert.ToDouble(iCelda))

            iCelda = totales.Item("TM3")
            If iCelda = "" Then iCelda = 0
            'objWorkSheet.GetRow(iRow).CreateCell(11).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(11).SetCellValue(Convert.ToDouble(iCelda))
            objWorkSheet.GetRow(iRow).CreateCell(listPosCol("M3")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(listPosCol("M3")).SetCellValue(Convert.ToDouble(iCelda))

            '==================total peso volumen==========================
            'Dim cIniV As String = LetraNumero_NPOI(13) & (rowActual + 1).ToString
            'Dim cFinV As String = LetraNumero_NPOI(13) & (iRow).ToString
            Dim cIniV As String = LetraNumero_NPOI(listPosCol("PESO_VOL") + 1) & (rowActual + 1).ToString
            Dim cFinV As String = LetraNumero_NPOI(listPosCol("PESO_VOL") + 1) & (iRow).ToString
            Dim sumVol As String = ""
            If oDtDetalle.Rows.Count <> 0 Then
                sumVol = "SUM(" & cIniV & ":" & cFinV & ")"
            Else
                sumVol = "0"
            End If
            'PESO_VOL
            'objWorkSheet.GetRow(iRow).CreateCell(12).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(12).CellFormula = (sumVol)
            objWorkSheet.GetRow(iRow).CreateCell(listPosCol("PESO_VOL")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(listPosCol("PESO_VOL")).CellFormula = (sumVol)
            '====================total porcentaje======================
            'Dim cIni As String = LetraNumero_NPOI(14) & (rowActual + 1).ToString
            'Dim cFin As String = LetraNumero_NPOI(14) & (iRow).ToString
            Dim cIni As String = LetraNumero_NPOI(listPosCol("POR") + 1) & (rowActual + 1).ToString
            Dim cFin As String = LetraNumero_NPOI(listPosCol("POR") + 1) & (iRow).ToString
            Dim sumPorce As String = ""
            If oDtDetalle.Rows.Count <> 0 Then
                sumPorce = "SUM(" & cIni & ":" & cFin & ")"
            Else
                sumPorce = "0"
            End If
            'objWorkSheet.GetRow(iRow).CreateCell(13).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(13).CellFormula = (sumPorce)

            objWorkSheet.GetRow(iRow).CreateCell(listPosCol("POR")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(listPosCol("POR")).CellFormula = (sumPorce)

            '=============================================================
            '===========total costos======================================
            If filtro.Item("VER_COTIZACION") = True Then
                'Dim cIniC As String = LetraNumero_NPOI(18) & (rowActual + 1).ToString
                'Dim cFinC As String = LetraNumero_NPOI(18) & (iRow).ToString
                Dim cIniC As String = LetraNumero_NPOI(listPosCol("TARIFA_X_CI") + 1) & (rowActual + 1).ToString
                Dim cFinC As String = LetraNumero_NPOI(listPosCol("TARIFA_X_CI") + 1) & (iRow).ToString
                Dim sumCosto As String = ""
                If oDtDetalle.Rows.Count <> 0 Then
                    sumCosto = "SUM(" & cIniC & ":" & cFinC & ")"
                Else
                    sumCosto = "0"
                End If
                'objWorkSheet.GetRow(iRow).CreateCell(17).CellStyle = styleMonto
                'objWorkSheet.GetRow(iRow).GetCell(17).CellFormula = (sumCosto)

                objWorkSheet.GetRow(iRow).CreateCell(listPosCol("TARIFA_X_CI")).CellStyle = styleMonto
                objWorkSheet.GetRow(iRow).GetCell(listPosCol("TARIFA_X_CI")).CellFormula = (sumCosto)

            End If
            '=============================================================
            '===============CREAMOS RESUMEN POR CUENTA IMPUTACION=========
            rowActual = objWorkSheet.LastRowNum + 3
            If filtro.Item("VER_COTIZACION") = True Then
                Dim cel As String
                Dim posCelda As Int64 = 0
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue("Resumen por Cuenta de Imputación")
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 4, rowActual, 5))
                rowActual += 1
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                    posCelda = x + 4
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(posCelda).CellStyle = styleCab
                    '===Valores===
                    Dim valorCab As String = oDtResCuenta.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(posCelda).SetCellValue(valorCab)
                Next
                rowActual += 1
                For i As Integer = 0 To oDtResCuenta.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                        posCelda = x + 4
                        cel = oDtResCuenta.Rows(i).Item(x).ToString().Trim()
                        If IsNumeric(cel) Then
                            If cel.Contains(".") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(Double.Parse(cel.ToString))
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(cel)
                        End If
                    Next
                Next
            End If
            '===============================================
            'Redimensiono tamaño de columnas automaticamente
            For z As Integer = 0 To oDtDetalle.Columns.Count - 1
                objWorkSheet.AutoSizeColumn(z, True)
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub

    ''' <summary>
    ''' Exporta a Excel mediante DDL MOPI Aereo
    ''' </summary>
    ''' <param name="oDs"></param>
    ''' <param name="filtro"></param>
    ''' <param name="totales"></param>
    ''' <remarks></remarks>
    ''' 
    
    Public Shared Sub ExportExcelPP_Aereo_Unitario(ByVal oDs As DataSet, Optional ByVal filtro As Hashtable = Nothing, Optional ByVal totales As Hashtable = Nothing)
        '================================================================================
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)

            Dim odtDetalle As New DataTable

            odtDetalle = oDs.Tables("Aereo")
            objWorkSheet = objWorkBook.CreateSheet(odtDetalle.TableName)
            objWorkSheet.CreateRow(3)
            '=============Stilos======================
            Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
            oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontFiltro.FontHeight = 165

            Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
            oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.FontHeight = 165

            Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
            oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.FontHeight = 170

            '============================================
            Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
            Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
            Estilos_Excel_NPOI(style, FORMATO.Normal)
            Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
            Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
            Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
            Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
            '============================================
            styleFiltro.SetFont(oFontFiltro)
            styleCab.SetFont(oFontCab)
            style.SetFont(oFont)
            styleTitulo.SetFont(oFontFiltro)
            styleNumber.SetFont(oFont)
            styleMonto.SetFont(oFont)
            styleFecha.SetFont(oFont)
            styleMontoCI.SetFont(oFont)
            '============================================
            Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
            'create the anchor
            Dim anchor As HSSFClientAnchor
            anchor = New HSSFClientAnchor(0, 0, 0, 100, 0, 0, 0, 0)
            Dim rutaImagen As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.PNG" 'logo.png -------------- 'Logo_Cargo_Plan.PNG
            If IO.File.Exists(rutaImagen) Then
                'load the picture and get the picture index in the workbook
                Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaImagen, objWorkBook)), HSSFPicture)
                'Reset the image to the original size.
                picture.Resize(0.7)
            End If
            Dim rowActual As Integer = 6
            Dim y As Integer = 0
            '=======================================
            '==============FiltroS==================
            '=======================================
            Dim txtFiltro As String = ""

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("CARGO_PLAN")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 1))
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("OPERACION")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 1))

            '==========validamos permiso para visualizar cotizacion==========
            If filtro.Item("VER_COTIZACION") = True Then
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
                If filtro.Item("TARIFA_MONEDA") = 0 Then
                    txtFiltro = "TARIFA :  " & filtro.Item("TARIFA_MONTO")
                Else
                    If filtro.Item("TARIFA_MONEDA") = 1 Then
                        txtFiltro = "TARIFA : S/. " & filtro.Item("TARIFA_MONTO")
                    Else
                        txtFiltro = "TARIFA : USD " & filtro.Item("TARIFA_MONTO")
                    End If
                End If
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 6))
            End If
            '================================================================

            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("TITULO_1")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2))
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("TITULO_2")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            Dim Region As New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2)
            objWorkSheet.AddMergedRegion(Region)
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("ESTADO_ENTREGA")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2))
            rowActual = rowActual + 1

            '===================Se cargan Las Cabeceras=====================            
            objWorkSheet.CreateRow(rowActual)

            Dim PosListCol As New Hashtable
            Dim ListaColExport As New List(Of String)
            ListaColExport.Add("ITEM")
            ListaColExport.Add("GUIA_PROV")
            ListaColExport.Add("PROVEEDOR")
            ListaColExport.Add("COD_PRODUCTO")
            ListaColExport.Add("CONTENIDO")
            ListaColExport.Add("F_DE_INGRESO")
            ListaColExport.Add("OC")
            ListaColExport.Add("LOTE")
            ListaColExport.Add("GUIA_REMISION")
            ListaColExport.Add("MEDIO_ENVIO")
            ListaColExport.Add("PESO")
            ListaColExport.Add("M3")
            ListaColExport.Add("BULTOS")
            ListaColExport.Add("CUENTA_IMPUTACION")
            ListaColExport.Add("POR_CI")
            ListaColExport.Add("PORCENTAJE")
            If filtro.Item("VER_COTIZACION") = True Then
                ListaColExport.Add("TARIFA_X_CI")
                ListaColExport.Add("TARIFA")
            End If


            y = 2
            For Each Item As String In ListaColExport
                objWorkSheet.GetRow(rowActual).CreateCell(y).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).GetCell(y).SetCellValue(Item)
                PosListCol(Item) = y
                y = y + 1
            Next

            'For x As Integer = 0 To odtDetalle.Columns.Count - 1
            '    '===Estilo===
            '    y = x + 2
            '    objWorkSheet.GetRow(rowActual).CreateCell(y).CellStyle = styleCab
            '    '===Valores===
            '    Dim valorCab As String = odtDetalle.Columns(x).ColumnName.ToString().Trim()
            '    objWorkSheet.GetRow(rowActual).GetCell(y).SetCellValue(valorCab)
            'Next
            '===================ADICIONAMOS COLUMNAS DE TARIFA Y PORCENTAJES===================
            'y = odtDetalle.Columns.Count + 2
            'objWorkSheet.GetRow(rowActual).CreateCell(y).CellStyle = styleCab
            'objWorkSheet.GetRow(rowActual).GetCell(y).SetCellValue("PORCENTAJE")
            'If filtro.Item("VER_COTIZACION") = True Then
            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 1).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 1).SetCellValue("TARIFA X CI")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 2).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 2).SetCellValue("TARIFA")
            'End If
            rowActual = rowActual + 1
            '===================Se Carga El Detalle============================
            y = 0
            Dim iFiltroSig As Integer = rowActual
            Dim celda As String = ""
            Dim posTarifas As Integer = 0
            Dim calcPor As Double = 0D
            Dim calcTarif As Double = 0D
            Dim iPosColExp As Integer = 0
            For i As Integer = 0 To odtDetalle.Rows.Count - 1
                objWorkSheet.CreateRow(i + rowActual)


                For Each ItemCol As String In ListaColExport

                    'Next

                    'For x As Integer = 0 To odtDetalle.Columns.Count - 1
                    'y = x + 2

                    If ItemCol = "PORCENTAJE" OrElse ItemCol = "TARIFA_X_CI" OrElse ItemCol = "TARIFA" Then
                        Continue For
                    End If

                    iPosColExp = PosListCol(ItemCol)
                    Select Case ItemCol
                        Case "PESO"

                            celda = odtDetalle.Rows(i).Item("PESO").ToString.Trim
                            posTarifas = odtDetalle.Columns.Count + 2
                            If totales.Item("T_KILO") = 0 Then
                                calcPor = 0
                            Else
                                calcPor = 100 * CDbl(celda) / totales.Item("T_KILO") 'Math.Round(, 0, 2) 'Calcula el porcentaje
                                calcPor = Math.Round(calcPor, 2)
                            End If

                            If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue(CDbl(celda))
                                '------------------------------------------------------------------------------------
                                objWorkSheet.GetRow(i + rowActual).CreateCell(PosListCol("PORCENTAJE")).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(PosListCol("PORCENTAJE")).SetCellValue(calcPor)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleMonto 'CI
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue("")
                                '------------------------------------------------------------------------------------
                                objWorkSheet.GetRow(i + rowActual).CreateCell(PosListCol("PORCENTAJE")).CellStyle = styleMontoCI
                                objWorkSheet.GetRow(i + rowActual).GetCell(PosListCol("PORCENTAJE")).SetCellValue("")
                            End If
                            If filtro.Item("VER_COTIZACION") = True Then 'Cuando el cargo plan tiene Cotizaciones
                                calcTarif = (calcPor * filtro.Item("TARIFA_MONTO")) / 100
                                If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PosListCol("TARIFA_X_CI")).CellStyle = styleMonto
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PosListCol("TARIFA_X_CI")).SetCellValue("")
                                    '------------------------------------------------------------------------------------
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PosListCol("TARIFA")).CellStyle = styleMonto
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PosListCol("TARIFA")).SetCellValue(calcTarif)
                                Else
                                    calcTarif = (calcTarif * 0.01) * odtDetalle.Rows(i).Item("POR_CI")
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PosListCol("TARIFA_X_CI")).CellStyle = styleMontoCI
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PosListCol("TARIFA_X_CI")).SetCellValue(calcTarif)
                                    '------------------------------------------------------------------------------------
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PosListCol("TARIFA")).CellStyle = styleMontoCI
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PosListCol("TARIFA")).SetCellValue("")
                                End If
                            End If

                        Case "CUENTA_IMPUTACION"

                            celda = odtDetalle.Rows(i).Item("CUENTA_IMPUTACION").ToString().Trim()
                            If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleMonto 'CI
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue(celda)
                            End If

                        Case "POR_CI"
                            celda = odtDetalle.Rows(i).Item("POR_CI").ToString().Trim()
                            If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleMontoCI
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue(CDbl(celda))
                            End If

                        Case "M3"

                            celda = odtDetalle.Rows(i).Item("M3").ToString().Trim()
                            If IsNumeric(celda) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue(Convert.ToDouble(celda))
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).SetCellValue(celda)
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).CellStyle = style
                            End If
                        Case "COD_PRODUCTO"
                            celda = odtDetalle.Rows(i).Item("COD_PRODUCTO").ToString().Trim()
                            objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).SetCellValue(celda)
                            objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).CellStyle = style
                        Case Else
                            celda = odtDetalle.Rows(i).Item(ItemCol).ToString().Trim()
                            If IsNumeric(celda) Then
                                If celda.Contains(".") Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleMonto
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleNumber
                                End If
                                If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue(celda.ToString)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue(Convert.ToDouble(celda))
                                End If
                            Else
                                If IsDate(celda) Then
                                    celda = String.Format("{0:d}", CDate(celda))
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).CellStyle = styleFecha
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).SetCellValue(celda)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExp).SetCellValue(odtDetalle.Rows(i).Item(ItemCol).ToString().Trim())
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExp).CellStyle = style
                                End If
                            End If

                    End Select


                    'If odtDetalle.Columns(x).ColumnName = "PESO" Then
                    '    celda = odtDetalle.Rows(i).Item("PESO").ToString.Trim
                    '    posTarifas = odtDetalle.Columns.Count + 2
                    '    If totales.Item("T_KILO") = 0 Then
                    '        calcPor = 0
                    '    Else
                    '        calcPor = 100 * CDbl(celda) / totales.Item("T_KILO") 'Math.Round(, 0, 2) 'Calcula el porcentaje
                    '        calcPor = Math.Round(calcPor, 2)
                    '    End If

                    '    If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(CDbl(celda))
                    '        '------------------------------------------------------------------------------------
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas).CellStyle = styleMonto
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas).SetCellValue(calcPor)
                    '    Else
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto 'CI
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue("")
                    '        '------------------------------------------------------------------------------------
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas).CellStyle = styleMontoCI
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas).SetCellValue("")
                    '    End If
                    '    If filtro.Item("VER_COTIZACION") = True Then 'Cuando el cargo plan tiene Cotizaciones
                    '        calcTarif = (calcPor * filtro.Item("TARIFA_MONTO")) / 100
                    '        If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas + 1).CellStyle = styleMonto
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas + 1).SetCellValue("")
                    '            '------------------------------------------------------------------------------------
                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas + 2).CellStyle = styleMonto
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas + 2).SetCellValue(calcTarif)
                    '        Else
                    '            calcTarif = (calcTarif * 0.01) * odtDetalle.Rows(i).Item("POR_CI")
                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas + 1).CellStyle = styleMontoCI
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas + 1).SetCellValue(calcTarif)
                    '            '------------------------------------------------------------------------------------
                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas + 2).CellStyle = styleMontoCI
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas + 2).SetCellValue("")
                    '        End If
                    '    End If
                    'ElseIf odtDetalle.Columns(x).ColumnName = "CUENTA_IMPUTACION" Then
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda)
                    'Else
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto 'CI
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda)
                    'End If
                    'ElseIf odtDetalle.Columns(x).ColumnName = "POR_CI" Then
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda)
                    'Else
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMontoCI
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(CDbl(celda))
                    'End If


                    'ElseIf odtDetalle.Columns(x).ColumnName = "M3" Then
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'If IsNumeric(celda) Then
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    'Else
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).SetCellValue(celda)
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).CellStyle = style
                    'End If

                    'ElseIf odtDetalle.Columns(x).ColumnName = "COD_PRODUCTO" Then
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'objWorkSheet.GetRow(i + rowActual).CreateCell(y).SetCellValue(celda)
                    'objWorkSheet.GetRow(i + rowActual).GetCell(y).CellStyle = style

                    'Else
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'If IsNumeric(celda) Then
                    '    If celda.Contains(".") Then
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '    Else
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleNumber
                    '    End If
                    '    If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda.ToString)
                    '    Else
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    '    End If
                    'Else
                    '    If IsDate(celda) Then
                    '        celda = String.Format("{0:d}", CDate(celda))
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleFecha
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda)
                    '    Else
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(y).SetCellValue(odtDetalle.Rows(i).Item(x).ToString().Trim())
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(y).CellStyle = style
                    '    End If
                    'End If
                    'End If
                Next
            Next

            'PosListCol

            Dim iRow As Integer = odtDetalle.Rows.Count + rowActual
            Dim txtFiltro2 As String = ""
            objWorkSheet.CreateRow(iRow)
            '      objWorkSheet.GetRow(iRow).CreateCell(7).CellStyle = style
            'objWorkSheet.GetRow(iRow).GetCell(7).SetCellValue("TOTAL ")
            objWorkSheet.GetRow(iRow).CreateCell(PosListCol("PESO") - 1).CellStyle = style
            objWorkSheet.GetRow(iRow).GetCell(PosListCol("PESO") - 1).SetCellValue("TOTAL ")


            txtFiltro2 = totales.Item("T_KILO")
            If txtFiltro2 = "" Then txtFiltro2 = "0"
            'objWorkSheet.GetRow(iRow).CreateCell(10).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(10).SetCellValue(Convert.ToDouble(txtFiltro2))
            objWorkSheet.GetRow(iRow).CreateCell(PosListCol("PESO")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(PosListCol("PESO")).SetCellValue(Convert.ToDouble(txtFiltro2))
            txtFiltro2 = totales.Item("T_M3")
            If txtFiltro2 = "" Then txtFiltro2 = "0"
            'objWorkSheet.GetRow(iRow).CreateCell(11).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(11).SetCellValue(Convert.ToDouble(txtFiltro2))
            objWorkSheet.GetRow(iRow).CreateCell(PosListCol("M3")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(PosListCol("M3")).SetCellValue(Convert.ToDouble(txtFiltro2))
            txtFiltro2 = totales.Item("T_BULTO")
            If txtFiltro2 = "" Then txtFiltro2 = "0"
            'objWorkSheet.GetRow(iRow).CreateCell(12).CellStyle = styleNumber
            'objWorkSheet.GetRow(iRow).GetCell(12).SetCellValue(Convert.ToDouble(txtFiltro2))
            objWorkSheet.GetRow(iRow).CreateCell(PosListCol("BULTOS")).CellStyle = styleNumber
            objWorkSheet.GetRow(iRow).GetCell(PosListCol("BULTOS")).SetCellValue(Convert.ToDouble(txtFiltro2))
            iRow = iRow + 1

            Dim odtg2 As DataTable = oDs.Tables(1)
            '===================Se Carga El Detalle Resumen============================
            y = 0
            celda = ""
            For i As Integer = 0 To odtg2.Rows.Count - 1
                objWorkSheet.CreateRow(i + iRow)
                For x As Integer = 0 To odtg2.Columns.Count - 1
                    y = x + 9
                    celda = odtg2.Rows(i).Item(x).ToString().Trim()
                    Select Case x
                        Case 0
                            objWorkSheet.GetRow(i + iRow).CreateCell(y).CellStyle = style
                            objWorkSheet.GetRow(i + iRow).GetCell(y).SetCellValue(celda)
                        Case 1, 2
                            objWorkSheet.GetRow(i + iRow).CreateCell(y).CellStyle = styleMonto
                            objWorkSheet.GetRow(i + iRow).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                        Case 3
                            objWorkSheet.GetRow(i + iRow).CreateCell(y).CellStyle = styleNumber
                            objWorkSheet.GetRow(i + iRow).GetCell(y).SetCellValue(Convert.ToInt64(celda))
                    End Select
                    'If IsNumeric(celda) Then
                    '  objWorkSheet.GetRow(i + iRow).CreateCell(y).CellStyle = styleMonto
                    '  objWorkSheet.GetRow(i + iRow).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    'Else
                    '  objWorkSheet.GetRow(i + iRow).CreateCell(y).SetCellValue(odtg2.Rows(i).Item(x).ToString().Trim())
                    '  objWorkSheet.GetRow(i + iRow).GetCell(y).CellStyle = style
                    'End If
                Next
            Next
            '===================================================================          
            Dim txtFiltro_ As String = ""
            objWorkSheet.GetRow(iFiltroSig - 1).CreateCell(0).CellStyle = styleCab
            objWorkSheet.GetRow(iFiltroSig - 1).CreateCell(1).CellStyle = styleCab
            objWorkSheet.GetRow(iFiltroSig - 1).GetCell(0).SetCellValue("")
            objWorkSheet.GetRow(iFiltroSig - 1).GetCell(1).SetCellValue("")

            objWorkSheet.GetRow(iFiltroSig).CreateCell(0).CellStyle = style
            objWorkSheet.GetRow(iFiltroSig).CreateCell(1).CellStyle = style
            txtFiltro_ = filtro.Item("FECHA")
            objWorkSheet.GetRow(iFiltroSig).GetCell(0).SetCellValue("FECHA :")
            objWorkSheet.GetRow(iFiltroSig).GetCell(1).SetCellValue(txtFiltro_.Trim)

            objWorkSheet.GetRow(iFiltroSig + 1).CreateCell(0).CellStyle = style
            objWorkSheet.GetRow(iFiltroSig + 1).CreateCell(1).CellStyle = style
            txtFiltro_ = filtro.Item("ORIGEN")
            objWorkSheet.GetRow(iFiltroSig + 1).GetCell(0).SetCellValue("ORIGEN :")
            objWorkSheet.GetRow(iFiltroSig + 1).GetCell(1).SetCellValue(txtFiltro_.Trim)
            Dim iVerif As Integer = odtg2.Rows.Count + odtDetalle.Rows.Count
            If iVerif < 2 Then
                objWorkSheet.CreateRow(iFiltroSig + 2)
            End If
            objWorkSheet.GetRow(iFiltroSig + 2).CreateCell(0).CellStyle = style
            objWorkSheet.GetRow(iFiltroSig + 2).CreateCell(1).CellStyle = style
            txtFiltro_ = filtro.Item("DESTINO")
            objWorkSheet.GetRow(iFiltroSig + 2).GetCell(0).SetCellValue("DESTINO :")
            objWorkSheet.GetRow(iFiltroSig + 2).GetCell(1).SetCellValue(txtFiltro_.Trim)
            If iVerif < 3 Then
                objWorkSheet.CreateRow(iFiltroSig + 3)
            End If
            objWorkSheet.GetRow(iFiltroSig + 3).CreateCell(0).CellStyle = style
            style.WrapText = True
            objWorkSheet.GetRow(iFiltroSig + 3).CreateCell(1).CellStyle = style
            txtFiltro_ = filtro.Item("MEDIO")
            objWorkSheet.GetRow(iFiltroSig + 3).GetCell(0).SetCellValue("MEDIO :")
            objWorkSheet.GetRow(iFiltroSig + 3).GetCell(1).SetCellValue(txtFiltro_.Trim)

            '=============================================================
            '======================total costos===========================
            '=============================================================
            If filtro.Item("VER_COTIZACION") = True Then
                Dim cIniC As String = LetraNumero_NPOI(18) & (rowActual + 1).ToString
                Dim cFinC As String = LetraNumero_NPOI(18) & (iRow).ToString
                Dim sumCosto As String = ""
                If odtDetalle.Rows.Count <> 0 Then
                    sumCosto = "SUM(" & cIniC & ":" & cFinC & ")"
                Else
                    sumCosto = "0"
                End If
                objWorkSheet.GetRow(iRow).CreateCell(17).CellStyle = styleMonto
                objWorkSheet.GetRow(iRow).GetCell(17).CellFormula = (sumCosto)
            End If
            '=============================================================
            '===============CREAMOS RESUMEN POR CUENTA IMPUTACION=========
            Dim oDtResCuenta As DataTable = oDs.Tables("ResCuenta")
            rowActual = objWorkSheet.LastRowNum + 3
            If filtro.Item("VER_COTIZACION") = True Then
                Dim cel As String
                Dim posCelda As Int64 = 0
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue("Resumen por Cuenta de Imputación")
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 4, rowActual, 5))
                rowActual += 1
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                    posCelda = x + 4
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(posCelda).CellStyle = styleCab
                    '===Valores===
                    Dim valorCab As String = oDtResCuenta.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(posCelda).SetCellValue(valorCab)
                Next
                rowActual += 1
                For i As Integer = 0 To oDtResCuenta.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                        posCelda = x + 4
                        cel = oDtResCuenta.Rows(i).Item(x).ToString().Trim()
                        If IsNumeric(cel) Then
                            If cel.Contains(".") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(Double.Parse(cel.ToString))
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(cel)
                        End If
                    Next
                Next
            End If
            '=======================================================================
            objWorkSheet.DefaultColumnWidth = 25
            objWorkSheet.DefaultRowHeightInPoints = 25
            For z As Integer = 0 To odtDetalle.Columns.Count + 5
                If z <> 1 Then
                    objWorkSheet.AutoSizeColumn(z)
                Else
                    objWorkSheet.AutoSizeColumn(z, True)
                End If
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub
    ''GASTON
    Private Shared Sub GenerarColumnasAereo(ByRef oDat As DataTable, ByVal oDtDetalle As DataTable)

        oDat.Columns.Add("ITEM")
        oDat.Columns.Add("GUIA_PROV")
        oDat.Columns.Add("PROVEEDOR")
        oDat.Columns.Add("COD_PRODUCTO")
        oDat.Columns.Add("CONTENIDO")
        oDat.Columns.Add("F_DE_INGRESO")
        oDat.Columns.Add("OC")
        oDat.Columns.Add("LOTE")
        oDat.Columns.Add("GUIA_REMISION")
        oDat.Columns.Add("PESO")
        oDat.Columns.Add("M3")
        oDat.Columns.Add("BULTOS")
        oDat.Columns.Add("CUENTA_IMPUTACION")
        oDat.Columns.Add("POR_CI")

        oDat.Columns.Add("CUENTA_MAYOR")
        oDat.Columns.Add("CENTRO_COSTE")
        oDat.Columns.Add("ELEMENTO_PEP")
        oDat.Columns.Add("ORDEN")
        oDat.Columns.Add("GRAFO")

        For Each row As DataRow In oDtDetalle.Rows
            Dim fila As DataRow = oDat.NewRow
            fila.Item("ITEM") = row("ITEM")
            fila.Item("GUIA_PROV") = row("GUIA_PROV")
            fila.Item("PROVEEDOR") = row("PROVEEDOR")
            fila.Item("COD_PRODUCTO") = row("COD_PRODUCTO")
            fila.Item("CONTENIDO") = row("CONTENIDO")
            fila.Item("F_DE_INGRESO") = row("F_DE_INGRESO")
            fila.Item("OC") = row("OC")
            fila.Item("LOTE") = row("LOTE")
            fila.Item("GUIA_REMISION") = row("GUIA_REMISION")
            fila.Item("PESO") = row("PESO")
            fila.Item("M3") = row("M3")
            fila.Item("BULTOS") = row("BULTOS")
            fila.Item("CUENTA_IMPUTACION") = row("CUENTA_IMPUTACION")
            fila.Item("POR_CI") = row("POR_CI")

            fila.Item("CUENTA_MAYOR") = row("CUENTA_MAYOR")
            fila.Item("CENTRO_COSTE") = row("CENTRO_COSTE")
            fila.Item("ELEMENTO_PEP") = row("ELEMENTO_PEP")
            fila.Item("ORDEN") = row("ORDEN")
            fila.Item("GRAFO") = row("GRAFO")
            oDat.Rows.Add(fila)
        Next

    End Sub
    Public Shared Sub ExportExcelPP_Aereo_Unitario_Plus(ByVal oDs As DataSet, Optional ByVal filtro As Hashtable = Nothing, Optional ByVal totales As Hashtable = Nothing)
        '================================================================================
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)

            Dim odtDetalle As New DataTable

            odtDetalle = oDs.Tables("Aereo")
            objWorkSheet = objWorkBook.CreateSheet(odtDetalle.TableName)
            objWorkSheet.CreateRow(3)
            '=============Stilos======================
            Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
            oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontFiltro.FontHeight = 165

            Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
            oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.FontHeight = 165

            Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
            oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.FontHeight = 170

            '============================================
            Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
            Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
            Estilos_Excel_NPOI(style, FORMATO.Normal)
            Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
            Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
            Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
            Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
            '============================================
            styleFiltro.SetFont(oFontFiltro)
            styleCab.SetFont(oFontCab)
            style.SetFont(oFont)
            styleTitulo.SetFont(oFontFiltro)
            styleNumber.SetFont(oFont)
            styleMonto.SetFont(oFont)
            styleFecha.SetFont(oFont)
            styleMontoCI.SetFont(oFont)
            '============================================
            Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
            'create the anchor
            Dim anchor As HSSFClientAnchor
            anchor = New HSSFClientAnchor(0, 0, 0, 100, 0, 0, 0, 0)
            Dim rutaImagen As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.PNG" 'logo.png -------------- 'Logo_Cargo_Plan.PNG
            If IO.File.Exists(rutaImagen) Then
                'load the picture and get the picture index in the workbook
                Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaImagen, objWorkBook)), HSSFPicture)
                'Reset the image to the original size.
                picture.Resize(0.7)
            End If
            Dim rowActual As Integer = 6
            Dim y As Integer = 0
            '=======================================
            '==============FiltroS==================
            '=======================================
            Dim txtFiltro As String = ""

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("CARGO_PLAN")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 1))
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("OPERACION")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 1))

            '==========validamos permiso para visualizar cotizacion==========
            If filtro.Item("VER_COTIZACION") = True Then
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleFiltro
                If filtro.Item("TARIFA_MONEDA") = 0 Then
                    txtFiltro = "TARIFA :  " & filtro.Item("TARIFA_MONTO")
                Else
                    If filtro.Item("TARIFA_MONEDA") = 1 Then
                        txtFiltro = "TARIFA : S/. " & filtro.Item("TARIFA_MONTO")
                    Else
                        txtFiltro = "TARIFA : USD " & filtro.Item("TARIFA_MONTO")
                    End If
                End If
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue(txtFiltro)
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 5, rowActual, 6))
            End If
            '================================================================

            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("TITULO_1")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2))
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("TITULO_2")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            Dim Region As New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2)
            objWorkSheet.AddMergedRegion(Region)
            rowActual = rowActual + 1

            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = filtro.Item("ESTADO_ENTREGA")
            objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, 2))
            rowActual = rowActual + 1

            '===================Se cargan Las Cabeceras=====================            
            objWorkSheet.CreateRow(rowActual)

            Dim ListaColExport As New List(Of String)
            Dim PostListCol As New Hashtable

            ListaColExport.Add("ITEM")
            ListaColExport.Add("GUIA_PROV")
            ListaColExport.Add("PROVEEDOR")
            ListaColExport.Add("COD_PRODUCTO")
            ListaColExport.Add("CONTENIDO")
            ListaColExport.Add("F_DE_INGRESO")
            ListaColExport.Add("OC")
            ListaColExport.Add("LOTE")
            ListaColExport.Add("GUIA_REMISION")
            ListaColExport.Add("MEDIO_ENVIO")
            ListaColExport.Add("PESO")
            ListaColExport.Add("M3")
            ListaColExport.Add("BULTOS")
            ListaColExport.Add("CUENTA_IMPUTACION")
            ListaColExport.Add("POR_CI")
            ListaColExport.Add("PORCENTAJE")
            If filtro.Item("VER_COTIZACION") = True Then
                ListaColExport.Add("TARIFA_X_CI")
                ListaColExport.Add("TARIFA")
                ListaColExport.Add("CUENTA_MAYOR")
                ListaColExport.Add("CENTRO_COSTE")
                ListaColExport.Add("ELEMENTO_PEP")
                ListaColExport.Add("ORDEN")
                ListaColExport.Add("GRAFO")
                ListaColExport.Add("SIN_CUENTA")
            Else
                ListaColExport.Add("CUENTA_MAYOR")
                ListaColExport.Add("CENTRO_COSTE")
                ListaColExport.Add("ELEMENTO_PEP")
                ListaColExport.Add("ORDEN")
                ListaColExport.Add("GRAFO")
                ListaColExport.Add("SIN_CUENTA")
            End If
          
            y = 2
            For Each Item As String In ListaColExport
                objWorkSheet.GetRow(rowActual).CreateCell(y).CellStyle = styleCab
                Dim valorCab As String = Item
                objWorkSheet.GetRow(rowActual).GetCell(y).SetCellValue(valorCab)
                PostListCol(Item) = y
                y = y + 1
            Next

            'odtDetalle.Columns("POR_CI").SetOrdinal(13)
            'For x As Integer = 0 To odtDetalle.Columns.Count - 1
            '    If odtDetalle.Columns(x).ColumnName <> "CUENTA_MAYOR" AndAlso _
            '        odtDetalle.Columns(x).ColumnName <> "CENTRO_COSTE" AndAlso _
            '        odtDetalle.Columns(x).ColumnName <> "ELEMENTO_PEP" AndAlso _
            '        odtDetalle.Columns(x).ColumnName <> "ORDEN" AndAlso _
            '        odtDetalle.Columns(x).ColumnName <> "GRAFO" AndAlso _
            '        odtDetalle.Columns(x).ColumnName <> "SIN_CUENTA" Then
            '        '===Estilo===
            '        y = x + 2
            '        objWorkSheet.GetRow(rowActual).CreateCell(y).CellStyle = styleCab
            '        Dim valorCab As String = odtDetalle.Columns(x).ColumnName.ToString().Trim()
            '        objWorkSheet.GetRow(rowActual).GetCell(y).SetCellValue(valorCab)
            '    End If
            'Next
            '===================ADICIONAMOS COLUMNAS DE TARIFA Y PORCENTAJES===================
            'objWorkSheet.GetRow(rowActual).CreateCell(y + 1).CellStyle = styleCab
            'objWorkSheet.GetRow(rowActual).GetCell(y + 1).SetCellValue("PORCENTAJE")
            'If filtro.Item("VER_COTIZACION") = True Then
            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 2).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 2).SetCellValue("TARIFA X CI")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 3).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 3).SetCellValue("TARIFA")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 4).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 4).SetCellValue("CUENTA_MAYOR")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 5).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 5).SetCellValue("CENTRO_COSTE")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 6).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 6).SetCellValue("ELEMENTO_PEP")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 7).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 7).SetCellValue("ORDEN")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 8).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 8).SetCellValue("GRAFO")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 9).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 9).SetCellValue("SIN_CUENTA")

            'Else
            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 2).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 2).SetCellValue("CUENTA_MAYOR")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 3).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 3).SetCellValue("CENTRO_COSTE")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 4).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 4).SetCellValue("ELEMENTO_PEP")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 5).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 5).SetCellValue("ORDEN")

            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 6).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 6).SetCellValue("GRAFO")


            '    objWorkSheet.GetRow(rowActual).CreateCell(y + 7).CellStyle = styleCab
            '    objWorkSheet.GetRow(rowActual).GetCell(y + 7).SetCellValue("SIN_CUENTA")
            'End If

            rowActual = rowActual + 1
            '===================Se Carga El Detalle============================
            'y = 0
            Dim iFiltroSig As Integer = rowActual
            Dim celda As String = ""
            Dim posTarifas As Integer = 0
            Dim calcPor As Double = 0D
            Dim calcTarif As Double = 0D
            Dim sin_cuenta As String
            Dim iPosColExport As Integer = 0
            For i As Integer = 0 To odtDetalle.Rows.Count - 1
                objWorkSheet.CreateRow(i + rowActual)

                For Each ItemCol As String In ListaColExport
                    'Next
                    'For x As Integer = 0 To odtDetalle.Columns.Count - 1
                    If ItemCol = "PORCENTAJE" OrElse ItemCol = "TARIFA_X_CI" OrElse ItemCol = "TARIFA" OrElse ItemCol = "SIN_CUENTA" Then
                        Continue For
                    End If
                    iPosColExport = PostListCol(ItemCol)
                    Select Case ItemCol
                        Case "PESO"

                            celda = odtDetalle.Rows(i).Item("PESO").ToString.Trim
                            posTarifas = odtDetalle.Columns.Count - 3
                            If totales.Item("T_KILO") = 0 Then
                                calcPor = 0
                            Else
                                calcPor = 100 * CDbl(celda) / totales.Item("T_KILO") 'Math.Round(, 0, 2) 'Calcula el porcentaje
                                calcPor = Math.Round(calcPor, 2)
                            End If
                            If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue(CDbl(celda))
                                '------------------------------------------------------------------------------------
                                objWorkSheet.GetRow(i + rowActual).CreateCell(PostListCol("PORCENTAJE")).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(PostListCol("PORCENTAJE")).SetCellValue(calcPor)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleMonto 'CI
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue("")
                                '------------------------------------------------------------------------------------
                                objWorkSheet.GetRow(i + rowActual).CreateCell(PostListCol("PORCENTAJE")).CellStyle = styleMontoCI
                                objWorkSheet.GetRow(i + rowActual).GetCell(PostListCol("PORCENTAJE")).SetCellValue("")
                            End If
                            If filtro.Item("VER_COTIZACION") = True Then 'Cuando el cargo plan tiene Cotizaciones
                                calcTarif = (calcPor * filtro.Item("TARIFA_MONTO")) / 100
                                If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PostListCol("TARIFA_X_CI")).CellStyle = styleMonto
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PostListCol("TARIFA_X_CI")).SetCellValue("")
                                    '------------------------------------------------------------------------------------
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PostListCol("TARIFA")).CellStyle = styleMonto
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PostListCol("TARIFA")).SetCellValue(calcTarif)
                                Else
                                    calcTarif = (calcTarif * 0.01) * odtDetalle.Rows(i).Item("POR_CI")
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PostListCol("TARIFA_X_CI")).CellStyle = styleMontoCI
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PostListCol("TARIFA_X_CI")).SetCellValue(calcTarif)
                                    '------------------------------------------------------------------------------------
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PostListCol("TARIFA")).CellStyle = styleMontoCI
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PostListCol("TARIFA")).SetCellValue("")
                                End If
                            End If
                        Case "CUENTA_IMPUTACION"

                            celda = odtDetalle.Rows(i).Item(ItemCol).ToString().Trim()
                            If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleMonto 'CI
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue(celda)
                            End If

                        Case "POR_CI"


                            celda = odtDetalle.Rows(i).Item(ItemCol).ToString().Trim()
                            If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleMontoCI
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue(CDbl(celda))
                            End If

                        Case "M3"

                            celda = odtDetalle.Rows(i).Item(ItemCol).ToString().Trim()
                            If IsNumeric(celda) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue(Convert.ToDouble(celda))
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).SetCellValue(celda)
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).CellStyle = style
                            End If

                        Case "COD_PRODUCTO"
                            celda = odtDetalle.Rows(i).Item(ItemCol).ToString().Trim()
                            objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).SetCellValue(celda)
                            objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).CellStyle = style
                        Case "CUENTA_MAYOR", "CENTRO_COSTE", "ELEMENTO_PEP", "ORDEN", "GRAFO"
                            celda = odtDetalle.Rows(i).Item(ItemCol).ToString().Trim()
                            sin_cuenta = ""
                            If ItemCol = "GRAFO" Then
                                If odtDetalle.Rows(i).Item("GRAFO").ToString().Trim() = "" AndAlso _
                                   odtDetalle.Rows(i).Item("CUENTA_MAYOR").ToString().Trim() = "" AndAlso _
                                   odtDetalle.Rows(i).Item("CENTRO_COSTE").ToString().Trim() = "" AndAlso _
                                   odtDetalle.Rows(i).Item("ELEMENTO_PEP").ToString().Trim() = "" AndAlso _
                                   odtDetalle.Rows(i).Item("ORDEN").ToString().Trim() = "" Then
                                    sin_cuenta = "MATERIAL SIN STOCK"
                                End If
                            End If
                            If filtro.Item("VER_COTIZACION") = True Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).SetCellValue(celda)
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).CellStyle = style
                                If ItemCol = "GRAFO" Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PostListCol("SIN_CUENTA")).SetCellValue(sin_cuenta)
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PostListCol("SIN_CUENTA")).CellStyle = style
                                End If
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).SetCellValue(celda)
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).CellStyle = style
                                If ItemCol = "GRAFO" Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(PostListCol("SIN_CUENTA")).SetCellValue(sin_cuenta)
                                    objWorkSheet.GetRow(i + rowActual).GetCell(PostListCol("SIN_CUENTA")).CellStyle = style
                                End If
                            End If


                        Case Else

                            celda = odtDetalle.Rows(i).Item(ItemCol).ToString().Trim()
                            If IsNumeric(celda) Then
                                If celda.Contains(".") Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleMonto
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleNumber
                                End If
                                If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue(celda.ToString)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue(Convert.ToDouble(celda))
                                End If
                            Else
                                If IsDate(celda) Then
                                    celda = String.Format("{0:d}", CDate(celda))
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).CellStyle = styleFecha
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).SetCellValue(celda)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosColExport).SetCellValue(odtDetalle.Rows(i).Item(ItemCol).ToString().Trim())
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosColExport).CellStyle = style
                                End If
                            End If


                    End Select
                    'y = x + 2
                    'If odtDetalle.Columns(x).ColumnName = "PESO" Then
                    '    celda = odtDetalle.Rows(i).Item("PESO").ToString.Trim
                    '    posTarifas = odtDetalle.Columns.Count - 3
                    '    If totales.Item("T_KILO") = 0 Then
                    '        calcPor = 0
                    '    Else
                    '        calcPor = 100 * CDbl(celda) / totales.Item("T_KILO") 'Math.Round(, 0, 2) 'Calcula el porcentaje
                    '        calcPor = Math.Round(calcPor, 2)
                    '    End If
                    '    If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(CDbl(celda))
                    '        '------------------------------------------------------------------------------------
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas).CellStyle = styleMonto
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas).SetCellValue(calcPor)
                    '    Else
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto 'CI
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue("")
                    '        '------------------------------------------------------------------------------------
                    '        objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas).CellStyle = styleMontoCI
                    '        objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas).SetCellValue("")
                    '    End If
                    '    If filtro.Item("VER_COTIZACION") = True Then 'Cuando el cargo plan tiene Cotizaciones
                    '        calcTarif = (calcPor * filtro.Item("TARIFA_MONTO")) / 100
                    '        If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas + 1).CellStyle = styleMonto
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas + 1).SetCellValue("")
                    '            '------------------------------------------------------------------------------------
                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas + 2).CellStyle = styleMonto
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas + 2).SetCellValue(calcTarif)
                    '        Else
                    '            calcTarif = (calcTarif * 0.01) * odtDetalle.Rows(i).Item("POR_CI")
                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas + 1).CellStyle = styleMontoCI
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas + 1).SetCellValue(calcTarif)
                    '            '------------------------------------------------------------------------------------
                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(posTarifas + 2).CellStyle = styleMontoCI
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(posTarifas + 2).SetCellValue("")
                    '        End If
                    '    End If
                    'ElseIf odtDetalle.Columns(x).ColumnName = "CUENTA_IMPUTACION" Then
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda)
                    'Else
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto 'CI
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda)
                    'End If
                    'ElseIf odtDetalle.Columns(x).ColumnName = "POR_CI" Then
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'If IsDBNull(odtDetalle.Rows(i).Item("POR_CI")) Then
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda)
                    'Else
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMontoCI
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(CDbl(celda))
                    'End If
                    'ElseIf odtDetalle.Columns(x).ColumnName = "M3" Then
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'If IsNumeric(celda) Then
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    'Else
                    '    objWorkSheet.GetRow(i + rowActual).CreateCell(y).SetCellValue(celda)
                    '    objWorkSheet.GetRow(i + rowActual).GetCell(y).CellStyle = style
                    'End If
                    'ElseIf odtDetalle.Columns(x).ColumnName = "COD_PRODUCTO" Then
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'objWorkSheet.GetRow(i + rowActual).CreateCell(y).SetCellValue(celda)
                    'objWorkSheet.GetRow(i + rowActual).GetCell(y).CellStyle = style

                    'Else
                    'celda = odtDetalle.Rows(i).Item(x).ToString().Trim()
                    'Select Case odtDetalle.Columns(x).ColumnName
                    '    Case "CUENTA_MAYOR", "CENTRO_COSTE", "ELEMENTO_PEP", "ORDEN", "GRAFO"
                    '        sin_cuenta = ""
                    '        If odtDetalle.Columns(x).ColumnName = "GRAFO" Then
                    '            If odtDetalle.Rows(i).Item("GRAFO").ToString().Trim() = "" AndAlso _
                    '               odtDetalle.Rows(i).Item("CUENTA_MAYOR").ToString().Trim() = "" AndAlso _
                    '               odtDetalle.Rows(i).Item("CENTRO_COSTE").ToString().Trim() = "" AndAlso _
                    '               odtDetalle.Rows(i).Item("ELEMENTO_PEP").ToString().Trim() = "" AndAlso _
                    '               odtDetalle.Rows(i).Item("ORDEN").ToString().Trim() = "" Then
                    '                sin_cuenta = "MATERIAL SIN STOCK"
                    '            End If
                    '        End If

                    '        If filtro.Item("VER_COTIZACION") = True Then


                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(y + 3).SetCellValue(celda)
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(y + 3).CellStyle = style

                    '            If odtDetalle.Columns(x).ColumnName = "GRAFO" Then


                    '                objWorkSheet.GetRow(i + rowActual).CreateCell(y + 4).SetCellValue(sin_cuenta)
                    '                objWorkSheet.GetRow(i + rowActual).GetCell(y + 4).CellStyle = style
                    '            End If




                    '        Else


                    '            objWorkSheet.GetRow(i + rowActual).CreateCell(y + 1).SetCellValue(celda)
                    '            objWorkSheet.GetRow(i + rowActual).GetCell(y + 1).CellStyle = style

                    '            If odtDetalle.Columns(x).ColumnName = "GRAFO" Then
                    '                objWorkSheet.GetRow(i + rowActual).CreateCell(y + 2).SetCellValue(sin_cuenta)
                    '                objWorkSheet.GetRow(i + rowActual).GetCell(y + 2).CellStyle = style
                    '            End If




                    '        End If
                    '    Case Else
                    '        If IsNumeric(celda) Then
                    '            If celda.Contains(".") Then
                    '                objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleMonto
                    '            Else
                    '                objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleNumber
                    '            End If
                    '            If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                    '                objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda.ToString)
                    '            Else
                    '                objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    '            End If
                    '        Else
                    '            If IsDate(celda) Then
                    '                celda = String.Format("{0:d}", CDate(celda))
                    '                objWorkSheet.GetRow(i + rowActual).CreateCell(y).CellStyle = styleFecha
                    '                objWorkSheet.GetRow(i + rowActual).GetCell(y).SetCellValue(celda)
                    '            Else
                    '                objWorkSheet.GetRow(i + rowActual).CreateCell(y).SetCellValue(odtDetalle.Rows(i).Item(x).ToString().Trim())
                    '                objWorkSheet.GetRow(i + rowActual).GetCell(y).CellStyle = style
                    '            End If
                    '        End If
                    'End Select
                    'End If
                Next
            Next

            Dim iRow As Integer = odtDetalle.Rows.Count + rowActual
            Dim txtFiltro2 As String = ""
            objWorkSheet.CreateRow(iRow)
            'objWorkSheet.GetRow(iRow).CreateCell(7).CellStyle = style
            'objWorkSheet.GetRow(iRow).GetCell(7).SetCellValue("TOTAL ")
            objWorkSheet.GetRow(iRow).CreateCell(PostListCol("PESO") - 1).CellStyle = style
            objWorkSheet.GetRow(iRow).GetCell(PostListCol("PESO") - 1).SetCellValue("TOTAL ")


            txtFiltro2 = totales.Item("T_KILO")
            If txtFiltro2 = "" Then txtFiltro2 = "0"
            'objWorkSheet.GetRow(iRow).CreateCell(10).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(10).SetCellValue(Convert.ToDouble(txtFiltro2))
            objWorkSheet.GetRow(iRow).CreateCell(PostListCol("PESO")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(PostListCol("PESO")).SetCellValue(Convert.ToDouble(txtFiltro2))

            'PESO

            txtFiltro2 = totales.Item("T_M3")
            If txtFiltro2 = "" Then txtFiltro2 = "0"
            'objWorkSheet.GetRow(iRow).CreateCell(11).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).GetCell(11).SetCellValue(Convert.ToDouble(txtFiltro2))
            objWorkSheet.GetRow(iRow).CreateCell(PostListCol("M3")).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).GetCell(PostListCol("M3")).SetCellValue(Convert.ToDouble(txtFiltro2))

            txtFiltro2 = totales.Item("T_BULTO")
            If txtFiltro2 = "" Then txtFiltro2 = "0"
            'objWorkSheet.GetRow(iRow).CreateCell(12).CellStyle = styleNumber
            'objWorkSheet.GetRow(iRow).GetCell(12).SetCellValue(Convert.ToDouble(txtFiltro2))
            objWorkSheet.GetRow(iRow).CreateCell(PostListCol("BULTOS")).CellStyle = styleNumber
            objWorkSheet.GetRow(iRow).GetCell(PostListCol("BULTOS")).SetCellValue(Convert.ToDouble(txtFiltro2))
            iRow = iRow + 1

            Dim odtg2 As DataTable = oDs.Tables(1)
            '===================Se Carga El Detalle Resumen============================
            y = 0
            celda = ""
            For i As Integer = 0 To odtg2.Rows.Count - 1
                objWorkSheet.CreateRow(i + iRow)
                y = PostListCol("PESO") - 1
                For x As Integer = 0 To odtg2.Columns.Count - 1
                    'y = x + 9
                    celda = odtg2.Rows(i).Item(x).ToString().Trim()
                    Select Case x
                        Case 0
                            objWorkSheet.GetRow(i + iRow).CreateCell(y).CellStyle = style
                            objWorkSheet.GetRow(i + iRow).GetCell(y).SetCellValue(celda)
                            'objWorkSheet.GetRow(i + iRow).CreateCell(PostListCol("PESO")).CellStyle = style
                            'objWorkSheet.GetRow(i + iRow).GetCell(PostListCol("PESO")).SetCellValue(celda)
                        Case 1, 2
                            objWorkSheet.GetRow(i + iRow).CreateCell(y).CellStyle = styleMonto
                            objWorkSheet.GetRow(i + iRow).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            'objWorkSheet.GetRow(i + iRow).CreateCell(PostListCol("M3")).CellStyle = styleMonto
                            'objWorkSheet.GetRow(i + iRow).GetCell(PostListCol("M3")).SetCellValue(Convert.ToDouble(celda))
                        Case 3
                            objWorkSheet.GetRow(i + iRow).CreateCell(y).CellStyle = styleNumber
                            objWorkSheet.GetRow(i + iRow).GetCell(y).SetCellValue(Convert.ToInt64(celda))
                            'objWorkSheet.GetRow(i + iRow).CreateCell(PostListCol("BULTOS")).CellStyle = styleNumber
                            'objWorkSheet.GetRow(i + iRow).GetCell(PostListCol("BULTOS")).SetCellValue(Convert.ToInt64(celda))
                    End Select
                    y = y + 1
                Next

            Next
            '===================================================================          
            Dim txtFiltro_ As String = ""
            objWorkSheet.GetRow(iFiltroSig - 1).CreateCell(0).CellStyle = styleCab
            objWorkSheet.GetRow(iFiltroSig - 1).CreateCell(1).CellStyle = styleCab
            objWorkSheet.GetRow(iFiltroSig - 1).GetCell(0).SetCellValue("")
            objWorkSheet.GetRow(iFiltroSig - 1).GetCell(1).SetCellValue("")

            objWorkSheet.GetRow(iFiltroSig).CreateCell(0).CellStyle = style
            objWorkSheet.GetRow(iFiltroSig).CreateCell(1).CellStyle = style
            txtFiltro_ = filtro.Item("FECHA")
            objWorkSheet.GetRow(iFiltroSig).GetCell(0).SetCellValue("FECHA :")
            objWorkSheet.GetRow(iFiltroSig).GetCell(1).SetCellValue(txtFiltro_.Trim)

            objWorkSheet.GetRow(iFiltroSig + 1).CreateCell(0).CellStyle = style
            objWorkSheet.GetRow(iFiltroSig + 1).CreateCell(1).CellStyle = style
            txtFiltro_ = filtro.Item("ORIGEN")
            objWorkSheet.GetRow(iFiltroSig + 1).GetCell(0).SetCellValue("ORIGEN :")
            objWorkSheet.GetRow(iFiltroSig + 1).GetCell(1).SetCellValue(txtFiltro_.Trim)
            Dim iVerif As Integer = odtg2.Rows.Count + odtDetalle.Rows.Count
            If iVerif < 2 Then
                objWorkSheet.CreateRow(iFiltroSig + 2)
            End If
            objWorkSheet.GetRow(iFiltroSig + 2).CreateCell(0).CellStyle = style
            objWorkSheet.GetRow(iFiltroSig + 2).CreateCell(1).CellStyle = style
            txtFiltro_ = filtro.Item("DESTINO")
            objWorkSheet.GetRow(iFiltroSig + 2).GetCell(0).SetCellValue("DESTINO :")
            objWorkSheet.GetRow(iFiltroSig + 2).GetCell(1).SetCellValue(txtFiltro_.Trim)
            If iVerif < 3 Then
                objWorkSheet.CreateRow(iFiltroSig + 3)
            End If
            objWorkSheet.GetRow(iFiltroSig + 3).CreateCell(0).CellStyle = style
            style.WrapText = True
            objWorkSheet.GetRow(iFiltroSig + 3).CreateCell(1).CellStyle = style
            txtFiltro_ = filtro.Item("MEDIO")
            objWorkSheet.GetRow(iFiltroSig + 3).GetCell(0).SetCellValue("MEDIO :")
            objWorkSheet.GetRow(iFiltroSig + 3).GetCell(1).SetCellValue(txtFiltro_.Trim)

            '=============================================================
            '======================total costos===========================
            '=============================================================
            If filtro.Item("VER_COTIZACION") = True Then
                'Dim cIniC As String = LetraNumero_NPOI(18) & (rowActual + 1).ToString
                'Dim cFinC As String = LetraNumero_NPOI(18) & (iRow).ToString
                Dim cIniC As String = LetraNumero_NPOI(PostListCol("TARIFA_X_CI") + 1) & (rowActual + 1).ToString
                Dim cFinC As String = LetraNumero_NPOI(PostListCol("TARIFA_X_CI") + 1) & (iRow).ToString
                Dim sumCosto As String = ""
                If odtDetalle.Rows.Count <> 0 Then
                    sumCosto = "SUM(" & cIniC & ":" & cFinC & ")"
                Else
                    sumCosto = "0"
                End If
                'objWorkSheet.GetRow(iRow).CreateCell(17).CellStyle = styleMonto
                'objWorkSheet.GetRow(iRow).GetCell(17).CellFormula = (sumCosto)
                objWorkSheet.GetRow(iRow).CreateCell(PostListCol("TARIFA_X_CI")).CellStyle = styleMonto
                objWorkSheet.GetRow(iRow).GetCell(PostListCol("TARIFA_X_CI")).CellFormula = (sumCosto)
            End If
            '=============================================================
            '===============CREAMOS RESUMEN POR CUENTA IMPUTACION=========
            Dim oDtResCuenta As DataTable = oDs.Tables("ResCuenta")
            rowActual = objWorkSheet.LastRowNum + 3
            If filtro.Item("VER_COTIZACION") = True Then
                Dim cel As String
                Dim posCelda As Int64 = 0
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue("Resumen por Cuenta de Imputación")
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 4, rowActual, 5))
                rowActual += 1
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                    posCelda = x + 4
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(posCelda).CellStyle = styleCab
                    '===Valores===
                    Dim valorCab As String = oDtResCuenta.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(posCelda).SetCellValue(valorCab)
                Next
                rowActual += 1
                For i As Integer = 0 To oDtResCuenta.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                        posCelda = x + 4
                        cel = oDtResCuenta.Rows(i).Item(x).ToString().Trim()
                        If IsNumeric(cel) Then
                            If cel.Contains(".") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(Double.Parse(cel.ToString))
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(cel)
                        End If
                    Next
                Next
            End If
            '=======================================================================
            objWorkSheet.DefaultColumnWidth = 25
            objWorkSheet.DefaultRowHeightInPoints = 25
            For z As Integer = 0 To odtDetalle.Columns.Count + 5
                If z <> 1 Then
                    objWorkSheet.AutoSizeColumn(z)
                Else
                    objWorkSheet.AutoSizeColumn(z, True)
                End If
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub



    ''' <summary>
    ''' Exportar Fluvial mediante DDL MOPI Fluvial
    ''' </summary>
    ''' <param name="oDs"></param>
    ''' <param name="rutaImagen"></param>
    ''' <remarks></remarks>
    Public Shared Sub ExportExcelPP_Fluvial_Unitario(ByVal oDs As DataSet)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "ReporteFluvial" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)

            Dim oDtFiltro As DataTable = oDs.Tables(0)
            Dim oDtDetalle As DataTable = oDs.Tables(1)
            Dim oDtResMate As DataTable = oDs.Tables(2)
            Dim oDtResLote As DataTable = oDs.Tables(3)
            Dim oDtResCuenta As DataTable = oDs.Tables(4)

            '=============Construyo celdas======================
            Dim tamano_Maximo As Integer = oDtDetalle.Rows.Count + oDtResCuenta.Rows.Count + oDtFiltro.Columns.Count + oDtResLote.Rows.Count + 10 '10 = espacios de cabeceras + totales + espacios en blanco
            objWorkSheet = objWorkBook.CreateSheet(oDtDetalle.TableName)
            For iCreate As Integer = 0 To tamano_Maximo * 2
                objWorkSheet.CreateRow(iCreate)
            Next
            '=============Estilos======================
            Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontTitulo.FontHeight = 220

            Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontFiltro.FontHeight = 120

            Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontCab.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.FontHeight = 120

            Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.FontHeight = 120

            '============================================
            styleFiltro.SetFont(oFontFiltro)
            styleCab.SetFont(oFontCab)
            style.SetFont(oFont)
            styleTitulo.SetFont(oFontTitulo)
            styleNumber.SetFont(oFont)
            styleMonto.SetFont(oFont)
            styleFecha.SetFont(oFont)
            styleMontoCI.SetFont(oFont)
            '============================================
            Estilos_Excel_NPOI_Fluvial(styleFiltro, FORMATO.Filtro)
            Estilos_Excel_NPOI_Fluvial(styleCab, FORMATO.Cabecera)
            Estilos_Excel_NPOI_Fluvial(style, FORMATO.Normal)
            Estilos_Excel_NPOI_Fluvial(styleTitulo, FORMATO.Titulo)
            Estilos_Excel_NPOI_Fluvial(styleNumber, FORMATO.Numero)
            Estilos_Excel_NPOI_Fluvial(styleMonto, FORMATO.Monto)
            Estilos_Excel_NPOI_Fluvial(styleFecha, FORMATO.Fecha)
            Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI) 'Amarillos
            '============================================
            Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
            Dim rutaLogo As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.PNG" 'logo.png -------------- 'Logo_Cargo_Plan.PNG
            If IO.File.Exists(rutaLogo) Then
                'create the anchor
                Dim anchor As HSSFClientAnchor
                anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, 0, 0, 0)
                'load the picture and get the picture index in the workbook
                Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaLogo, objWorkBook)), HSSFPicture)
                'Reset the image to the original size.
                picture.Resize()
            End If

         

            If oDtFiltro.Rows(0).Item("NMRGIM") <> 0 Then
                '============TRAE IMAGEN
                '==============IMAGEN DEL SERVIDOR====================
                Try
                    Dim imagenAlmacen As HSSFPicture
                    Dim anchorImagen As HSSFClientAnchor
                    anchorImagen = New HSSFClientAnchor(0, 0, 0, 120, 0, 14, 0, 0)
                    imagenAlmacen = DirectCast(patriarch.CreatePicture(anchorImagen, CargaImagen_Byte(oDtFiltro.Rows(0).Item("Image"), objWorkBook, 150, 150)), HSSFPicture)
                    imagenAlmacen.LineStyle = 1
                    imagenAlmacen.Resize()
                Catch ex As Exception

                End Try
            End If

           
            '==============FIN IMAGEN DEL SERVIDOR================

            '==================Pie de Imagen======================
            objWorkSheet.GetRow(tamano_Maximo).CreateCell(0).SetCellValue(oDtFiltro.Rows(0).Item("MARCA").ToString.Trim)
            objWorkSheet.GetRow(tamano_Maximo).CreateCell(1).SetCellValue("")
            objWorkSheet.GetRow(tamano_Maximo).GetCell(0).CellStyle = styleCab
            objWorkSheet.GetRow(tamano_Maximo).GetCell(1).CellStyle = styleCab
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(tamano_Maximo, 0, tamano_Maximo, 1))
            '==================Fin de Pie de Imagen===============
            '=====Declaramos Variables de Trabajo
            Dim rowActual As Integer = 2
            Dim txtTitulo As String = "CARGO PLAN NRO. " & oDtFiltro.Rows(0).Item("NGUIRM").ToString.Trim.PadLeft(10, "0").Substring(0, 3) & "-" & oDtFiltro.Rows(0).Item("NGUIRM").ToString.Trim.PadLeft(10, "0").Substring(3)
            Dim txtFiltro As String = ""
            Dim posLabel As Integer = 6
            Dim n As Integer 'Posicionnamiento del Autosize
            Dim txtFiltro2 As String = ""
            Dim iPosFiltro As Integer = 0
            '=====Validamos en caso Resumen Lote sea mas grande que cantidad de filtros
            If oDtFiltro.Columns.Count < oDtResLote.Rows.Count Then
                iPosFiltro = 2 * oDtResLote.Rows.Count - oDtFiltro.Columns.Count + 4
            Else
                iPosFiltro = 13
            End If
            For iRowFiltro As Integer = 2 To iPosFiltro
                For iCellFiltro As Integer = 3 To 16
                    If iRowFiltro = 2 Then
                        objWorkSheet.GetRow(iRowFiltro).CreateCell(iCellFiltro).CellStyle = styleTitulo
                    Else
                        objWorkSheet.GetRow(iRowFiltro).CreateCell(iCellFiltro).CellStyle = styleFiltro
                    End If
                Next
            Next
            '===============Titulo================
            objWorkSheet.GetRow(rowActual).GetCell(6).SetCellValue(txtTitulo)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 6, rowActual, 11))
            rowActual = rowActual + 1
            '========Resumen Lote=====
            Dim sumaTotalLote As Double = 0D
            Dim pesoLote As Double = 0D
            sumaTotalLote = oDtResLote.Compute("SUM(PESO)", "PESO >= 0")
            objWorkSheet.GetRow(rowActual + 1).GetCell(posLabel + 6).SetCellValue("KG")
            objWorkSheet.GetRow(rowActual + 1).GetCell(posLabel + 7).SetCellValue("M3")
            objWorkSheet.GetRow(rowActual + 1).GetCell(posLabel + 8).SetCellValue("MONTO")
            For i As Integer = 0 To oDtResLote.Rows.Count - 1
                For x As Integer = 0 To oDtResLote.Columns.Count - 1
                    Dim celda As String = oDtResLote.Rows(i).Item(x).ToString().Trim()
                    'oDtResLote.Columns(0).ColumnName
                    'oDtResLote.Columns(1).ColumnName
                    If oDtResLote.Columns(x).ColumnName.ToString.Trim = "LOTE" Then
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).SetCellValue(celda)
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).CellStyle = style
                    ElseIf oDtResLote.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Then
                        pesoLote = oDtResLote.Rows(i).Item("PESO")
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).SetCellValue(100 * pesoLote / sumaTotalLote)
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).CellStyle = styleMonto
                    Else
                        If oDtResLote.Columns(x).ColumnName = "MONTO" Then celda = 0
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).SetCellValue(Convert.ToDouble(celda))
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).CellStyle = styleCab
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                    End If
                Next
            Next
            '====Totaliza Monto Resumen Lotes====
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 4).CellStyle = style
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 5).CellStyle = style
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 6).CellStyle = styleMonto
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 7).CellStyle = styleMonto
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 8).CellStyle = styleMonto

            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 4).SetCellValue("TOTAL")
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 5).SetCellValue("100%")
            Dim formula As String = ""
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 7) & (rowActual + 3).ToString & ":" & LetraNumero_NPOI(posLabel + 7) & (oDtResLote.Rows.Count + 2 + rowActual).ToString & ")" '001
            If oDtResLote.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(oDtResLote.Rows.Count + 2 + rowActual).GetCell(posLabel + 6).CellFormula = (formula)
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 8) & (rowActual + 3).ToString & ":" & LetraNumero_NPOI(posLabel + 8) & (oDtResLote.Rows.Count + 2 + rowActual).ToString & ")" '002
            If oDtResLote.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(oDtResLote.Rows.Count + 2 + rowActual).GetCell(posLabel + 7).CellFormula = (formula)
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 9) & (rowActual + 3).ToString & ":" & LetraNumero_NPOI(posLabel + 9) & (oDtResLote.Rows.Count + 2 + rowActual).ToString & ")" '003
            If oDtResLote.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(oDtResLote.Rows.Count + 2 + rowActual).GetCell(posLabel + 8).CellFormula = (formula)
            '========Filtros==========
            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("OX:") 'Etiqueta
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue("") 'Valor
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("NRO. OPERACIÓN:")
            txtFiltro = oDtFiltro.Rows(0).Item("OPERACION")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("ARMADOR:")
            txtFiltro = oDtFiltro.Rows(0).Item("TRANSPORTISTA")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("EMBARCACIÓN:")
            txtFiltro = oDtFiltro.Rows(0).Item("MARCA")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("RUTA:")
            txtFiltro = oDtFiltro.Rows(0).Item("RUTA")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("MODALIDAD:")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue("ROUND TRIP")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 2).SetCellValue("STAND BY")
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("COSTO:")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 2).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue("")
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("FECHA ZARPE:")
            txtFiltro = oDtFiltro.Rows(0).Item("FECHA")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("PERIODO:")
            txtFiltro = oDtFiltro.Rows(0).Item("PERIODO")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            txtFiltro = oDtFiltro.Rows(0).Item("PERIODO")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 2).SetCellValue(txtFiltro)
            rowActual = rowActual + 2

            objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("SERVICIO:")
            txtFiltro = oDtFiltro.Rows(0).Item("SERVICIO")
            objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 4, rowActual, 6))
            rowActual = rowActual + 1
            '===================Se Cargan Las Cabeceras=====================
            If oDtFiltro.Columns.Count < oDtResLote.Rows.Count Then
                rowActual = rowActual + oDtResLote.Rows.Count - oDtFiltro.Columns.Count + 2
            End If
            For x As Integer = 0 To oDtDetalle.Columns.Count - 1
                objWorkSheet.GetRow(rowActual).CreateCell(x + 3).CellStyle = styleCab
                Dim valorCab As String = oDtDetalle.Columns(x).ColumnName.ToString().Trim()
                If valorCab = "COD_PRODUCTO" Then
                    objWorkSheet.GetRow(rowActual).GetCell(x + 3).Sheet.AutoSizeColumn(x + 3, True)
                    objWorkSheet.GetRow(rowActual).GetCell(x + 3).SetCellValue(valorCab)
                Else
                    objWorkSheet.GetRow(rowActual).GetCell(x + 3).SetCellValue(valorCab)
                End If
            Next

            rowActual = rowActual + 1
            '===================Se Carga El Detalle============================
            For i As Integer = 0 To oDtDetalle.Rows.Count - 1
                For x As Integer = 0 To oDtDetalle.Columns.Count - 1
                    Dim celda As String = oDtDetalle.Rows(i).Item(x).ToString().Trim()

                    If oDtDetalle.Columns(x).ColumnName = "COD_PRODUCTO" Then
                        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = style
                        objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda.ToString)
                        Continue For
                    End If
                    If oDtDetalle.Columns(x).ColumnName = "OC" Then
                        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = style
                        objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda.ToString)
                        Continue For
                    End If
                    If oDtDetalle.Columns(x).ColumnName = "KG" Then
                        If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(CDbl(celda))
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue("")
                        End If
                        Continue For
                    ElseIf oDtDetalle.Columns(x).ColumnName = "CUENTA_IMPUTACION" Then
                        If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda)
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto 'CI
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda)
                        End If
                        Continue For
                    ElseIf oDtDetalle.Columns(x).ColumnName = "POR_CI" Then
                        If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda)
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMontoCI
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(CDbl(celda))
                        End If
                        Continue For
                    End If
                    If IsNumeric(celda) Then
                        If celda.Contains(".") Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleNumber
                        End If
                        If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda.ToString)
                        Else
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(Convert.ToDouble(celda))
                        End If

                    Else
                        If IsDate(celda) Then
                            celda = String.Format("{0:d}", CDate(celda))
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleFecha
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda)
                        Else
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(oDtDetalle.Rows(i).Item(x).ToString().Trim())
                            objWorkSheet.SetColumnWidth(x + 3, 5800)
                        End If
                    End If
                    If oDtDetalle.Columns(x).ColumnName = "POR_CARGA" Then  'Porcentaje Carga
                        If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            formula = "ROUND(100 * " & LetraNumero_NPOI(x) & (i + rowActual + 1).ToString & " / " & LetraNumero_NPOI(x) & (oDtDetalle.Rows.Count + rowActual + 1).ToString & ",2)" '001
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).CellFormula = (formula)
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).CellStyle = styleMonto
                        Else
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue("")
                            objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).CellStyle = styleMontoCI
                        End If
                    End If
                Next
            Next
            For z As Integer = 0 To oDtDetalle.Columns.Count - 1
                n = z + 3
                If Not (n = 6 Or n = 5) Then
                    objWorkSheet.AutoSizeColumn(n, True)
                End If
            Next
            Dim iRow As Integer = oDtDetalle.Rows.Count + rowActual
            '===========Totalizamos Detalles=============
            objWorkSheet.GetRow(iRow).CreateCell(posLabel + 6).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).CreateCell(posLabel + 7).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).CreateCell(posLabel + 8).CellStyle = styleMonto

            objWorkSheet.GetRow(iRow).CreateCell(posLabel + 10).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).CreateCell(posLabel + 11).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 10).SetCellValue("100%")
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 11).SetCellValue("S/.     -")

            formula = "SUM(" & LetraNumero_NPOI(posLabel + 7) & (rowActual + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 7) & (iRow).ToString & ")" '001
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 6).CellFormula = (formula)
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 8) & (rowActual + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 8) & (iRow).ToString & ")" '002
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 7).CellFormula = (formula)
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 9) & (rowActual + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 9) & (iRow).ToString & ")" '003
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 8).CellFormula = (formula)
            '=============================================
            iRow = iRow + 1
            '===================Se Carga El Resumen Material===========================
            For i As Integer = 0 To oDtResMate.Rows.Count - 1
                For x As Integer = 0 To oDtResMate.Columns.Count - 1
                    Dim celda As String = oDtResMate.Rows(i).Item(x).ToString().Trim()
                    objWorkSheet.GetRow(i + iRow).CreateCell(4).CellStyle = style
                    objWorkSheet.GetRow(i + iRow).CreateCell(3).SetCellValue(oDtResMate.Rows(i).Item(x).ToString().Trim())
                    objWorkSheet.GetRow(i + iRow).GetCell(3).CellStyle = style
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(i + iRow, x + 3, i + iRow, x + 4))
                Next
            Next
            '===================Se Carga El Cabecera Resumen===========================
            objWorkSheet.GetRow(iRow).CreateCell(6).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).CreateCell(7).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).CreateCell(8).CellStyle = styleCab

            objWorkSheet.GetRow(iRow).GetCell(6).SetCellValue("RESUMEN")
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(iRow, 6, iRow, 8))
            iRow = iRow + 1
            For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                objWorkSheet.GetRow(iRow).CreateCell(x + 6).CellStyle = styleCab
                Dim valorCab As String = oDtResCuenta.Columns(x).ColumnName.ToString().Trim()
                objWorkSheet.GetRow(iRow).GetCell(x + 6).SetCellValue(valorCab)
            Next
            iRow = iRow + 1
            '===================Se Carga El Detalle Resumen============================
            For i As Integer = 0 To oDtResCuenta.Rows.Count - 1
                For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                    Dim celda As String = oDtResCuenta.Rows(i).Item(x).ToString().Trim()
                    If IsNumeric(celda) Then
                        objWorkSheet.GetRow(i + iRow).CreateCell(x + 6).CellStyle = styleMonto
                        objWorkSheet.GetRow(i + iRow).GetCell(x + 6).SetCellValue(Convert.ToDouble(celda))
                    Else
                        objWorkSheet.GetRow(i + iRow).CreateCell(x + 6).SetCellValue(oDtResCuenta.Rows(i).Item(x).ToString().Trim())
                        objWorkSheet.GetRow(i + iRow).GetCell(x + 6).CellStyle = style
                    End If
                Next
            Next
            '===========Totalizamos Detalles Resumen=============
            iRow = oDtResCuenta.Rows.Count + iRow
            objWorkSheet.GetRow(iRow).CreateCell(posLabel).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).GetCell(posLabel).SetCellValue("")
            objWorkSheet.GetRow(iRow).CreateCell(posLabel + 1).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).CreateCell(posLabel + 2).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 1).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 2).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 2) & (iRow - oDtResCuenta.Rows.Count + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 2) & (iRow).ToString & ")" '001
            If oDtResCuenta.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 1).CellFormula = (formula)
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 3) & (iRow - oDtResCuenta.Rows.Count + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 3) & (iRow).ToString & ")" '002
            If oDtResCuenta.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 2).CellFormula = (formula)
            '=============================================
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub
    ''GASTON
    Public Shared Sub ExportExcelPP_Fluvial_Unitario_Plus(ByVal oDs As DataSet)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "ReporteFluvial" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)

            Dim oDtFiltro As DataTable = oDs.Tables(0)
            Dim oDtDetalle As DataTable = oDs.Tables(1)
            Dim oDtResMate As DataTable = oDs.Tables(2)
            Dim oDtResLote As DataTable = oDs.Tables(3)
            Dim oDtResCuenta As DataTable = oDs.Tables(4)

            '=============Construyo celdas======================
            Dim tamano_Maximo As Integer = oDtDetalle.Rows.Count + oDtResCuenta.Rows.Count + oDtFiltro.Columns.Count + oDtResLote.Rows.Count + 10 '10 = espacios de cabeceras + totales + espacios en blanco
            objWorkSheet = objWorkBook.CreateSheet(oDtDetalle.TableName)
            For iCreate As Integer = 0 To tamano_Maximo * 2
                objWorkSheet.CreateRow(iCreate)
            Next
            '=============Estilos======================
            Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontTitulo.FontHeight = 220

            Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontFiltro.FontHeight = 120

            Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontCab.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.FontHeight = 120

            Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.FontHeight = 120

            '============================================
            styleFiltro.SetFont(oFontFiltro)
            styleCab.SetFont(oFontCab)
            style.SetFont(oFont)
            styleTitulo.SetFont(oFontTitulo)
            styleNumber.SetFont(oFont)
            styleMonto.SetFont(oFont)
            styleFecha.SetFont(oFont)
            styleMontoCI.SetFont(oFont)
            '============================================
            Estilos_Excel_NPOI_Fluvial(styleFiltro, FORMATO.Filtro)
            Estilos_Excel_NPOI_Fluvial(styleCab, FORMATO.Cabecera)
            Estilos_Excel_NPOI_Fluvial(style, FORMATO.Normal)
            Estilos_Excel_NPOI_Fluvial(styleTitulo, FORMATO.Titulo)
            Estilos_Excel_NPOI_Fluvial(styleNumber, FORMATO.Numero)
            Estilos_Excel_NPOI_Fluvial(styleMonto, FORMATO.Monto)
            Estilos_Excel_NPOI_Fluvial(styleFecha, FORMATO.Fecha)
            Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI) 'Amarillos
            '============================================
            Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
            Dim rutaLogo As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.PNG" 'logo.png -------------- 'Logo_Cargo_Plan.PNG
            If IO.File.Exists(rutaLogo) Then
                'create the anchor
                Dim anchor As HSSFClientAnchor
                anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, 0, 0, 0)
                'load the picture and get the picture index in the workbook
                Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaLogo, objWorkBook)), HSSFPicture)
                'Reset the image to the original size.
                picture.Resize()
            End If

            If oDtFiltro.Rows(0).Item("NMRGIM") <> 0 Then
                '============TRAE IMAGEN
                '==============IMAGEN DEL SERVIDOR====================
                Try
                    Dim imagenAlmacen As HSSFPicture
                    Dim anchorImagen As HSSFClientAnchor
                    anchorImagen = New HSSFClientAnchor(0, 0, 0, 120, 0, 14, 0, 0)
                    imagenAlmacen = DirectCast(patriarch.CreatePicture(anchorImagen, CargaImagen_Byte(oDtFiltro.Rows(0).Item("Image"), objWorkBook, 150, 150)), HSSFPicture)
                    imagenAlmacen.LineStyle = 1
                    imagenAlmacen.Resize()
                Catch ex As Exception

                End Try
            End If

            '==============FIN IMAGEN DEL SERVIDOR================

            '==================Pie de Imagen======================
            objWorkSheet.GetRow(tamano_Maximo).CreateCell(0).SetCellValue(oDtFiltro.Rows(0).Item("MARCA").ToString.Trim)
            objWorkSheet.GetRow(tamano_Maximo).CreateCell(1).SetCellValue("")
            objWorkSheet.GetRow(tamano_Maximo).GetCell(0).CellStyle = styleCab
            objWorkSheet.GetRow(tamano_Maximo).GetCell(1).CellStyle = styleCab
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(tamano_Maximo, 0, tamano_Maximo, 1))
            '==================Fin de Pie de Imagen===============
            '=====Declaramos Variables de Trabajo
            Dim rowActual As Integer = 2
            Dim txtTitulo As String = "CARGO PLAN NRO. " & oDtFiltro.Rows(0).Item("NGUIRM").ToString.Trim.PadLeft(10, "0").Substring(0, 3) & "-" & oDtFiltro.Rows(0).Item("NGUIRM").ToString.Trim.PadLeft(10, "0").Substring(3)
            Dim txtFiltro As String = ""
            Dim posLabel As Integer = 6
            Dim n As Integer 'Posicionnamiento del Autosize
            Dim txtFiltro2 As String = ""
            Dim iPosFiltro As Integer = 0
            '=====Validamos en caso Resumen Lote sea mas grande que cantidad de filtros
            If oDtFiltro.Columns.Count < oDtResLote.Rows.Count Then
                iPosFiltro = 2 * oDtResLote.Rows.Count - oDtFiltro.Columns.Count + 4
            Else
                iPosFiltro = 13
            End If
            For iRowFiltro As Integer = 2 To iPosFiltro
                For iCellFiltro As Integer = 3 To 16
                    If iRowFiltro = 2 Then
                        objWorkSheet.GetRow(iRowFiltro).CreateCell(iCellFiltro).CellStyle = styleTitulo
                    Else
                        objWorkSheet.GetRow(iRowFiltro).CreateCell(iCellFiltro).CellStyle = styleFiltro
                    End If
                Next
            Next
            '===============Titulo================
            objWorkSheet.GetRow(rowActual).GetCell(6).SetCellValue(txtTitulo)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 6, rowActual, 11))
            rowActual = rowActual + 1
            '========Resumen Lote=====
            Dim sumaTotalLote As Double = 0D
            Dim pesoLote As Double = 0D
            If oDtResLote.Rows.Count > 0 Then
                sumaTotalLote = oDtResLote.Compute("SUM(PESO)", "PESO >= 0")
            End If

            objWorkSheet.GetRow(rowActual + 1).GetCell(posLabel + 6).SetCellValue("KG")
            objWorkSheet.GetRow(rowActual + 1).GetCell(posLabel + 7).SetCellValue("M3")
            objWorkSheet.GetRow(rowActual + 1).GetCell(posLabel + 8).SetCellValue("MONTO")
            For i As Integer = 0 To oDtResLote.Rows.Count - 1
                For x As Integer = 0 To oDtResLote.Columns.Count - 1
                    Dim celda As String = oDtResLote.Rows(i).Item(x).ToString().Trim()
                    'oDtResLote.Columns(0).ColumnName
                    'oDtResLote.Columns(1).ColumnName
                    If oDtResLote.Columns(x).ColumnName.ToString.Trim = "LOTE" Then
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).SetCellValue(celda)
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).CellStyle = style
                    ElseIf oDtResLote.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Then
                        pesoLote = oDtResLote.Rows(i).Item("PESO")
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).SetCellValue(100 * pesoLote / sumaTotalLote)
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).CellStyle = styleMonto
                    Else
                        If oDtResLote.Columns(x).ColumnName = "MONTO" Then celda = 0
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).SetCellValue(Convert.ToDouble(celda))
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).CellStyle = styleCab
                        objWorkSheet.GetRow(i + rowActual + 2).GetCell(x + posLabel + 4).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                    End If
                Next
            Next
            '====Totaliza Monto Resumen Lotes====
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 4).CellStyle = style
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 5).CellStyle = style
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 6).CellStyle = styleMonto
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 7).CellStyle = styleMonto
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 8).CellStyle = styleMonto

            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 4).SetCellValue("TOTAL")
            objWorkSheet.GetRow(oDtResLote.Rows.Count + rowActual + 2).GetCell(posLabel + 5).SetCellValue("100%")
            Dim formula As String = ""
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 7) & (rowActual + 3).ToString & ":" & LetraNumero_NPOI(posLabel + 7) & (oDtResLote.Rows.Count + 2 + rowActual).ToString & ")" '001
            If oDtResLote.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(oDtResLote.Rows.Count + 2 + rowActual).GetCell(posLabel + 6).CellFormula = (formula)
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 8) & (rowActual + 3).ToString & ":" & LetraNumero_NPOI(posLabel + 8) & (oDtResLote.Rows.Count + 2 + rowActual).ToString & ")" '002
            If oDtResLote.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(oDtResLote.Rows.Count + 2 + rowActual).GetCell(posLabel + 7).CellFormula = (formula)
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 9) & (rowActual + 3).ToString & ":" & LetraNumero_NPOI(posLabel + 9) & (oDtResLote.Rows.Count + 2 + rowActual).ToString & ")" '003
            If oDtResLote.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(oDtResLote.Rows.Count + 2 + rowActual).GetCell(posLabel + 8).CellFormula = (formula)
            '========Filtros==========
            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("OX:") 'Etiqueta
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue("") 'Valor
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("NRO. OPERACIÓN:")
            txtFiltro = oDtFiltro.Rows(0).Item("OPERACION")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("ARMADOR:")
            txtFiltro = oDtFiltro.Rows(0).Item("TRANSPORTISTA")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("EMBARCACIÓN:")
            txtFiltro = oDtFiltro.Rows(0).Item("MARCA")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("RUTA:")
            txtFiltro = oDtFiltro.Rows(0).Item("RUTA")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("MODALIDAD:")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue("ROUND TRIP")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 2).SetCellValue("STAND BY")
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("COSTO:")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 2).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue("")
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("FECHA ZARPE:")
            txtFiltro = oDtFiltro.Rows(0).Item("FECHA")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, posLabel + 1, rowActual, posLabel + 2))
            rowActual = rowActual + 1

            objWorkSheet.GetRow(rowActual).GetCell(posLabel).SetCellValue("PERIODO:")
            txtFiltro = oDtFiltro.Rows(0).Item("PERIODO")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
            txtFiltro = oDtFiltro.Rows(0).Item("PERIODO")
            objWorkSheet.GetRow(rowActual).GetCell(posLabel + 2).SetCellValue(txtFiltro)
            rowActual = rowActual + 2

            objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("SERVICIO:")
            txtFiltro = oDtFiltro.Rows(0).Item("SERVICIO")
            objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 4, rowActual, 6))
            rowActual = rowActual + 1
            '===================Se Cargan Las Cabeceras=====================
            If oDtFiltro.Columns.Count < oDtResLote.Rows.Count Then
                rowActual = rowActual + oDtResLote.Rows.Count - oDtFiltro.Columns.Count + 2
            End If

            Dim ListaColExport As New List(Of String)
            Dim PostListCol As New Hashtable

            ListaColExport.Add("ITEM")
            ListaColExport.Add("GUIA_PROV")
            ListaColExport.Add("PROVEEDOR")
            ListaColExport.Add("COD_PRODUCTO")
            ListaColExport.Add("DESCRIPCION")
            ListaColExport.Add("NAVE_PROCEDENCIA")
            ListaColExport.Add("GUIA_REMISION")
            ListaColExport.Add("MEDIO_ENVIO")
            ListaColExport.Add("OC")
            ListaColExport.Add("OR")
            ListaColExport.Add("LOTE")
            ListaColExport.Add("KG")
            ListaColExport.Add("M3")
            ListaColExport.Add("BULTOS")
            ListaColExport.Add("CUENTA_IMPUTACION")
            ListaColExport.Add("POR_CARGA")
            ListaColExport.Add("MONTO_SOLES")
            ListaColExport.Add("POR_CI")

            Dim ListaAd As New List(Of String)
            ListaAd.Add("CUENTA_MAYOR")
            ListaAd.Add("CENTRO_COSTE")
            ListaAd.Add("ELEMENTO_PEP")
            ListaAd.Add("ORDEN")
            ListaAd.Add("GRAFO")
            ListaAd.Add("SIN_CUENTA")



            For Each Item As String In ListaAd
                If oDtDetalle.Columns.Contains(Item) Then
                    ListaColExport.Add(Item)
                End If

            Next



            

            'ListaColExport.Add("CUENTA_MAYOR")
            'ListaColExport.Add("CENTRO_COSTE")
            'ListaColExport.Add("ELEMENTO_PEP")
            'ListaColExport.Add("ORDEN")
            'ListaColExport.Add("GRAFO")
            'ListaColExport.Add("SIN_CUENTA")

            Dim yPos As Integer = 3
            For Each ItemCol As String In ListaColExport
                objWorkSheet.GetRow(rowActual).CreateCell(yPos).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).GetCell(yPos).SetCellValue(ItemCol)
                If ItemCol = "COD_PRODUCTO" Then
                    objWorkSheet.GetRow(rowActual).GetCell(yPos).Sheet.AutoSizeColumn(yPos, True)
                End If
                PostListCol(ItemCol) = yPos
                yPos = yPos + 1
            Next

            'For x As Integer = 0 To oDtDetalle.Columns.Count - 1

            '    Dim valorCab As String = oDtDetalle.Columns(x).ColumnName.ToString().Trim()

            '    Select Case valorCab

            '        Case "COD_PRODUCTO"
            '            objWorkSheet.GetRow(rowActual).CreateCell(x + 3).CellStyle = styleCab
            '            objWorkSheet.GetRow(rowActual).GetCell(x + 3).Sheet.AutoSizeColumn(x + 3, True)
            '            objWorkSheet.GetRow(rowActual).GetCell(x + 3).SetCellValue(valorCab)
            '        Case "CUENTA_MAYOR"
            '            objWorkSheet.GetRow(rowActual).CreateCell(20).CellStyle = styleCab
            '            objWorkSheet.GetRow(rowActual).GetCell(20).SetCellValue(valorCab)
            '        Case "CENTRO_COSTE"
            '            objWorkSheet.GetRow(rowActual).CreateCell(21).CellStyle = styleCab
            '            objWorkSheet.GetRow(rowActual).GetCell(21).SetCellValue(valorCab)
            '        Case "ELEMENTO_PEP"
            '            objWorkSheet.GetRow(rowActual).CreateCell(22).CellStyle = styleCab
            '            objWorkSheet.GetRow(rowActual).GetCell(22).SetCellValue(valorCab)
            '        Case "ORDEN"
            '            objWorkSheet.GetRow(rowActual).CreateCell(23).CellStyle = styleCab
            '            objWorkSheet.GetRow(rowActual).GetCell(23).SetCellValue(valorCab)
            '        Case "GRAFO"
            '            objWorkSheet.GetRow(rowActual).CreateCell(24).CellStyle = styleCab
            '            objWorkSheet.GetRow(rowActual).GetCell(24).SetCellValue(valorCab)

            '            'Nueva columna SIN_CUENTA
            '        Case "SIN_CUENTA"
            '            objWorkSheet.GetRow(rowActual).CreateCell(25).CellStyle = styleCab
            '            objWorkSheet.GetRow(rowActual).GetCell(25).SetCellValue(valorCab)

            '        Case "POR_CI"
            '            objWorkSheet.GetRow(rowActual).CreateCell(19).CellStyle = styleCab
            '            objWorkSheet.GetRow(rowActual).GetCell(19).SetCellValue(valorCab)
            '        Case Else
            '            objWorkSheet.GetRow(rowActual).CreateCell(x + 3).CellStyle = styleCab
            '            objWorkSheet.GetRow(rowActual).GetCell(x + 3).SetCellValue(valorCab)

            '    End Select

            'Next

            rowActual = rowActual + 1
            '===================Se Carga El Detalle============================

            Dim iPosCol As Integer = 0

            For i As Integer = 0 To oDtDetalle.Rows.Count - 1


                For Each ItemCol As String In ListaColExport

                    'Next

                    'For x As Integer = 0 To oDtDetalle.Columns.Count - 1
                    'Dim celda As String = oDtDetalle.Rows(i).Item(x).ToString().Trim()
                    iPosCol = PostListCol(ItemCol)
                    Dim celda As String = oDtDetalle.Rows(i).Item(ItemCol).ToString().Trim()
                    'Dim colum As String = oDtDetalle.Columns(x).ColumnName
                    Select Case ItemCol
                        Case "COD_PRODUCTO", "OC"
                            objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(celda.ToString)
                            'objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = style
                            'objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda.ToString)
                            'Continue For
                            'Case "OC"
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = style
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda.ToString)
                            'Continue For
                        Case "KG"
                            'If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(CDbl(celda))
                            'Else
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue("")
                            'End If
                            If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(CDbl(celda))
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue("")
                            End If
                            'Continue For
                        Case "CUENTA_IMPUTACION"
                            'If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda)
                            'Else
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto 'CI
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda)
                            'End If
                            objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(celda.ToString)
                            'Continue For
                        Case "POR_CI"
                            'If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(19).CellStyle = styleMonto
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(19).SetCellValue(celda)
                            'Else
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(19).CellStyle = styleMontoCI
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(19).SetCellValue(CDbl(celda))
                            'End If
                            'Continue For
                            If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = styleMontoCI
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(CDbl(celda))
                            End If
                        Case "POR_CARGA"
                            'If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                            '    formula = "ROUND(100 * " & LetraNumero_NPOI(x) & (i + rowActual + 1).ToString & " / " & LetraNumero_NPOI(x) & (oDtDetalle.Rows.Count + rowActual + 1).ToString & ",2)" '001
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).CellFormula = (formula)
                            '    'objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).CellStyle = styleMonto
                            'Else
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).SetCellValue("")
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).CellStyle = styleMontoCI
                            'End If
                            If IsDBNull(oDtDetalle.Rows(i).Item("POR_CI")) Then
                                formula = "ROUND(100 * " & LetraNumero_NPOI(PostListCol("KG") + 1) & (i + rowActual + 1).ToString & " / " & LetraNumero_NPOI(PostListCol("KG") + 1) & (oDtDetalle.Rows.Count + rowActual + 1).ToString & ",2)" '001
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).CellFormula = (formula)
                                'objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).SetCellValue("")
                                objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).CellStyle = styleMontoCI
                            End If
                            'Continue For
                        Case "CUENTA_MAYOR", "CENTRO_COSTE", "ELEMENTO_PEP", "ORDEN", "GRAFO", "SIN_CUENTA"
                            'objWorkSheet.GetRow(i + rowActual).CreateCell(20).CellStyle = style
                            'objWorkSheet.GetRow(i + rowActual).GetCell(20).SetCellValue(celda.ToString)
                            'Continue For
                            objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(celda.ToString)
                            'Case "CENTRO_COSTE"
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(21).CellStyle = style
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(21).SetCellValue(celda.ToString)
                            '    Continue For
                            'Case "ELEMENTO_PEP"
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(22).CellStyle = style
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(22).SetCellValue(celda.ToString)
                            '    Continue For
                            'Case "ORDEN"
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(23).CellStyle = style
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(23).SetCellValue(celda.ToString)
                            '    Continue For
                            'Case "GRAFO"
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(24).CellStyle = style
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(24).SetCellValue(celda.ToString)
                            '    Continue For

                            'Case "SIN_CUENTA"
                            '    objWorkSheet.GetRow(i + rowActual).CreateCell(25).CellStyle = style
                            '    objWorkSheet.GetRow(i + rowActual).GetCell(25).SetCellValue(celda.ToString)
                            '    Continue For

                        Case Else
                            'If IsNumeric(celda) Then
                            '    If celda.Contains(".") Then
                            '        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                            '    Else
                            '        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleNumber
                            '    End If
                            '    If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                            '        objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda.ToString)
                            '    Else
                            '        objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(Convert.ToDouble(celda))
                            '    End If

                            'Else
                            '    If IsDate(celda) Then
                            '        celda = String.Format("{0:d}", CDate(celda))
                            '        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = styleFecha
                            '        objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(celda)
                            '    Else
                            '        objWorkSheet.GetRow(i + rowActual).CreateCell(x + 3).CellStyle = style
                            '        objWorkSheet.GetRow(i + rowActual).GetCell(x + 3).SetCellValue(oDtDetalle.Rows(i).Item(x).ToString().Trim())
                            '        objWorkSheet.SetColumnWidth(x + 3, 5800)
                            '    End If
                            'End If
                            If IsNumeric(celda) Then
                                If celda.Contains(".") Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = styleNumber
                                End If
                                If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(celda.ToString)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(Convert.ToDouble(celda))
                                End If

                            Else
                                If IsDate(celda) Then
                                    celda = String.Format("{0:d}", CDate(celda))
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = styleFecha
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(celda)
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(iPosCol).CellStyle = style
                                    objWorkSheet.GetRow(i + rowActual).GetCell(iPosCol).SetCellValue(oDtDetalle.Rows(i).Item(ItemCol).ToString().Trim())
                                    objWorkSheet.SetColumnWidth(iPosCol, 5800)
                                End If
                            End If

                    End Select

                Next
            Next

            For z As Integer = 0 To oDtDetalle.Columns.Count - 1
                n = z + 3
                If Not (n = 6 Or n = 5) Then
                    objWorkSheet.AutoSizeColumn(n, True)
                End If
            Next
            Dim iRow As Integer = oDtDetalle.Rows.Count + rowActual
            '===========Totalizamos Detalles=============
            'objWorkSheet.GetRow(iRow).CreateCell(posLabel + 6).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).CreateCell(posLabel + 7).CellStyle = styleMonto
            'objWorkSheet.GetRow(iRow).CreateCell(posLabel + 8).CellStyle = styleMonto
            objWorkSheet.GetRow(iRow).CreateCell(PostListCol("KG")).CellStyle = styleMonto
            formula = "SUM(" & LetraNumero_NPOI(PostListCol("KG") + 1) & (rowActual + 1).ToString & ":" & LetraNumero_NPOI(PostListCol("KG") + 1) & (iRow).ToString & ")" '001
            objWorkSheet.GetRow(iRow).GetCell(PostListCol("KG")).CellFormula = (formula)


            objWorkSheet.GetRow(iRow).CreateCell(PostListCol("M3")).CellStyle = styleMonto
            formula = "SUM(" & LetraNumero_NPOI(PostListCol("M3") + 1) & (rowActual + 1).ToString & ":" & LetraNumero_NPOI(PostListCol("M3") + 1) & (iRow).ToString & ")" '002
            objWorkSheet.GetRow(iRow).GetCell(PostListCol("M3")).CellFormula = (formula)


            objWorkSheet.GetRow(iRow).CreateCell(PostListCol("BULTOS")).CellStyle = styleMonto
            formula = "SUM(" & LetraNumero_NPOI(PostListCol("BULTOS") + 1) & (rowActual + 1).ToString & ":" & LetraNumero_NPOI(PostListCol("BULTOS") + 1) & (iRow).ToString & ")" '003
            objWorkSheet.GetRow(iRow).GetCell(PostListCol("BULTOS")).CellFormula = (formula)

            'objWorkSheet.GetRow(iRow).CreateCell(posLabel + 10).CellStyle = styleCab
            'objWorkSheet.GetRow(iRow).CreateCell(posLabel + 11).CellStyle = styleCab
            'objWorkSheet.GetRow(iRow).GetCell(posLabel + 10).SetCellValue("100%")
            'objWorkSheet.GetRow(iRow).GetCell(posLabel + 11).SetCellValue("S/.     -")
            objWorkSheet.GetRow(iRow).CreateCell(PostListCol("POR_CARGA")).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).GetCell(PostListCol("POR_CARGA")).SetCellValue("100%")

            objWorkSheet.GetRow(iRow).CreateCell(PostListCol("MONTO_SOLES")).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).GetCell(PostListCol("MONTO_SOLES")).SetCellValue("S/.     -")


            'formula = "SUM(" & LetraNumero_NPOI(posLabel + 7) & (rowActual + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 7) & (iRow).ToString & ")" '001
            'objWorkSheet.GetRow(iRow).GetCell(posLabel + 6).CellFormula = (formula)
            'formula = "SUM(" & LetraNumero_NPOI(posLabel + 8) & (rowActual + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 8) & (iRow).ToString & ")" '002
            'objWorkSheet.GetRow(iRow).GetCell(posLabel + 7).CellFormula = (formula)
            'formula = "SUM(" & LetraNumero_NPOI(posLabel + 9) & (rowActual + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 9) & (iRow).ToString & ")" '003
            'objWorkSheet.GetRow(iRow).GetCell(posLabel + 8).CellFormula = (formula)
           
          
          
            '=============================================
            iRow = iRow + 1
            '===================Se Carga El Resumen Material===========================
            For i As Integer = 0 To oDtResMate.Rows.Count - 1
                For x As Integer = 0 To oDtResMate.Columns.Count - 1
                    Dim celda As String = oDtResMate.Rows(i).Item(x).ToString().Trim()
                    objWorkSheet.GetRow(i + iRow).CreateCell(4).CellStyle = style
                    objWorkSheet.GetRow(i + iRow).CreateCell(3).SetCellValue(oDtResMate.Rows(i).Item(x).ToString().Trim())
                    objWorkSheet.GetRow(i + iRow).GetCell(3).CellStyle = style
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(i + iRow, x + 3, i + iRow, x + 4))
                Next
            Next
            '===================Se Carga El Cabecera Resumen===========================
            objWorkSheet.GetRow(iRow).CreateCell(6).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).CreateCell(7).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).CreateCell(8).CellStyle = styleCab

            objWorkSheet.GetRow(iRow).GetCell(6).SetCellValue("RESUMEN")
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(iRow, 6, iRow, 8))
            iRow = iRow + 1
            For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                objWorkSheet.GetRow(iRow).CreateCell(x + 6).CellStyle = styleCab
                Dim valorCab As String = oDtResCuenta.Columns(x).ColumnName.ToString().Trim()
                objWorkSheet.GetRow(iRow).GetCell(x + 6).SetCellValue(valorCab)
            Next
            iRow = iRow + 1
            '===================Se Carga El Detalle Resumen============================
            For i As Integer = 0 To oDtResCuenta.Rows.Count - 1
                For x As Integer = 0 To oDtResCuenta.Columns.Count - 1
                    Dim celda As String = oDtResCuenta.Rows(i).Item(x).ToString().Trim()
                    If IsNumeric(celda) Then
                        objWorkSheet.GetRow(i + iRow).CreateCell(x + 6).CellStyle = styleMonto
                        objWorkSheet.GetRow(i + iRow).GetCell(x + 6).SetCellValue(Convert.ToDouble(celda))
                    Else
                        objWorkSheet.GetRow(i + iRow).CreateCell(x + 6).SetCellValue(oDtResCuenta.Rows(i).Item(x).ToString().Trim())
                        objWorkSheet.GetRow(i + iRow).GetCell(x + 6).CellStyle = style
                    End If
                Next
            Next
            '===========Totalizamos Detalles Resumen=============
            iRow = oDtResCuenta.Rows.Count + iRow
            objWorkSheet.GetRow(iRow).CreateCell(posLabel).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).GetCell(posLabel).SetCellValue("")
            objWorkSheet.GetRow(iRow).CreateCell(posLabel + 1).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).CreateCell(posLabel + 2).CellStyle = styleCab
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 1).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 2).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 2) & (iRow - oDtResCuenta.Rows.Count + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 2) & (iRow).ToString & ")" '001
            If oDtResCuenta.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 1).CellFormula = (formula)
            formula = "SUM(" & LetraNumero_NPOI(posLabel + 3) & (iRow - oDtResCuenta.Rows.Count + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 3) & (iRow).ToString & ")" '002
            If oDtResCuenta.Rows.Count = 0 Then formula = "0"
            objWorkSheet.GetRow(iRow).GetCell(posLabel + 2).CellFormula = (formula)
            '=============================================
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub


    Private Shared Sub Estilos_Excel_NPOI(ByVal style As NPOI.SS.UserModel.CellStyle, ByVal tipo As FORMATO, Optional ByVal Format As String = "0.00")
        Select Case tipo
            Case FORMATO.Filtro
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
            Case FORMATO.Cabecera
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREEN.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
            Case FORMATO.CabConsistencia
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.YELLOW.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN

            Case FORMATO.Normal
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
                style.VerticalAlignment = NPOI.SS.UserModel.VerticalAlignment.CENTER
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
            Case FORMATO.Titulo
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.ALT_BARS


            Case FORMATO.Numero
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.DataFormat = HSSFDataFormat.GetBuiltinFormat("#.##0,00")
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN

            Case FORMATO.Monto
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.DataFormat = HSSFDataFormat.GetBuiltinFormat(Format)
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN

            Case FORMATO.MontoCI
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.YELLOW.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.DataFormat = HSSFDataFormat.GetBuiltinFormat(Format)
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN

            Case FORMATO.Fecha
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.DataFormat = HSSFDataFormat.GetBuiltinFormat("@")
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN

            Case FORMATO.Porcentaje
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                If Format <> "-1" Then
                    style.DataFormat = HSSFDataFormat.GetBuiltinFormat(Format & "%")
                End If
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN

            Case FORMATO.TextBold
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.VerticalAlignment = NPOI.SS.UserModel.VerticalAlignment.CENTER
                If Format <> "-1" Then
                    style.DataFormat = HSSFDataFormat.GetBuiltinFormat(Format & "%")
                End If
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN

            Case FORMATO.TotalBold
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                style.VerticalAlignment = NPOI.SS.UserModel.VerticalAlignment.CENTER
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
        End Select
    End Sub

    Private Shared Sub Estilos_Excel_NPOI_Fluvial(ByVal style As NPOI.SS.UserModel.CellStyle, ByVal tipo As FORMATO)
        Select Case tipo
            Case FORMATO.Filtro
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
            Case FORMATO.Cabecera
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.LIGHT_TURQUOISE.index '<------(CLARO)      (Oscuro)------>TURQUOISE.index 
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
            Case FORMATO.Normal
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.WrapText = True
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
            Case FORMATO.Titulo
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
            Case FORMATO.Numero
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.DataFormat = HSSFDataFormat.GetBuiltinFormat("#.##0,00") '"#.##0,00"
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
            Case FORMATO.Monto
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
            Case FORMATO.Fecha
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
        End Select
    End Sub

    Private Shared Function LetraNumero_NPOI(ByVal i As Integer) As String
        Dim AbcD As New Hashtable()
        AbcD.Add(1, "A")
        AbcD.Add(2, "B")
        AbcD.Add(3, "C")
        AbcD.Add(4, "D")
        AbcD.Add(5, "E")
        AbcD.Add(6, "F")
        AbcD.Add(7, "G")
        AbcD.Add(8, "H")
        AbcD.Add(9, "I")
        AbcD.Add(10, "J")
        AbcD.Add(11, "K")
        AbcD.Add(12, "L")
        AbcD.Add(13, "M")
        AbcD.Add(14, "N")
        AbcD.Add(15, "O")
        AbcD.Add(16, "P")
        AbcD.Add(17, "Q")
        AbcD.Add(18, "R")
        AbcD.Add(19, "S")
        AbcD.Add(20, "T")
        AbcD.Add(21, "U")
        AbcD.Add(22, "V")
        AbcD.Add(23, "W")
        AbcD.Add(24, "X")
        AbcD.Add(25, "Y")
        AbcD.Add(26, "Z")

        AbcD.Add(27, "AA")
        AbcD.Add(28, "AB")
        AbcD.Add(29, "AC")
        AbcD.Add(30, "AD")
        AbcD.Add(31, "AE")
        AbcD.Add(32, "AF")
        AbcD.Add(33, "AG")
        AbcD.Add(34, "AH")
        AbcD.Add(35, "AI")
        AbcD.Add(36, "AJ")
        AbcD.Add(37, "AK")
        AbcD.Add(38, "AL")
        AbcD.Add(39, "AM")
        AbcD.Add(40, "AN")
        AbcD.Add(41, "AO")
        AbcD.Add(42, "AP")
        AbcD.Add(43, "AQ")
        AbcD.Add(44, "AR")
        AbcD.Add(45, "AS")
        AbcD.Add(46, "AT")
        AbcD.Add(47, "AU")
        AbcD.Add(48, "AV")
        AbcD.Add(49, "AW")
        AbcD.Add(50, "AX")
        AbcD.Add(51, "AY")
        AbcD.Add(52, "AZ")
        AbcD.Add(53, "BA")
        AbcD.Add(54, "BB")
        AbcD.Add(55, "BC")
        AbcD.Add(56, "BD")
        AbcD.Add(57, "BE")
        AbcD.Add(58, "BF")
        AbcD.Add(59, "BG")
        AbcD.Add(60, "BH")
        AbcD.Add(61, "BI")
        AbcD.Add(62, "BJ")

        AbcD.Add(63, "BK")
        AbcD.Add(64, "BL")
        AbcD.Add(65, "BM")
        AbcD.Add(66, "BN")
        AbcD.Add(67, "BO")
        AbcD.Add(68, "BP")
        AbcD.Add(69, "BQ")
        AbcD.Add(70, "BR")



        AbcD.Add(71, "BS")
        AbcD.Add(72, "BT")
        AbcD.Add(73, "BU")
        AbcD.Add(74, "BV")
        AbcD.Add(75, "BW")
        AbcD.Add(76, "BX")
        AbcD.Add(77, "BY")
        AbcD.Add(78, "BZ")


        AbcD.Add(79, "CA")
        AbcD.Add(80, "CB")
        AbcD.Add(81, "CC")
        AbcD.Add(82, "CD")
        AbcD.Add(83, "CF")
        AbcD.Add(84, "CG")
        AbcD.Add(85, "CH")
        AbcD.Add(86, "CI")
        Return AbcD(i).ToString
    End Function


    Private Shared Function CargaImagen_Byte(ByRef Imagen As Byte(), ByVal wb As HSSFWorkbook, Optional ByVal height As Integer = 100, Optional ByVal width As Integer = 100) As Integer
        Try
            Dim msTemp As New MemoryStream(Imagen)
            Dim img As Image = Image.FromStream(msTemp)
            Dim objbitmap As Bitmap
            Dim ms As New MemoryStream
            objbitmap = New Bitmap(img, height, width)
            objbitmap.Save(ms, System.Drawing.Imaging.ImageFormat.Bmp)
            ms.Position = 0
            Dim Buffer As Byte() = ms.ToArray
            Return wb.AddPicture(Buffer, PictureType.JPEG)
        Catch ex As Exception
            Return Nothing
        End Try
    End Function

    Private Shared Function CargaImagen_NPOI(ByRef url As String, ByVal wb As HSSFWorkbook, Optional ByVal height As Integer = 100, Optional ByVal width As Integer = 100) As Integer
        Try
            Dim request As Net.HttpWebRequest = DirectCast(Net.HttpWebRequest.Create(url), Net.HttpWebRequest)
            Dim response As Net.HttpWebResponse = DirectCast(request.GetResponse, Net.HttpWebResponse)
            Dim img As Image = Image.FromStream(response.GetResponseStream())
            Dim objbitmap As Bitmap
            Dim ms As New MemoryStream
            objbitmap = New Bitmap(img, height, width)
            response.Close()
            objbitmap.Save(ms, System.Drawing.Imaging.ImageFormat.Bmp)
            ms.Position = 0
            Dim Buffer As Byte() = ms.ToArray
            Return wb.AddPicture(Buffer, PictureType.JPEG)
        Catch ex As Exception
            Return Nothing
        End Try
    End Function

    Private Shared Function filtraResumen_Reporte(ByVal tbl As DataTable, ByVal f1 As String, ByVal f2 As String) As DataTable
        Dim rowArray() As DataRow
        Dim dt As New DataTable
        dt = tbl.Clone
        If f1 = "" And f2 = "" Then
            rowArray = tbl.Select("CTRMNC= '" & tbl.Rows(0).Item("CTRMNC") & "' AND NGUIRM= '" & tbl.Rows(0).Item("NGUIRM") & "'")
        Else
            rowArray = tbl.Select("CTRMNC= '" & f1 & "' AND NGUIRM= '" & f2 & "'")
        End If
        For Each row As DataRow In rowArray
            dt.ImportRow(row)
        Next
        Return dt
    End Function

    Private Shared Function filtraReporte_NPOI(ByVal tbl2 As DataTable, ByVal f1 As String) As DataTable
        Dim dt As New DataTable
        dt = tbl2.Copy
        dt.DefaultView.RowFilter = "CCLNT = '" & f1.Trim & "'"
        Return dt.DefaultView.ToTable
    End Function

    Private Shared Function filtraReporteXPK_NPOI(ByVal tbl2 As DataTable, ByVal Cliente As String, ByVal strPk1 As String, ByVal strPk2 As String) As DataTable
        Dim dt As New DataTable
        dt = tbl2.Copy
        dt.DefaultView.RowFilter = "CCLNT = '" & Cliente.Trim & "' and  CTRMNC = '" & strPk1.Trim & "' AND NGUIRM = '" & strPk2.Trim & "'"
        Return dt.DefaultView.ToTable
    End Function

    Private Shared Function filtraReporteGenerico(ByVal tbl As DataTable, ByVal where As String) As DataTable
        Dim dt As New DataTable
        dt = tbl.Copy
        dt.DefaultView.RowFilter = where
        Return dt.DefaultView.ToTable
    End Function

    Private Shared Function RowToDatatable(ByVal drSelect As DataRow(), ByVal tbl As DataTable) As DataTable
        Dim dt As New DataTable
        dt = tbl.Clone
        For Each row As DataRow In drSelect
            dt.ImportRow(row)
        Next
        Return dt
    End Function


    Public Shared Sub ExportExcelPlusPetrol_Terrestre_Masivo(ByVal Ods As Data.DataSet, ByVal permiso As Boolean)
        '=====================================================================
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            Dim strRutaImagen As String = ""

            Dim oDtClientes As DataTable = Ods.Tables(3)
            Dim ClienteRow As DataRow
            For Each ClienteRow In oDtClientes.Rows

                If objWorkBook.GetSheetIndex(ClienteRow("TCMPCL")) = -1 Then

                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("TCMPCL").ToString.Replace("*", ""))
                Else
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("CCLNT") & "_" & ClienteRow("TCMPCL").ToString.ToString.Replace("*", ""))
                End If

                objWorkSheet.CreateRow(3)
                Dim odtFiltro As DataTable = filtraReporte_NPOI(Ods.Tables("DT_Filtros").Copy, ClienteRow("CCLNT").ToString)
                Dim odtDetalle As DataTable = filtraReporte_NPOI(Ods.Tables("DT_Detalle").Copy, ClienteRow("CCLNT").ToString)
                Dim odtTotales As DataTable = filtraReporte_NPOI(Ods.Tables("DT_Totales").Copy, ClienteRow("CCLNT").ToString)
                Dim odtResCI As DataTable = filtraReporte_NPOI(Ods.Tables("DT_ResCntImputacion").Copy, ClienteRow("CCLNT").ToString)

                '=============Stilos======================
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                style.WrapText = True
                Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontFiltro.FontHeight = 165

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 165

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 170

                Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
                Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
                Estilos_Excel_NPOI(style, FORMATO.Normal)
                Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
                Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
                Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
                Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
                Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
                '============================================
                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontFiltro)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                styleMontoCI.SetFont(oFont)
                'Crea el Objeto apra cargar el Archivo de Imagen
                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)

                Dim rowActual As Integer = 6
                Dim indice As Integer = 0
                Dim IndiceColum As Integer = 0
                Dim NroItem As Integer = 1
                Dim addEspacios As Integer = 6
                'Variable para el Indice en el k se parte la grilla de Detalles
                Dim RowIniDetalle As Integer = 0
                Dim strPk1 As String = ""
                Dim strPk2 As String = ""

                'Los Filtros deben de estar Ordenados Por Fechas
                'tempFiltro = odtFiltro.Copy
                For Each RowFiltro As DataRow In odtFiltro.Rows

                    strPk1 = RowFiltro.Item("CTRMNC").ToString
                    strPk2 = RowFiltro.Item("NGUIRM").ToString
                    'Titulos para los filtros
                    Dim txtFiltro As String = ""
                    objWorkSheet.CreateRow(indice + rowActual)

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("CARGO_PLAN").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 0, indice + rowActual, 1))

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(2).CellStyle = styleTitulo
                    txtFiltro = RowFiltro.Item("TITULO").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(2).SetCellValue(txtFiltro)
                    Dim Region As New NPOI.SS.Util.Region(indice + rowActual, 2, indice + rowActual, 4)
                    objWorkSheet.AddMergedRegion(Region)

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(5).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("ORIGEN").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(5).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 5, indice + rowActual, 6))

                    indice = indice + 1

                    objWorkSheet.CreateRow(indice + rowActual)

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("FECHA").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 0, indice + rowActual, 1))

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(3).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("OPERACION").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(3).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 3, indice + rowActual, 4))

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(5).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("DESTINO").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(5).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 5, indice + rowActual, 6))
                    indice = indice + 1

                    objWorkSheet.CreateRow(indice + rowActual)
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("CHOFER").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 0, indice + rowActual, 2))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(3).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("BREVETE").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(3).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 3, indice + rowActual, 4))

                    '==========Validamos permiso para visualizar cotizacion==========
                    If permiso = True Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(5).CellStyle = styleFiltro
                        If RowFiltro.Item("TARIFA_MONEDA").ToString() = 0 Then
                            txtFiltro = "TARIFA :  " & RowFiltro.Item("TARIFA_MONTO").ToString()
                        Else
                            If RowFiltro.Item("TARIFA_MONEDA").ToString() = 1 Then
                                txtFiltro = "TARIFA : S/. " & RowFiltro.Item("TARIFA_MONTO").ToString()
                            Else
                                txtFiltro = "TARIFA : USD " & RowFiltro.Item("TARIFA_MONTO").ToString()
                            End If
                        End If
                        objWorkSheet.GetRow(indice + rowActual).GetCell(5).SetCellValue(txtFiltro)
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 5, indice + rowActual, 6))
                    End If
                    '================================================================
                    '=======================CARGAMOS LOGO POR CADA CARGO PLAN==============================
                    Dim anchor As HSSFClientAnchor
                    anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, indice - 1 + rowActual - 5, 0, 0)
                    Dim rutaLogo As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.png"
                    If IO.File.Exists(rutaLogo) Then
                        'load the picture and get the picture index in the workbook
                        Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaLogo, objWorkBook)), HSSFPicture)
                        'Reset the image to the original size.
                        picture.Resize(0.8)
                    End If
                    '================================================================================

                    indice = indice + 1

                    objWorkSheet.CreateRow(indice + rowActual)

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("MARCA").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 0, indice + rowActual, 2))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(3).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("PLACAS").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(3).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 3, indice + rowActual, 4))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(5).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("TRANSPORTISTA").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(5).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 5, indice + rowActual, 7))
                    indice = indice + 1

                    objWorkSheet.CreateRow(indice + rowActual)
                    IndiceColum = 0
                    For y As Integer = 0 To odtDetalle.Columns.Count - 1
                        If odtDetalle.Columns(y).ColumnName <> "TCMPAL" AndAlso _
                        odtDetalle.Columns(y).ColumnName <> "TCMPCL" AndAlso _
                        odtDetalle.Columns(y).ColumnName <> "CCLNT" AndAlso _
                        odtDetalle.Columns(y).ColumnName <> "CCLNT1" AndAlso _
                        odtDetalle.Columns(y).ColumnName <> "CREFFW" AndAlso _
                        odtDetalle.Columns(y).ColumnName <> "CTRMNC" AndAlso _
                         odtDetalle.Columns(y).ColumnName <> "NGUIRM" Then
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
                            '===Valores===
                            Dim valorCab As String = odtDetalle.Columns(y).ColumnName.ToString().Trim()
                            objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(valorCab)
                            IndiceColum = IndiceColum + 1
                        End If
                    Next
                    If permiso = True Then 'Columna para TARIFA por permiso
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
                        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue("TARIFA X CI")
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 1).CellStyle = styleCab
                        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 1).SetCellValue("TARIFA")
                    End If
                    indice = indice + 1

                    Dim dtRegistros As New DataTable
                    dtRegistros = RowToDatatable(odtDetalle.Select("CCLNT = " + ClienteRow("CCLNT").ToString + " and CTRMNC = " + strPk1 + "  and NGUIRM = " + strPk2 + ""), odtDetalle)
                    NroItem = 1
                    For Each RowDetalle As DataRow In dtRegistros.Rows
                        'Se llena el Detalle
                        If NroItem = 1 Then
                            RowIniDetalle = indice + rowActual
                        End If
                        objWorkSheet.CreateRow(indice + rowActual)
                        IndiceColum = 0
                        For y As Integer = 0 To dtRegistros.Columns.Count - 1
                            If dtRegistros.Columns(y).ColumnName <> "TCMPAL" AndAlso _
                            dtRegistros.Columns(y).ColumnName <> "TCMPCL" AndAlso _
                            dtRegistros.Columns(y).ColumnName <> "CCLNT" AndAlso _
                            dtRegistros.Columns(y).ColumnName <> "CCLNT1" AndAlso _
                            dtRegistros.Columns(y).ColumnName <> "CREFFW" AndAlso _
                            dtRegistros.Columns(y).ColumnName <> "CTRMNC" AndAlso _
                            dtRegistros.Columns(y).ColumnName <> "NGUIRM" Then
                                '================Codigo que Reemplazaremos============
                                Dim celda As String = RowDetalle.Item(y).ToString().Trim() '******************
                                Select Case dtRegistros.Columns(y).ColumnName
                                    Case "ITEM"
                                        Dim NroItemVis As String = ""
                                        If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                            NroItemVis = NroItem.ToString.Trim()
                                        End If
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).SetCellValue(NroItemVis)
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).CellStyle = style
                                    Case "CLIENTE", "GUIA_CLIENTE", "PROVEEDOR", "GUIA_PROV", "COD_PRODUCTO", "CONTENIDO", "OC", "LOTE", "CUENTA_IMPUTACION", "MEDIO_ENVIO"
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).SetCellValue(celda)
                                        If odtDetalle.Columns(y).ColumnName = "CUENTA_IMPUTACION" And Not IsDBNull(RowDetalle.Item("POR_CI")) Then
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).CellStyle = styleMontoCI
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).CellStyle = style
                                        End If
                                    Case "F_DE_INGRESO"
                                        If celda <> "" And celda <> "00/00/0000" Then celda = String.Format("{0:d}", CDate(celda)) ' Valida los casos que tenga distribucion q llegan valores vacios o con formato incorrecto
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleFecha
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                    Case "BULTOS"
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleNumber
                                        If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                        End If
                                    Case "PESO", "M3", "PESO_VOL"
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMonto
                                        If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                        End If
                                    Case "POR"
                                        '===============
                                        Dim valSubPor As Double = 0D 'ACA ERROR VERIFICAR AL REGRESAR DEL ALMUERZO
                                        If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                            valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                        Else
                                            valSubPor = CDbl(RowDetalle.Item("POR_CI")) * 0.01 'Se obtiene el porcentaje de distribucion
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMontoCI
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue("")
                                        End If
                                        '===============
                                        If permiso = True Then
                                            '==============
                                            If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                                objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 3).CellStyle = styleMonto
                                                objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 3).SetCellValue("")
                                                '--------------------------------------------------------------------------------------------------
                                                objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 4).CellStyle = styleMonto
                                                objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 4).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                                '--------------------------------------------------------------------------------------------------
                                            Else
                                                objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 3).CellStyle = styleMontoCI
                                                objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 3).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                                '--------------------------------------------------------------------------------------------------
                                                objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 4).CellStyle = styleMontoCI
                                                objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 4).SetCellValue("")
                                                '--------------------------------------------------------------------------------------------------
                                            End If
                                            '==============
                                        End If
                                    Case "POR_CI"
                                        If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Si es nulo Pinta cajas Blancas
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMontoCI 'styleMonto
                                        Else 'Caso contrario pinta cajas amarillas
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMontoCI
                                        End If
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                End Select
                                '================
                                ' If odtDetalle.Columns(y).ColumnName = "ITEM" Then
                                'Dim NroItemVis As String = ""
                                'If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                '    NroItemVis = NroItem.ToString.Trim()
                                'End If
                                'objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).SetCellValue(NroItemVis)
                                'objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).CellStyle = style
                                'Else
                                'Dim celda As String = RowDetalle.Item(y).ToString().Trim()
                                'If IsNumeric(celda) Then
                                'If celda.Contains(".") Then
                                '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMonto
                                '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                'ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = style
                                '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                'Else
                                'objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleNumber
                                'objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                'End If
                                ' Para el Calculo del Porcentaje
                                'If IndiceColum = 13 Then
                                ''===============
                                'Dim valSubPor As Double = 0D
                                'If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                '    valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                                '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                'Else
                                '    valSubPor = CDbl(RowDetalle.Item("POR_CI")) * 0.01 'Se obtiene el porcentaje de distribucion
                                '    objWorkSheet.GetRow(indice + rowActual).RemoveCell(objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum))
                                '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMontoCI 'styleMonto '
                                '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue("")
                                'End If
                                ''===============
                                'If permiso = True Then
                                '    '==============
                                '    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                '        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 3).CellStyle = styleMonto
                                '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 3).SetCellValue("")
                                '        '--------------------------------------------------------------------------------------------------
                                '        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 4).CellStyle = styleMonto
                                '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 4).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                '        '--------------------------------------------------------------------------------------------------
                                '    Else
                                '        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 3).CellStyle = styleMontoCI
                                '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 3).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                '        '--------------------------------------------------------------------------------------------------
                                '        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 4).CellStyle = styleMontoCI
                                '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 4).SetCellValue("")
                                '        '--------------------------------------------------------------------------------------------------
                                '    End If
                                '    '==============
                                'End If
                                'Else
                                'If IndiceColum = 15 Then
                                '    objWorkSheet.GetRow(indice + rowActual).RemoveCell(objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum))
                                '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMontoCI
                                'End If
                                'If celda.Substring(0, 1) = "0" And celda.Length > 1 Then
                                '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda.ToString)
                                'Else
                                '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                'End If
                                'End If
                                ' Else
                                'If IsDate(celda) Then
                                '    celda = String.Format("{0:d}", CDate(celda))
                                '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleFecha
                                '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                'Else
                                '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).SetCellValue(celda)
                                '    If IndiceColum = 14 And Not IsDBNull(RowDetalle.Item("POR_CI")) Then
                                '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).CellStyle = styleMontoCI
                                '    Else
                                '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).CellStyle = style
                                '    End If
                                'End If
                                'End If
                                'End If
                                IndiceColum = IndiceColum + 1
                            End If
                        Next
                        indice = indice + 1
                        If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Para los detalles Generales saltando cuando se pinte el subdetalle
                            NroItem += 1
                        End If
                    Next
                    '  Se Crean LOs totales Del Detalle
                    Dim dtTempTotal As DataTable
                    dtTempTotal = filtraReporteXPK_NPOI(odtTotales, ClienteRow("CCLNT").ToString, strPk1, strPk2)

                    Dim CountTotal As Integer = dtTempTotal.Rows.Count

                    objWorkSheet.CreateRow(indice + rowActual)

                    Dim iCelda As String = ""
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(8).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(8).SetCellValue("TOTAL")

                    If CountTotal > 0 Then
                        iCelda = dtTempTotal.Rows(0).Item("TBULTOS").ToString()
                    Else
                        iCelda = "0"
                    End If

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(9).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(9).SetCellValue(Convert.ToDouble(iCelda))

                    If CountTotal > 0 Then
                        iCelda = dtTempTotal.Rows(0).Item("TPESO").ToString()
                    Else
                        iCelda = "0"
                    End If

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(10).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(10).SetCellValue(Convert.ToDouble(iCelda))

                    If CountTotal > 0 Then
                        iCelda = dtTempTotal.Rows(0).Item("TM3").ToString()
                    Else
                        iCelda = "0"
                    End If

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(11).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(11).SetCellValue(Convert.ToDouble(iCelda))
                    Dim cIniV As String
                    Dim cFinV As String

                    If dtRegistros.Rows.Count = 0 Then
                        RowIniDetalle = indice + rowActual - 1
                    End If
                    cIniV = "M" & (RowIniDetalle + 1).ToString
                    cFinV = "M" & (indice + rowActual).ToString
                    Dim sumVol As String = "SUM(" & cIniV & ":" & cFinV & ")"
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(12).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(12).CellFormula = (sumVol)
                    cIniV = "N" & (RowIniDetalle + 1).ToString
                    cFinV = "N" & (indice + rowActual).ToString
                    Dim sumPor As String = "SUM(" & cIniV & ":" & cFinV & ")"
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(13).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(13).CellFormula = (sumPor)

                    '===========total costos===========
                    If permiso = True Then
                        Dim cIniC As String = LetraNumero_NPOI(18) & (RowIniDetalle + 1).ToString
                        Dim cFinC As String = LetraNumero_NPOI(18) & (indice + rowActual).ToString
                        Dim sumCosto As String = ""
                        If odtDetalle.Rows.Count <> 0 Then
                            sumCosto = "SUM(" & cIniC & ":" & cFinC & ")"
                        Else
                            sumCosto = "0"
                        End If
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(17).CellStyle = styleMonto
                        objWorkSheet.GetRow(indice + rowActual).GetCell(17).CellFormula = (sumCosto)
                    End If
                    '===================================================================  
                    '===================================================================  
                    Dim dtTempCI As DataTable = filtraReporteXPK_NPOI(odtResCI, ClienteRow("CCLNT").ToString, strPk1, strPk2)
                    '===============CREAMOS RESUMEN POR CUENTA IMPUTACION========= 
                    indice = indice + 1
                    Dim rowResumen As Integer = 0
                    rowResumen = indice + rowActual
                    If permiso = True Then
                        Dim cel As String
                        Dim posCelda As Int64 = 0
                        objWorkSheet.CreateRow(rowResumen)
                        objWorkSheet.GetRow(rowResumen).CreateCell(5).CellStyle = styleCab
                        objWorkSheet.GetRow(rowResumen).CreateCell(6).CellStyle = styleCab
                        objWorkSheet.GetRow(rowResumen).GetCell(5).SetCellValue("Resumen por Cuenta de Imputación")
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowResumen, 5, rowResumen, 6))
                        rowResumen += 1
                        objWorkSheet.CreateRow(rowResumen)
                        For x As Integer = 0 To dtTempCI.Columns.Count - 1
                            If dtTempCI.Columns(x).ColumnName <> "CCLNT" AndAlso _
                               dtTempCI.Columns(x).ColumnName <> "CTRMNC" AndAlso _
                               dtTempCI.Columns(x).ColumnName <> "NGUIRM" Then
                                posCelda = x + 2
                                '===Estilo===
                                objWorkSheet.GetRow(rowResumen).CreateCell(posCelda).CellStyle = styleCab
                                '===Valores===
                                Dim valorCab As String = dtTempCI.Columns(x).ColumnName.ToString().Trim()
                                objWorkSheet.GetRow(rowResumen).GetCell(posCelda).SetCellValue(valorCab)
                            End If
                        Next
                        rowResumen += 1
                        For i As Integer = 0 To dtTempCI.Rows.Count - 1
                            objWorkSheet.CreateRow(i + rowResumen)
                            For x As Integer = 0 To dtTempCI.Columns.Count - 1
                                If dtTempCI.Columns(x).ColumnName <> "CCLNT" AndAlso _
                                    dtTempCI.Columns(x).ColumnName <> "CTRMNC" AndAlso _
                                    dtTempCI.Columns(x).ColumnName <> "NGUIRM" Then
                                    posCelda = x + 2
                                    cel = dtTempCI.Rows(i).Item(x).ToString().Trim()
                                    If IsNumeric(cel) Then
                                        If cel.Contains(".") Then
                                            objWorkSheet.GetRow(i + rowResumen).CreateCell(posCelda).CellStyle = styleMonto
                                        Else
                                            objWorkSheet.GetRow(i + rowResumen).CreateCell(posCelda).CellStyle = styleNumber
                                        End If
                                        objWorkSheet.GetRow(i + rowResumen).GetCell(posCelda).SetCellValue(Double.Parse(cel.ToString))
                                    Else
                                        objWorkSheet.GetRow(i + rowResumen).CreateCell(posCelda).CellStyle = style
                                        objWorkSheet.GetRow(i + rowResumen).GetCell(posCelda).SetCellValue(cel)
                                    End If
                                End If
                            Next
                        Next
                    End If
                    '===================================================================          
                    indice = addEspacios + rowResumen 'indice
                Next
                objWorkSheet.DefaultRowHeightInPoints = 15
                objWorkSheet.DefaultColumnWidth = 25
                For z As Integer = 0 To odtDetalle.Columns.Count - 1
                    objWorkSheet.AutoSizeColumn(z)
                Next
                If permiso = False Then
                    Ods.Tables("DT_General").Columns.Remove("TARIFA")
                    Ods.Tables("DT_General").Columns.Remove("TARIFA_CI")
                End If
                CreaHojaExcel(objWorkBook, Ods, ClienteRow, CARGOPLAN.TERRESTRE)
                If permiso = True Then
                    CreaHojaExcel(objWorkBook, Ods, ClienteRow, CARGOPLAN.RESUMEN_GENERAL_TERRES)
                End If
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub
    ''GASTON
    Public Shared Sub ExportExcelPlusPetrol_Terrestre_Masivo_Plus(ByVal Ods As Data.DataSet, ByVal permiso As Boolean)
        '=====================================================================
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            Dim strRutaImagen As String = ""

            Dim oDtClientes As DataTable = Ods.Tables(3)
            Dim ClienteRow As DataRow
            For Each ClienteRow In oDtClientes.Rows

                If objWorkBook.GetSheetIndex(ClienteRow("TCMPCL")) = -1 Then

                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("TCMPCL").ToString.Replace("*", ""))
                Else
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("CCLNT") & "_" & ClienteRow("TCMPCL").ToString.ToString.Replace("*", ""))
                End If

                objWorkSheet.CreateRow(3)
                Dim odtFiltro As DataTable = filtraReporte_NPOI(Ods.Tables("DT_Filtros").Copy, ClienteRow("CCLNT").ToString)
                Dim odtDetalle As DataTable = filtraReporte_NPOI(Ods.Tables("DT_Detalle").Copy, ClienteRow("CCLNT").ToString)
                Dim odtTotales As DataTable = filtraReporte_NPOI(Ods.Tables("DT_Totales").Copy, ClienteRow("CCLNT").ToString)
                Dim odtResCI As DataTable = filtraReporte_NPOI(Ods.Tables("DT_ResCntImputacion").Copy, ClienteRow("CCLNT").ToString)

                '=============Stilos======================
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                style.WrapText = True
                Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontFiltro.FontHeight = 165

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 165

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 170

                Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
                Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
                Estilos_Excel_NPOI(style, FORMATO.Normal)
                Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
                Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
                Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
                Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
                Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
                '============================================
                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontFiltro)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                styleMontoCI.SetFont(oFont)
                'Crea el Objeto apra cargar el Archivo de Imagen
                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)

                Dim rowActual As Integer = 6
                Dim indice As Integer = 0
                Dim IndiceColum As Integer = 0
                Dim NroItem As Integer = 1
                Dim addEspacios As Integer = 6
                'Variable para el Indice en el k se parte la grilla de Detalles
                Dim RowIniDetalle As Integer = 0
                Dim strPk1 As String = ""
                Dim strPk2 As String = ""
                Dim celAdd As Int32 = 0 ''indice de celda de las columnas agregadas al final

                'Los Filtros deben de estar Ordenados Por Fechas
                'tempFiltro = odtFiltro.Copy
                For Each RowFiltro As DataRow In odtFiltro.Rows

                    strPk1 = RowFiltro.Item("CTRMNC").ToString
                    strPk2 = RowFiltro.Item("NGUIRM").ToString
                    'Titulos para los filtros
                    Dim txtFiltro As String = ""
                    objWorkSheet.CreateRow(indice + rowActual)

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("CARGO_PLAN").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 0, indice + rowActual, 1))

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(2).CellStyle = styleTitulo
                    txtFiltro = RowFiltro.Item("TITULO").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(2).SetCellValue(txtFiltro)
                    Dim Region As New NPOI.SS.Util.Region(indice + rowActual, 2, indice + rowActual, 4)
                    objWorkSheet.AddMergedRegion(Region)

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(5).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("ORIGEN").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(5).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 5, indice + rowActual, 6))

                    indice = indice + 1

                    objWorkSheet.CreateRow(indice + rowActual)

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("FECHA").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 0, indice + rowActual, 1))

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(3).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("OPERACION").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(3).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 3, indice + rowActual, 4))

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(5).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("DESTINO").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(5).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 5, indice + rowActual, 6))
                    indice = indice + 1

                    objWorkSheet.CreateRow(indice + rowActual)
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("CHOFER").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 0, indice + rowActual, 2))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(3).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("BREVETE").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(3).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 3, indice + rowActual, 4))

                    '==========Validamos permiso para visualizar cotizacion==========
                    If permiso = True Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(5).CellStyle = styleFiltro
                        If RowFiltro.Item("TARIFA_MONEDA").ToString() = 0 Then
                            txtFiltro = "TARIFA :  " & RowFiltro.Item("TARIFA_MONTO").ToString()
                        Else
                            If RowFiltro.Item("TARIFA_MONEDA").ToString() = 1 Then
                                txtFiltro = "TARIFA : S/. " & RowFiltro.Item("TARIFA_MONTO").ToString()
                            Else
                                txtFiltro = "TARIFA : USD " & RowFiltro.Item("TARIFA_MONTO").ToString()
                            End If
                        End If
                        objWorkSheet.GetRow(indice + rowActual).GetCell(5).SetCellValue(txtFiltro)
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 5, indice + rowActual, 6))
                    End If
                    '================================================================
                    '=======================CARGAMOS LOGO POR CADA CARGO PLAN==============================
                    Dim anchor As HSSFClientAnchor
                    anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, indice - 1 + rowActual - 5, 0, 0)
                    Dim rutaLogo As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.png"
                    If IO.File.Exists(rutaLogo) Then
                        'load the picture and get the picture index in the workbook
                        Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaLogo, objWorkBook)), HSSFPicture)
                        'Reset the image to the original size.
                        picture.Resize(0.8)
                    End If
                    '================================================================================

                    indice = indice + 1

                    objWorkSheet.CreateRow(indice + rowActual)

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("MARCA").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 0, indice + rowActual, 2))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(3).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("PLACAS").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(3).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 3, indice + rowActual, 4))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(5).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("TRANSPORTISTA").ToString()
                    objWorkSheet.GetRow(indice + rowActual).GetCell(5).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice + rowActual, 5, indice + rowActual, 7))
                    indice = indice + 1

                    objWorkSheet.CreateRow(indice + rowActual)


                    Dim ListaColExport As New List(Of String)
                    Dim PosColumn As New Hashtable
                    Dim iPosCol As Integer = 0
                    ListaColExport.Add("ITEM")
                    ListaColExport.Add("CLIENTE")
                    ListaColExport.Add("GUIA_CLIENTE")
                    ListaColExport.Add("MEDIO_ENVIO")
                    ListaColExport.Add("PROVEEDOR")
                    ListaColExport.Add("GUIA_PROV")
                    ListaColExport.Add("COD_PRODUCTO")
                    ListaColExport.Add("CONTENIDO")
                    ListaColExport.Add("OC")
                    ListaColExport.Add("LOTE")
                    ListaColExport.Add("F_DE_INGRESO")
                    ListaColExport.Add("BULTOS")
                    ListaColExport.Add("PESO")
                    ListaColExport.Add("M3")
                    ListaColExport.Add("PESO_VOL")
                    ListaColExport.Add("POR")
                    ListaColExport.Add("CUENTA_IMPUTACION")
                    ListaColExport.Add("POR_CI")


                    If permiso = True Then
                        ListaColExport.Add("TARIFA_X_CI")
                        ListaColExport.Add("TARIFA")
                        ListaColExport.Add("CUENTA_MAYOR")
                        ListaColExport.Add("CENTRO_COSTE")
                        ListaColExport.Add("ELEMENTO_PEP")
                        ListaColExport.Add("ORDEN")
                        ListaColExport.Add("GRAFO")
                        ListaColExport.Add("SIN_CUENTA")
                    Else
                        ListaColExport.Add("CUENTA_MAYOR")
                        ListaColExport.Add("CENTRO_COSTE")
                        ListaColExport.Add("ELEMENTO_PEP")
                        ListaColExport.Add("ORDEN")
                        ListaColExport.Add("GRAFO")
                        ListaColExport.Add("SIN_CUENTA")
                    End If

                    IndiceColum = 0
                    For Each ItemCol As String In ListaColExport
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
                        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(ItemCol)
                        PosColumn(ItemCol) = IndiceColum
                        IndiceColum = IndiceColum + 1
                    Next


                    'For y As Integer = 0 To odtDetalle.Columns.Count - 1
                    '    If odtDetalle.Columns(y).ColumnName <> "TCMPAL" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "TCMPCL" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "CCLNT" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "CCLNT1" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "CREFFW" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "CTRMNC" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "NGUIRM" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "CUENTA_MAYOR" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "CENTRO_COSTE" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "ELEMENTO_PEP" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "ORDEN" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "GRAFO" AndAlso _
                    '    odtDetalle.Columns(y).ColumnName <> "SIN_CUENTA" Then

                    '        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
                    '        '===Valores===
                    '        Dim valorCab As String = odtDetalle.Columns(y).ColumnName.ToString().Trim()
                    '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(valorCab)
                    '        IndiceColum = IndiceColum + 1
                    '    End If
                    'Next
                    'If permiso = True Then 'Columna para TARIFA por permiso
                    '    celAdd = 19
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue("TARIFA X CI")
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 1).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 1).SetCellValue("TARIFA")

                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 2).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 2).SetCellValue("CUENTA_MAYOR")
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 3).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 3).SetCellValue("CENTRO_COSTE")
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 4).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 4).SetCellValue("ELEMENTO_PEP")
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 5).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 5).SetCellValue("ORDEN")
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 6).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 6).SetCellValue("GRAFO")

                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 7).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 7).SetCellValue("SIN_CUENTA")

                    'Else
                    '    celAdd = 17
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue("CUENTA_MAYOR")
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 1).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 1).SetCellValue("CENTRO_COSTE")
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 2).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 2).SetCellValue("ELEMENTO_PEP")
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 3).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 3).SetCellValue("ORDEN")
                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 4).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 4).SetCellValue("GRAFO")


                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 5).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 5).SetCellValue("SIN_CUENTA")
                    'End If
                    indice = indice + 1

                    Dim dtRegistros As New DataTable
                    dtRegistros = RowToDatatable(odtDetalle.Select("CCLNT = " + ClienteRow("CCLNT").ToString + " and CTRMNC = " + strPk1 + "  and NGUIRM = " + strPk2 + ""), odtDetalle)
                    NroItem = 1

                    Dim iPostColumn As Integer = 0
                    For Each RowDetalle As DataRow In dtRegistros.Rows
                        'Se llena el Detalle
                        If NroItem = 1 Then
                            RowIniDetalle = indice + rowActual
                        End If
                        objWorkSheet.CreateRow(indice + rowActual)
                        IndiceColum = 0


                        For Each ItemCol As String In ListaColExport


                            'Next

                            'For y As Integer = 0 To dtRegistros.Columns.Count - 1
                            'If dtRegistros.Columns(y).ColumnName <> "TCMPAL" AndAlso _
                            'dtRegistros.Columns(y).ColumnName <> "TCMPCL" AndAlso _
                            'dtRegistros.Columns(y).ColumnName <> "CCLNT" AndAlso _
                            'dtRegistros.Columns(y).ColumnName <> "CCLNT1" AndAlso _
                            'dtRegistros.Columns(y).ColumnName <> "CREFFW" AndAlso _
                            'dtRegistros.Columns(y).ColumnName <> "CTRMNC" AndAlso _
                            'dtRegistros.Columns(y).ColumnName <> "NGUIRM" Then
                            '================Codigo que Reemplazaremos============
                            If ItemCol = "TARIFA_X_CI" Or ItemCol = "TARIFA" Then
                                Continue For
                            End If

                            iPostColumn = PosColumn(ItemCol)
                            Dim celda As String = RowDetalle.Item(ItemCol).ToString().Trim() '******************

                            'Dim colum As String = dtRegistros.Columns(y).ColumnName
                            Select Case ItemCol
                               
                                Case "ITEM"
                                    Dim NroItemVis As String = ""
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        NroItemVis = NroItem.ToString.Trim()
                                    End If
                                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).SetCellValue(NroItemVis)
                                    'objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).CellStyle = style
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).SetCellValue(NroItemVis)
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).CellStyle = style
                                    'Exit Select
                                Case "CLIENTE", "GUIA_CLIENTE", "PROVEEDOR", "GUIA_PROV", "COD_PRODUCTO", "CONTENIDO", "OC", "LOTE", "CUENTA_IMPUTACION", "MEDIO_ENVIO"
                                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).SetCellValue(celda)
                                    'If odtDetalle.Columns(y).ColumnName = "CUENTA_IMPUTACION" And Not IsDBNull(RowDetalle.Item("POR_CI")) Then
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).CellStyle = styleMontoCI
                                    'Else
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).CellStyle = style
                                    'End If
                                    'Exit Select
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).SetCellValue(celda)
                                    If odtDetalle.Columns(ItemCol).ColumnName = "CUENTA_IMPUTACION" And Not IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).CellStyle = styleMontoCI
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).CellStyle = style
                                    End If

                                Case "F_DE_INGRESO"
                                    If celda <> "" And celda <> "00/00/0000" Then celda = String.Format("{0:d}", CDate(celda)) ' Valida los casos que tenga distribucion q llegan valores vacios o con formato incorrecto
                                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleFecha
                                    'objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                    'Exit Select
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).CellStyle = styleFecha
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).SetCellValue(celda)
                                Case "BULTOS"
                                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleNumber
                                    'If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                    'Else
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                    'End If
                                    'Exit Select
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).CellStyle = styleNumber
                                    If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).SetCellValue(Convert.ToDouble(celda))
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).SetCellValue(celda)
                                    End If
                                Case "PESO", "M3", "PESO_VOL"
                                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMonto
                                    'If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                    'Else
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                    'End If
                                    'Exit Select
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).CellStyle = styleMonto
                                    If celda <> "" Then ' Valida los casos que tenga distribucion pues llegan valores vacios
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).SetCellValue(Convert.ToDouble(celda))
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).SetCellValue(celda)
                                    End If
                                Case "POR"
                                    '===============
                                    'Dim valSubPor As Double = 0D 'ACA ERROR VERIFICAR AL REGRESAR DEL ALMUERZO
                                    'If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                    '    valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMonto
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(Convert.ToDouble(celda))
                                    'Else
                                    '    valSubPor = CDbl(RowDetalle.Item("POR_CI")) * 0.01 'Se obtiene el porcentaje de distribucion
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMontoCI
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue("")
                                    'End If
                                    ''===============
                                    'If permiso = True Then
                                    '    '==============
                                    '    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                    '        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 3).CellStyle = styleMonto
                                    '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 3).SetCellValue("")
                                    '        '--------------------------------------------------------------------------------------------------
                                    '        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 4).CellStyle = styleMonto
                                    '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 4).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                    '        '--------------------------------------------------------------------------------------------------
                                    '    Else
                                    '        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 3).CellStyle = styleMontoCI
                                    '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 3).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                    '        '--------------------------------------------------------------------------------------------------
                                    '        objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum + 4).CellStyle = styleMontoCI
                                    '        objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum + 4).SetCellValue("")
                                    '        '--------------------------------------------------------------------------------------------------
                                    '    End If
                                    '    '==============
                                    'End If
                                    'Exit Select

                                    Dim valSubPor As Double = 0D 'ACA ERROR VERIFICAR AL REGRESAR DEL ALMUERZO
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                        valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).SetCellValue(Convert.ToDouble(celda))
                                    Else
                                        valSubPor = CDbl(RowDetalle.Item("POR_CI")) * 0.01 'Se obtiene el porcentaje de distribucion
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).CellStyle = styleMontoCI
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).SetCellValue("")
                                    End If
                                    '===============
                                    If permiso = True Then
                                        '==============
                                        If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("TARIFA_X_CI")).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("TARIFA_X_CI")).SetCellValue("")
                                            '--------------------------------------------------------------------------------------------------
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("TARIFA")).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("TARIFA")).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                            '--------------------------------------------------------------------------------------------------
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("TARIFA_X_CI")).CellStyle = styleMontoCI
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("TARIFA_X_CI")).CellFormula = (Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                            '--------------------------------------------------------------------------------------------------
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("TARIFA")).CellStyle = styleMontoCI
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("TARIFA")).SetCellValue("")
                                            '--------------------------------------------------------------------------------------------------
                                        End If
                                        '==============
                                    End If

                                Case "POR_CI"
                                    'If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Si es nulo Pinta cajas Blancas
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMonto
                                    'Else 'Caso contrario pinta cajas amarillas
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(IndiceColum).CellStyle = styleMontoCI
                                    'End If
                                    'objWorkSheet.GetRow(indice + rowActual).GetCell(IndiceColum).SetCellValue(celda)
                                    'Exit Select

                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Si es nulo Pinta cajas Blancas
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).CellStyle = styleMonto
                                    Else 'Caso contrario pinta cajas amarillas
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).CellStyle = styleMontoCI
                                    End If
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).SetCellValue(celda)

                                    'Case "CUENTA_MAYOR"
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd).CellStyle = style
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd).SetCellValue(celda)
                                    '    Continue For

                                Case "CENTRO_COSTE", "ELEMENTO_PEP", "ORDEN", "GRAFO", "SIN_CUENTA", "CUENTA_MAYOR"

                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostColumn).CellStyle = style
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostColumn).SetCellValue(celda)

                                    'Case "CENTRO_COSTE"
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 1).CellStyle = style
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 1).SetCellValue(celda)
                                    '    Continue For
                                    'Case "ELEMENTO_PEP"
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 2).CellStyle = style
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 2).SetCellValue(celda)
                                    '    Continue For
                                    'Case "ORDEN"
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 3).CellStyle = style
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 3).SetCellValue(celda)
                                    '    Continue For
                                    'Case "GRAFO"
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 4).CellStyle = style
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 4).SetCellValue(celda)
                                    '    Continue For


                                    'Case "SIN_CUENTA"
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 5).CellStyle = style
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 5).SetCellValue(celda)
                                    '    Continue For

                            End Select

                            'IndiceColum = IndiceColum + 1
                            'End If
                        Next
                        indice = indice + 1
                        'If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Para los detalles Generales saltando cuando se pinte el subdetalle
                        '    NroItem += 1
                        'End If
                        NroItem += 1
                    Next
                    '  Se Crean LOs totales Del Detalle
                    Dim dtTempTotal As DataTable
                    dtTempTotal = filtraReporteXPK_NPOI(odtTotales, ClienteRow("CCLNT").ToString, strPk1, strPk2)

                    Dim CountTotal As Integer = dtTempTotal.Rows.Count

                    objWorkSheet.CreateRow(indice + rowActual)

                    Dim iCelda As String = ""
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("BULTOS") - 1).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("BULTOS") - 1).SetCellValue("TOTAL")

                    If CountTotal > 0 Then
                        iCelda = dtTempTotal.Rows(0).Item("TBULTOS").ToString()
                    Else
                        iCelda = "0"
                    End If

                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(9).CellStyle = styleMonto
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(9).SetCellValue(Convert.ToDouble(iCelda))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("BULTOS")).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("BULTOS")).SetCellValue(Convert.ToDouble(iCelda))

                    If CountTotal > 0 Then
                        iCelda = dtTempTotal.Rows(0).Item("TPESO").ToString()
                    Else
                        iCelda = "0"
                    End If

                    'PESO
                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(10).CellStyle = styleMonto
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(10).SetCellValue(Convert.ToDouble(iCelda))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("PESO")).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("PESO")).SetCellValue(Convert.ToDouble(iCelda))

                    If CountTotal > 0 Then
                        iCelda = dtTempTotal.Rows(0).Item("TM3").ToString()
                    Else
                        iCelda = "0"
                    End If

                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(11).CellStyle = styleMonto
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(11).SetCellValue(Convert.ToDouble(iCelda))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("M3")).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("M3")).SetCellValue(Convert.ToDouble(iCelda))

                    Dim cIniV As String
                    Dim cFinV As String

                    If dtRegistros.Rows.Count = 0 Then
                        RowIniDetalle = indice + rowActual - 1
                    End If
                    'cIniV = "M" & (RowIniDetalle + 1).ToString
                    'cFinV = "M" & (indice + rowActual).ToString
                    cIniV = LetraNumero_NPOI(PosColumn("PESO_VOL") + 1) & (RowIniDetalle + 1).ToString
                    cFinV = LetraNumero_NPOI(PosColumn("PESO_VOL") + 1) & (indice + rowActual).ToString
                    Dim sumVol As String = "SUM(" & cIniV & ":" & cFinV & ")"
                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(12).CellStyle = styleMonto
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(12).CellFormula = (sumVol)
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("PESO_VOL")).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("PESO_VOL")).CellFormula = (sumVol)
                    'cIniV = "N" & (RowIniDetalle + 1).ToString
                    'cFinV = "N" & (indice + rowActual).ToString
                    cIniV = LetraNumero_NPOI(PosColumn("POR") + 1) & (RowIniDetalle + 1).ToString
                    cFinV = LetraNumero_NPOI(PosColumn("POR") + 1) & (indice + rowActual).ToString
                    Dim sumPor As String = "SUM(" & cIniV & ":" & cFinV & ")"
                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(13).CellStyle = styleMonto
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(13).CellFormula = (sumPor)
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("POR")).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("POR")).CellFormula = (sumPor)

                    '===========total costos===========
                    If permiso = True Then
                        'Dim cIniC As String = LetraNumero_NPOI(18) & (RowIniDetalle + 1).ToString
                        'Dim cFinC As String = LetraNumero_NPOI(18) & (indice + rowActual).ToString
                        Dim cIniC As String = LetraNumero_NPOI(PosColumn("TARIFA_X_CI") + 1) & (RowIniDetalle + 1).ToString
                        Dim cFinC As String = LetraNumero_NPOI(PosColumn("TARIFA_X_CI") + 1) & (indice + rowActual).ToString
                        Dim sumCosto As String = ""
                        If odtDetalle.Rows.Count <> 0 Then
                            sumCosto = "SUM(" & cIniC & ":" & cFinC & ")"
                        Else
                            sumCosto = "0"
                        End If
                        'objWorkSheet.GetRow(indice + rowActual).CreateCell(17).CellStyle = styleMonto
                        'objWorkSheet.GetRow(indice + rowActual).GetCell(17).CellFormula = (sumCosto)
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(PosColumn("TARIFA_X_CI")).CellStyle = styleMonto
                        objWorkSheet.GetRow(indice + rowActual).GetCell(PosColumn("TARIFA_X_CI")).CellFormula = (sumCosto)
                    End If
                    '===================================================================  
                    '===================================================================  
                    Dim dtTempCI As DataTable = filtraReporteXPK_NPOI(odtResCI, ClienteRow("CCLNT").ToString, strPk1, strPk2)
                    '===============CREAMOS RESUMEN POR CUENTA IMPUTACION========= 
                    indice = indice + 1
                    Dim rowResumen As Integer = 0
                    rowResumen = indice + rowActual
                    If permiso = True Then
                        Dim cel As String
                        Dim posCelda As Int64 = 0
                        objWorkSheet.CreateRow(rowResumen)
                        objWorkSheet.GetRow(rowResumen).CreateCell(5).CellStyle = styleCab
                        objWorkSheet.GetRow(rowResumen).CreateCell(6).CellStyle = styleCab
                        objWorkSheet.GetRow(rowResumen).GetCell(5).SetCellValue("Resumen por Cuenta de Imputación")
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowResumen, 5, rowResumen, 6))
                        rowResumen += 1
                        objWorkSheet.CreateRow(rowResumen)
                        For x As Integer = 0 To dtTempCI.Columns.Count - 1
                            If dtTempCI.Columns(x).ColumnName <> "CCLNT" AndAlso _
                               dtTempCI.Columns(x).ColumnName <> "CTRMNC" AndAlso _
                               dtTempCI.Columns(x).ColumnName <> "NGUIRM" Then
                                posCelda = x + 2
                                '===Estilo===
                                objWorkSheet.GetRow(rowResumen).CreateCell(posCelda).CellStyle = styleCab
                                '===Valores===
                                Dim valorCab As String = dtTempCI.Columns(x).ColumnName.ToString().Trim()
                                objWorkSheet.GetRow(rowResumen).GetCell(posCelda).SetCellValue(valorCab)
                            End If
                        Next
                        rowResumen += 1
                        For i As Integer = 0 To dtTempCI.Rows.Count - 1
                            objWorkSheet.CreateRow(i + rowResumen)
                            For x As Integer = 0 To dtTempCI.Columns.Count - 1
                                If dtTempCI.Columns(x).ColumnName <> "CCLNT" AndAlso _
                                    dtTempCI.Columns(x).ColumnName <> "CTRMNC" AndAlso _
                                    dtTempCI.Columns(x).ColumnName <> "NGUIRM" Then
                                    posCelda = x + 2
                                    cel = dtTempCI.Rows(i).Item(x).ToString().Trim()
                                    If IsNumeric(cel) Then
                                        If cel.Contains(".") Then
                                            objWorkSheet.GetRow(i + rowResumen).CreateCell(posCelda).CellStyle = styleMonto
                                        Else
                                            objWorkSheet.GetRow(i + rowResumen).CreateCell(posCelda).CellStyle = styleNumber
                                        End If
                                        objWorkSheet.GetRow(i + rowResumen).GetCell(posCelda).SetCellValue(Double.Parse(cel.ToString))
                                    Else
                                        objWorkSheet.GetRow(i + rowResumen).CreateCell(posCelda).CellStyle = style
                                        objWorkSheet.GetRow(i + rowResumen).GetCell(posCelda).SetCellValue(cel)
                                    End If
                                End If
                            Next
                        Next
                    End If
                    '===================================================================          
                    indice = addEspacios + rowResumen 'indice
                Next
                objWorkSheet.DefaultRowHeightInPoints = 15
                objWorkSheet.DefaultColumnWidth = 25
                For z As Integer = 0 To odtDetalle.Columns.Count - 1
                    objWorkSheet.AutoSizeColumn(z)
                Next
                Ods.Tables("DT_General").Columns("POR_CI").SetOrdinal(23)
                Ods.Tables("DT_General").Columns("TARIFA_CI").SetOrdinal(24)
                Ods.Tables("DT_General").Columns("TARIFA").SetOrdinal(25)


                If permiso = False Then
                    Ods.Tables("DT_General").Columns.Remove("TARIFA")
                    Ods.Tables("DT_General").Columns.Remove("TARIFA_CI")
                End If
                CreaHojaExcel(objWorkBook, Ods, ClienteRow, CARGOPLAN.TERRESTRE)
                If permiso = True Then
                    CreaHojaExcel(objWorkBook, Ods, ClienteRow, CARGOPLAN.RESUMEN_GENERAL_TERRES)
                End If
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub

    Public Shared Sub ExportExcelPlusPetrol_Aereo_Masivo(ByVal oDs As DataSet, ByVal permiso As Boolean)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            Dim strRutaImagen As String = ""

            Dim oDtClientes As DataTable = oDs.Tables("DT_Clientes")
            Dim oDtResumenMedio As DataTable = oDs.Tables("Dt_ResumenAvion")
            Dim ClienteRow As DataRow

            For Each ClienteRow In oDtClientes.Rows
                If objWorkBook.GetSheetIndex(ClienteRow("TCMPCL")) = -1 Then
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("TCMPCL").ToString.Replace("*", ""))
                Else
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("CCLNT") & "_" & ClienteRow("TCMPCL").ToString.ToString.Replace("*", ""))
                End If
                Dim odtDetalles As New DataTable
                Dim odtFiltro As New DataTable
                Dim odtTotales As New DataTable
                Dim odtResumen As New DataTable

                odtFiltro = filtraReporte_NPOI(oDs.Tables("DT_Filtros").Copy, ClienteRow("CCLNT").ToString)
                odtDetalles = filtraReporte_NPOI(oDs.Tables("DT_Detalle").Copy, ClienteRow("CCLNT").ToString)
                odtResumen = filtraReporte_NPOI(oDs.Tables("DT_Resumen").Copy, ClienteRow("CCLNT").ToString)
                odtTotales = filtraReporte_NPOI(oDs.Tables("DT_Totales").Copy, ClienteRow("CCLNT").ToString)

                Dim NroItem As Integer = 1

                '=============Stilos======================
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                style.WrapText = True
                Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontFiltro.FontHeight = 165

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 165

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 170

                Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
                Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
                Estilos_Excel_NPOI(style, FORMATO.Normal)
                Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
                Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
                Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
                Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
                Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
                '============================================
                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontFiltro)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                styleMontoCI.SetFont(oFont)
                '============================================
                '===========CREAE ATRIBUTOS PARA CARGA DE IMAGENES================
                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                '===================Se cargan Las Variables de Trabajo=====================
                Dim indice As Integer = 0
                Dim rowActual As Integer = 10
                Dim bPrimero As Boolean = True
                Dim strDATO1 As String = ""
                Dim strDATO2 As String = ""
                Dim IndiceColum As Integer = 0
                Dim indiceRowAnt As Integer = 1
                Dim y As Integer = 0 'Posicion Inicial por la Izquierda
                Dim txtFiltro As String = "" 'Valor del filtro en posicion Inicial Actual
                Dim txtFiltro2 As String = "" 'Valor del filtro en posicion Final Actual
        Dim addEspacios As Integer = 6
                Dim rowReinicio As Integer = 0
                Dim tamGrupAct As Integer = 0
                Dim n As Integer = 0
                Dim celda As String = ""
                '---------------Creamos los rows--------------
                Dim txtFiltro_ As String = ""

        For s As Integer = 0 To ((7 * odtFiltro.Rows.Count) + odtDetalles.Rows.Count + oDtResumenMedio.Rows.Count + odtResumen.Rows.Count + (odtFiltro.Rows.Count * 6) + 20)
          objWorkSheet.CreateRow(s)
        Next
                '===================Se Carga El Detalle============================
                Dim valSubPor As String = ""
                Dim posTarifas As Integer = 0
                Dim calcPor As Double = 0D
                Dim calcTarif As Double = 0D
                Dim tempFiltro As New DataTable
                Dim blsalida As Boolean = True
                Dim strPk1 As String = ""
                Dim strPk2 As String = ""
                Dim drSelect As DataRow()
                'Los Filtros debEn de estar Ordenados Por Fechas
                For Each RowFiltro As DataRow In odtFiltro.Rows
                    strPk1 = RowFiltro.Item("CTRMNC").ToString 'NCSOTR
                    strPk2 = RowFiltro.Item("NGUIRM").ToString 'NCRRSR
                    '' Se crear Los Titulos de Los filtros
                    NroItem = 1

                    objWorkSheet.GetRow(indice - 3 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("CARGO_PLAN").ToString()
                    objWorkSheet.GetRow(indice - 3 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 3 + rowActual, 0, indice - 3 + rowActual, 1))


                    objWorkSheet.GetRow(indice - 2 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("OPERACION").ToString()
                    objWorkSheet.GetRow(indice - 2 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 2 + rowActual, 0, indice - 2 + rowActual, 1))

                    '==========Validamos permiso para visualizar cotizacion=========='
                    If permiso = True Then
                        objWorkSheet.GetRow(indice - 2 + rowActual).CreateCell(5).CellStyle = styleFiltro
                        If RowFiltro.Item("TARIFA_MONEDA").ToString() = 0 Then
                            txtFiltro = "TARIFA :  " & RowFiltro.Item("TARIFA_MONTO").ToString()
                        Else
                            If RowFiltro.Item("TARIFA_MONEDA").ToString() = 1 Then
                                txtFiltro = "TARIFA : S/. " & RowFiltro.Item("TARIFA_MONTO").ToString()
                            Else
                                txtFiltro = "TARIFA : USD " & RowFiltro.Item("TARIFA_MONTO").ToString()
                            End If
                        End If
                        objWorkSheet.GetRow(indice - 2 + rowActual).GetCell(5).SetCellValue(txtFiltro)
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 2 + rowActual, 5, indice - 2 + rowActual, 6))
                    End If
                    '================================================================'
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("TITULO_1").ToString()
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5))
                    indice = indice + 1
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("TITULO_2").ToString()
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    Dim Region As New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5)
                    objWorkSheet.AddMergedRegion(Region)

                    indice = indice + 1
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("ESTADO_ENTREGA").ToString()
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5))


                    '=======================CARGAMOS LOGO POR CADA CARGO PLAN==============================
                    Dim anchor As HSSFClientAnchor
                    anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, indice - 1 + rowActual - 5, 0, 0)
                    Dim rutaLogo As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.png"
                    If IO.File.Exists(rutaLogo) Then
                        'load the picture and get the picture index in the workbook
                        Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaLogo, objWorkBook)), HSSFPicture)
                        'Reset the image to the original size.
                        picture.Resize(0.8)
                    End If
                    '================================================================================

                    indice = indice + 1

                    '===Generamos la Cabecera Cada Cambio de Grupo===
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleCab
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(1).CellStyle = styleCab
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(1).SetCellValue("")
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(1).SetCellValue("")
                    IndiceColum = 0


                    Dim ListaColExport As New List(Of String)
                    Dim ListPos As New Hashtable
                    Dim iPosCol As Integer = 0
                    ListaColExport.Add("ITEM")
                    ListaColExport.Add("GUIA_PROV")
                    ListaColExport.Add("PROVEEDOR")
                    ListaColExport.Add("COD_PRODUCTO")
                    ListaColExport.Add("DESCRIPCION")
                    ListaColExport.Add("F_DE_INGRESO")
                    ListaColExport.Add("OC")
                    ListaColExport.Add("LOTE")
                    ListaColExport.Add("GUIA_REMISION")
                    ListaColExport.Add("MEDIO_ENVIO")
                    ListaColExport.Add("KG")
                    ListaColExport.Add("M3")
                    ListaColExport.Add("BUL")
                    ListaColExport.Add("CUENTA_IMPUTACION")
                    ListaColExport.Add("PORCENTAJE")
                    If permiso = True Then
                        ListaColExport.Add("TARIFA_X_CI")
                        ListaColExport.Add("TARIFA")
                    End If
                 
                    y = 2
                    For Each Item As String In ListaColExport
                        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y).CellStyle = styleCab
                        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).SetCellValue(Item)
                        ListPos(Item) = y
                        y = y + 1
                    Next


                    'For j As Integer = 0 To odtDetalles.Columns.Count - 1
                    '    If odtDetalles.Columns(j).ColumnName <> "TCMPCL" AndAlso _
                    '     odtDetalles.Columns(j).ColumnName <> "CCLNT" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "CTRMNC" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "NGUIRM" Then
                    '        y = IndiceColum + 2
                    '        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y).CellStyle = styleCab
                    '        Dim valorCab As String = odtDetalles.Columns(j).ColumnName.ToString().Trim()
                    '        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).SetCellValue(valorCab)
                    '        IndiceColum = IndiceColum + 1
                    '    End If
                    'Next
                    'objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 1).CellStyle = styleCab
                    'objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 1).SetCellValue("PORCENTAJE")
                    'If permiso = True Then 'Columna para TARIFA por permiso
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 2).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 2).SetCellValue("TARIFA X CI")
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 3).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 3).SetCellValue("TARIFA")
                    'End If
                    ''-------------------------------------------------------------------------
                    Dim dtRegistros As DataTable
                    drSelect = odtDetalles.Select("CCLNT = " + ClienteRow("CCLNT").ToString + " and CTRMNC = " + strPk1 + "  and NGUIRM = " + strPk2 + "")
                    dtRegistros = RowToDatatable(drSelect, odtDetalles)
                    Dim RowVacio As Integer
                    If dtRegistros.Rows.Count() = 0 Then
                        RowVacio = indice + rowActual
                    End If

                    Dim dtTempTotal As DataTable
                    dtTempTotal = filtraReporteXPK_NPOI(odtTotales, ClienteRow("CCLNT").ToString, strPk1, strPk2)

                    For Each RowDetalle As DataRow In dtRegistros.Rows
                        'Se llena el Detalle
                        If NroItem = 1 Then
                            rowReinicio = indice + rowActual
                        End If
                        IndiceColum = 0


                        For Each ItemCol As String In ListaColExport

                            If ItemCol = "PORCENTAJE" OrElse ItemCol = "POR_CI" OrElse ItemCol = "TARIFA_X_CI" OrElse ItemCol = "TARIFA" Then
                                Continue For
                            End If
                            iPosCol = ListPos(ItemCol)
                            Select Case ItemCol
                                Case "ITEM"

                                    Dim NroItemVis As String = ""
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        NroItemVis = NroItem.ToString.Trim()
                                    End If
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).SetCellValue(NroItemVis)
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).CellStyle = styleNumber

                                Case "KG"

                                    '===============
                                    'Para el Calculo del Porcentaje
                                    '===============
                                    celda = RowDetalle.Item("KG").ToString().Trim()

                                    posTarifas = dtRegistros.Columns.Count
                                    'evaluamos que el total sea mayor a '0' sino no hace la division
                                    If dtTempTotal.Rows(0).Item("T_KILO") = 0 Then calcPor = 0 Else calcPor = Math.Round(100 * CDbl(celda) / dtTempTotal.Rows(0).Item("T_KILO"), 2) 'Calcula el porcentaje
                                    'Se obtiene el porcentaje de distribucion
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                        valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).SetCellValue(CDbl(celda))
                                        '------------------------------------------------------------------------------------
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("PORCENTAJE")).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("PORCENTAJE")).SetCellValue(calcPor)

                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("POR_CI")).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("POR_CI")).SetCellValue("") '--------para porcentaje CI, cuando lo encuentre abajo lo omitira
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).SetCellValue("") '----------------------pesos vacios
                                        ''------------------------------------------------------------------------------------
                                        valSubPor = RowDetalle.Item("POR_CI")
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("PORCENTAJE")).CellStyle = styleMontoCI
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("PORCENTAJE")).SetCellValue("")
                                        ''------------------------------------------------------------------------------------
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("POR_CI")).CellStyle = styleMontoCI
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("POR_CI")).SetCellValue(CDbl(valSubPor)) '--------para porcentaje CI, cuando lo encuentre abajo lo omitira
                                    End If
                                    '===============
                                    If permiso = True Then
                                        '==============
                                        If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("TARIFA_X_CI")).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("TARIFA_X_CI")).SetCellValue("")
                                            '--------------------------------------------------------------------------------------------------
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("TARIFA")).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("TARIFA")).CellFormula = (calcPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100") '(Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                            '--------------------------------------------------------------------------------------------------
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("TARIFA_X_CI")).CellStyle = styleMontoCI
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("TARIFA_X_CI")).CellFormula = (calcPor & "*" & (valSubPor * 0.01) & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100") '(Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                            '--------------------------------------------------------------------------------------------------
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("TARIFA")).CellStyle = styleMontoCI
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("TARIFA")).SetCellValue("")
                                            '--------------------------------------------------------------------------------------------------
                                        End If
                                        '==============
                                    End If




                                Case "M3"
                                    celda = RowDetalle.Item("M3").ToString().Trim()
                                    If IsNumeric(celda) Then
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).SetCellValue(Convert.ToDouble(celda))
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).SetCellValue(celda)
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).CellStyle = style
                                    End If

                                Case "OC"
                                    celda = RowDetalle.Item("OC").ToString().Trim()
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).SetCellValue(celda)
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).CellStyle = style

                                Case "CUENTA_IMPUTACION"

                                    celda = RowDetalle.Item("CUENTA_IMPUTACION").ToString().Trim()
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).SetCellValue(celda)
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).CellStyle = style

                                Case "COD_PRODUCTO"
                                    celda = RowDetalle.Item("COD_PRODUCTO").ToString().Trim()
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).SetCellValue(celda)
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).CellStyle = style


                                Case Else
                                    celda = RowDetalle.Item(ItemCol).ToString().Trim()
                                    If IsNumeric(celda) Then
                                        If celda.Contains(".") Then
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).SetCellValue(Convert.ToDouble(celda))
                                        ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).CellStyle = style
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).CellStyle = styleNumber
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).SetCellValue(Convert.ToDouble(celda))
                                        End If
                                    Else
                                        If IsDate(celda) Then
                                            celda = String.Format("{0:d}", CDate(celda))
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).CellStyle = styleFecha
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPosCol).SetCellValue(RowDetalle.Item(ItemCol).ToString().Trim())
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPosCol).CellStyle = style
                                        End If
                                    End If
                            End Select

                            'Next

                            'For x As Integer = 0 To dtRegistros.Columns.Count - 1
                            '===Obtenemos el primer Registro como flag                                                                                     
                            'If odtDetalles.Columns(x).ColumnName <> "TCMPCL" AndAlso _
                            ' odtDetalles.Columns(x).ColumnName <> "CCLNT" AndAlso _
                            '   odtDetalles.Columns(x).ColumnName <> "CTRMNC" AndAlso _
                            '    odtDetalles.Columns(x).ColumnName <> "NGUIRM" Then
                            '    y = IndiceColum + 2

                            'If odtDetalles.Columns(x).ColumnName = "ITEM" Then
                            '    Dim NroItemVis As String = ""
                            '    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                            '        NroItemVis = NroItem.ToString.Trim()
                            '    End If
                            '    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(NroItemVis)
                            '    objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = styleNumber
                            'ElseIf odtDetalles.Columns(x).ColumnName = "KG" Then
                            '    '===============
                            '    'Para el Calculo del Porcentaje
                            '    '===============
                            '    celda = RowDetalle.Item("KG").ToString().Trim()

                            '    posTarifas = dtRegistros.Columns.Count
                            '    'evaluamos que el total sea mayor a '0' sino no hace la division
                            '    If dtTempTotal.Rows(0).Item("T_KILO") = 0 Then calcPor = 0 Else calcPor = Math.Round(100 * CDbl(celda) / dtTempTotal.Rows(0).Item("T_KILO"), 2) 'Calcula el porcentaje
                            '    'Se obtiene el porcentaje de distribucion
                            '    If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                            '        valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(CDbl(celda))
                            '        '------------------------------------------------------------------------------------
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas - 2).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas - 2).SetCellValue(calcPor)

                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas - 3).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas - 3).SetCellValue("") '--------para porcentaje CI, cuando lo encuentre abajo lo omitira
                            '    Else
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue("") '----------------------pesos vacios
                            '        ''------------------------------------------------------------------------------------
                            '        valSubPor = RowDetalle.Item("POR_CI")
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas - 2).CellStyle = styleMontoCI
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas - 2).SetCellValue("")
                            '        ''------------------------------------------------------------------------------------
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas - 3).CellStyle = styleMontoCI
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas - 3).SetCellValue(CDbl(valSubPor)) '--------para porcentaje CI, cuando lo encuentre abajo lo omitira
                            '    End If
                            '    '===============
                            '    If permiso = True Then
                            '        '==============
                            '        If IsDBNull(RowDetalle.Item("POR_CI")) Then
                            '            objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas - 1).CellStyle = styleMonto
                            '            objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas - 1).SetCellValue("")
                            '            '--------------------------------------------------------------------------------------------------
                            '            objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas).CellStyle = styleMonto
                            '            objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas).CellFormula = (calcPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100") '(Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                            '            '--------------------------------------------------------------------------------------------------
                            '        Else
                            '            objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas - 1).CellStyle = styleMontoCI
                            '            objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas - 1).CellFormula = (calcPor & "*" & (valSubPor * 0.01) & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100") '(Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                            '            '--------------------------------------------------------------------------------------------------
                            '            objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas).CellStyle = styleMontoCI
                            '            objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas).SetCellValue("")
                            '            '--------------------------------------------------------------------------------------------------
                            '        End If
                            '        '==============
                            '    End If
                            'ElseIf odtDetalles.Columns(x).ColumnName = "M3" Then
                            'celda = RowDetalle.Item(x).ToString().Trim()
                            'If IsNumeric(celda) Then
                            '    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            '    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            'Else
                            '    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
                            '    objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                            'End If
                            '--SE AÑADIO VALIDACIÒN OC 14-01-2013 
                            'ElseIf odtDetalles.Columns(x).ColumnName = "OC" Then
                            'celda = RowDetalle.Item(x).ToString().Trim()
                            'objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
                            'objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                            '--SE AÑADIO VALIDACIÒN CUENTA_IMPUTACION 14-01-2013 
                            'ElseIf odtDetalles.Columns(x).ColumnName = "CUENTA_IMPUTACION" Then
                            'celda = RowDetalle.Item(x).ToString().Trim()
                            'objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
                            'objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style

                            'ElseIf odtDetalles.Columns(x).ColumnName = "COD_PRODUCTO" Then
                            'celda = RowDetalle.Item(x).ToString().Trim()
                            'objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
                            'objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style

                            'Else
                            'If odtDetalles.Columns(x).ColumnName = "POR_CI" Then
                            '    Continue For
                            'End If
                            'celda = RowDetalle.Item(x).ToString().Trim()
                            'If IsNumeric(celda) Then
                            '    If celda.Contains(".") Then
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            '    ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                            '    Else
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            '    End If
                            'Else
                            '    If IsDate(celda) Then
                            '        celda = String.Format("{0:d}", CDate(celda))
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                            '    Else
                            '        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(RowDetalle.Item(x).ToString().Trim())
                            '        objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                            '    End If
                            'End If
                            'End If
                            'IndiceColum = IndiceColum + 1
                            'End If
                        Next
                        'NroItem = NroItem + 1
                        'If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Para los detalles Generales saltando cuando se pinte el subdetalle
                        '    NroItem += 1
                        'End If
                        indice += 1
                    Next
                    'Crea Los Totales
                    If dtRegistros.Rows.Count = 0 Then
                        txtFiltro2 = "0"
                    End If
                    'Filtramos los totales antes de pintar el detalle

                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(7).CellStyle = style
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(7).SetCellValue("TOTAL")
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("KG") - 1).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("KG") - 1).SetCellValue("TOTAL")

                    'ListPos
                    If dtTempTotal.Rows.Count > 0 Then
                        txtFiltro2 = dtTempTotal.Rows(0).Item("T_KILO").ToString()
                    End If
                    If txtFiltro2 = "" Then txtFiltro2 = "0"
                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(10).CellStyle = styleMonto
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(10).SetCellValue(Convert.ToDouble(txtFiltro2))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("KG")).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("KG")).SetCellValue(Convert.ToDouble(txtFiltro2))

                    If dtTempTotal.Rows.Count > 0 Then
                        txtFiltro2 = dtTempTotal.Rows(0).Item("T_M3").ToString()
                    End If
                    If txtFiltro2 = "" Then txtFiltro2 = "0"
                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(11).CellStyle = styleMonto
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(11).SetCellValue(Convert.ToDouble(txtFiltro2))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("M3")).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("M3")).SetCellValue(Convert.ToDouble(txtFiltro2))
                    If dtTempTotal.Rows.Count > 0 Then
                        txtFiltro2 = dtTempTotal.Rows(0).Item("T_BULTO").ToString()
                    End If
                    If txtFiltro2 = "" Then txtFiltro2 = "0"
                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(12).CellStyle = styleNumber
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(12).SetCellValue(Convert.ToInt64(txtFiltro2))

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(ListPos("BUL")).CellStyle = styleNumber
                    objWorkSheet.GetRow(indice + rowActual).GetCell(ListPos("BUL")).SetCellValue(Convert.ToInt64(txtFiltro2))

                    indice += 1

                    '' Inserta el Resumen en el Excel.                                                                                             
                    indice = indice + 2
                    Dim tblResumen As DataTable
                    drSelect = odtResumen.Select("CCLNT = '" + ClienteRow("CCLNT").ToString.Trim + "' and CTRMNC = '" + strPk1.Trim + "' and NGUIRM = '" + strPk2.Trim + "'")
                    tblResumen = RowToDatatable(drSelect, odtResumen)

                    For z As Integer = 0 To tblResumen.Rows.Count - 1 '                                                                            
                        IndiceColum = 4
                        For x As Integer = 0 To tblResumen.Columns.Count - 1
                            If tblResumen.Columns(x).ColumnName <> "CCLNT" AndAlso _
                            tblResumen.Columns(x).ColumnName <> "CTRMNC" AndAlso _
                               tblResumen.Columns(x).ColumnName <> "NGUIRM" Then
                                y = IndiceColum + 5
                                celda = tblResumen.Rows(z).Item(x).ToString().Trim()
                                If IsNumeric(celda) Then
                                    If x = 6 Then
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToInt64(celda))
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                    End If

                                Else
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(tblResumen.Rows(z).Item(x).ToString().Trim())
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                                End If
                                IndiceColum = IndiceColum + 1
                            End If
                        Next
                        indice += 1
                    Next

                    indice = indice + addEspacios
                    Try
                        If dtRegistros.Rows.Count = 0 Then
                            rowReinicio = RowVacio
                        End If
                        objWorkSheet.GetRow(rowReinicio).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowReinicio).CreateCell(1).CellStyle = style
                        txtFiltro_ = RowFiltro.Item("FECHA").ToString()
                        objWorkSheet.GetRow(rowReinicio).GetCell(0).SetCellValue("FECHA :")
                        objWorkSheet.GetRow(rowReinicio).GetCell(1).SetCellValue(txtFiltro_.Trim)

                        objWorkSheet.GetRow(rowReinicio + 1).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowReinicio + 1).CreateCell(1).CellStyle = style
                        txtFiltro_ = RowFiltro.Item("ORIGEN").ToString()
                        objWorkSheet.GetRow(rowReinicio + 1).GetCell(0).SetCellValue("ORIGEN :")
                        objWorkSheet.GetRow(rowReinicio + 1).GetCell(1).SetCellValue(txtFiltro_.Trim)

                        objWorkSheet.GetRow(rowReinicio + 2).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowReinicio + 2).CreateCell(1).CellStyle = style
                        txtFiltro_ = RowFiltro.Item("DESTINO").ToString()
                        objWorkSheet.GetRow(rowReinicio + 2).GetCell(0).SetCellValue("DESTINO :")
                        objWorkSheet.GetRow(rowReinicio + 2).GetCell(1).SetCellValue(txtFiltro_.Trim)

                        style.WrapText = True
                        objWorkSheet.GetRow(rowReinicio + 3).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowReinicio + 3).CreateCell(1).CellStyle = style
                        txtFiltro_ = RowFiltro.Item("MEDIO").ToString()
                        objWorkSheet.GetRow(rowReinicio + 3).GetCell(0).SetCellValue("MEDIO :")
                        objWorkSheet.GetRow(rowReinicio + 3).GetCell(1).SetCellValue(txtFiltro_.Trim)
                    Catch ex As Exception

                    End Try
                Next
                indice = indice + 1

                ''===Generamos la Cabecera Cada Cambio de Grupo===
                IndiceColum = 0
                y = 0

                For j As Integer = 0 To oDtResumenMedio.Columns.Count - 1
                    y = IndiceColum + 6
                    If oDtResumenMedio.Columns(j).ColumnName <> "CCLNT" Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleCab
                        Dim valorCab As String = oDtResumenMedio.Columns(j).ColumnName.ToString().Trim()
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(valorCab)
                        IndiceColum += 1
                    End If
                Next
                indice += 1

                Dim flgInicioResumen As Integer = indice + rowActual
                Dim TotalViaje As Int64 = 0
                For z As Integer = 0 To oDtResumenMedio.Rows.Count - 1 '
                    If ClienteRow("CCLNT").ToString = oDtResumenMedio.Rows(z).Item("CCLNT").ToString Then
                        IndiceColum = 0
                        For x As Integer = 0 To oDtResumenMedio.Columns.Count - 1 '
                            If oDtResumenMedio.Columns(x).ColumnName <> "CCLNT" Then
                                y = IndiceColum + 6
                                celda = oDtResumenMedio.Rows(z).Item(x).ToString().Trim()
                                If IsNumeric(celda) Then
                                    If x = 2 Then
                                        TotalViaje = TotalViaje + Convert.ToInt64(celda)
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToInt64(celda))
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                    End If
                                Else
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(oDtResumenMedio.Rows(z).Item(x).ToString().Trim())
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                                End If
                                IndiceColum = IndiceColum + 1
                            End If
                        Next
                        indice += 1
                    End If
                Next
                indice += 1

                objWorkSheet.GetRow(indice + rowActual).CreateCell(6).CellStyle = styleCab
                objWorkSheet.GetRow(indice + rowActual).GetCell(6).SetCellValue("TOTALES")

                Dim formula As String = ""
                'formula = "SUM(" & LetraNumero_NPOI(7) & (flgInicioResumen).ToString & ":" & LetraNumero_NPOI(7) & (indice + rowActual - 1).ToString & ")"

                If oDtResumenMedio.Rows.Count = 0 Then TotalViaje = 0
                objWorkSheet.GetRow(indice + rowActual).CreateCell(7).CellStyle = styleNumber
                objWorkSheet.GetRow(indice + rowActual).GetCell(7).SetCellValue(TotalViaje)
                'objWorkSheet.GetRow(indice + rowActual).GetCell(6).CellFormula = (formula)

                formula = "SUM(" & LetraNumero_NPOI(8) & (flgInicioResumen).ToString & ":" & LetraNumero_NPOI(8) & (indice + rowActual - 1).ToString & ")"
                If oDtResumenMedio.Rows.Count = 0 Then formula = "0"
                objWorkSheet.GetRow(indice + rowActual).CreateCell(8).CellStyle = styleMonto
                objWorkSheet.GetRow(indice + rowActual).GetCell(8).CellFormula = (formula)

                objWorkSheet.DefaultRowHeightInPoints = 25
                objWorkSheet.DefaultColumnWidth = 25

                For z As Integer = 0 To odtDetalles.Columns.Count - 1

                    If z <> 1 Then
                        objWorkSheet.AutoSizeColumn(z)
                    End If
                Next
                If permiso = False Then
                    oDs.Tables("DT_General").Columns.Remove("TARIFA_CI")
                    oDs.Tables("DT_General").Columns.Remove("TARIFA")
                End If
                CreaHojaExcel(objWorkBook, oDs, ClienteRow, CARGOPLAN.AEREO)
                If permiso = True Then
                    CreaHojaExcel(objWorkBook, oDs, ClienteRow, CARGOPLAN.RESUMEN_GENERAL_AEREO)
                End If

            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try
    End Sub
    ''GASTON
    Public Shared Sub ExportExcelPlusPetrol_Aereo_Masivo_Plus(ByVal oDs As DataSet, ByVal permiso As Boolean)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            Dim strRutaImagen As String = ""

            Dim oDtClientes As DataTable = oDs.Tables("DT_Clientes")
            Dim oDtResumenMedio As DataTable = oDs.Tables("Dt_ResumenAvion")
            Dim ClienteRow As DataRow

            For Each ClienteRow In oDtClientes.Rows
                If objWorkBook.GetSheetIndex(ClienteRow("TCMPCL")) = -1 Then
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("TCMPCL").ToString.Replace("*", ""))
                Else
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("CCLNT") & "_" & ClienteRow("TCMPCL").ToString.ToString.Replace("*", ""))
                End If
                Dim odtDetalles As New DataTable
                Dim odtFiltro As New DataTable
                Dim odtTotales As New DataTable
                Dim odtResumen As New DataTable

                odtFiltro = filtraReporte_NPOI(oDs.Tables("DT_Filtros").Copy, ClienteRow("CCLNT").ToString)
                odtDetalles = filtraReporte_NPOI(oDs.Tables("DT_Detalle").Copy, ClienteRow("CCLNT").ToString)
                odtResumen = filtraReporte_NPOI(oDs.Tables("DT_Resumen").Copy, ClienteRow("CCLNT").ToString)
                odtTotales = filtraReporte_NPOI(oDs.Tables("DT_Totales").Copy, ClienteRow("CCLNT").ToString)

                Dim NroItem As Integer = 1

                '=============Stilos======================
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                style.WrapText = True
                Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontFiltro.FontHeight = 165

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 165

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 170

                Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
                Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
                Estilos_Excel_NPOI(style, FORMATO.Normal)
                Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
                Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
                Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
                Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
                Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
                '============================================
                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontFiltro)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                styleMontoCI.SetFont(oFont)
                '============================================
                '===========CREAE ATRIBUTOS PARA CARGA DE IMAGENES================
                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                '===================Se cargan Las Variables de Trabajo=====================
                Dim indice As Integer = 0
                Dim rowActual As Integer = 10
                Dim bPrimero As Boolean = True
                Dim strDATO1 As String = ""
                Dim strDATO2 As String = ""
                Dim IndiceColum As Integer = 0
                Dim indiceRowAnt As Integer = 1
                Dim y As Integer = 0 'Posicion Inicial por la Izquierda
                Dim txtFiltro As String = "" 'Valor del filtro en posicion Inicial Actual
                Dim txtFiltro2 As String = "" 'Valor del filtro en posicion Final Actual
                Dim addEspacios As Integer = 6
                Dim rowReinicio As Integer = 0
                Dim tamGrupAct As Integer = 0
                Dim n As Integer = 0
                Dim celda As String = ""
                '---------------Creamos los rows--------------
                Dim txtFiltro_ As String = ""

                For s As Integer = 0 To ((7 * odtFiltro.Rows.Count) + odtDetalles.Rows.Count + oDtResumenMedio.Rows.Count + odtResumen.Rows.Count + (odtFiltro.Rows.Count * 6) + 20)
                    objWorkSheet.CreateRow(s)
                Next
                '===================Se Carga El Detalle============================
                Dim valSubPor As String = ""
                Dim posTarifas As Integer = 0
                Dim calcPor As Double = 0D
                Dim calcTarif As Double = 0D
                Dim tempFiltro As New DataTable
                Dim blsalida As Boolean = True
                Dim strPk1 As String = ""
                Dim strPk2 As String = ""
                Dim drSelect As DataRow()
                Dim celAdd As Int32 = 0 '' celda que inicializa contador para la agregacion de columnas (CUENTA_MAYOR,CENTR_COSTE,ELEMENTO_PEP,ORDEN,GRAFO) al final
                'Los Filtros debEn de estar Ordenados Por Fechas
                For Each RowFiltro As DataRow In odtFiltro.Rows
                    strPk1 = RowFiltro.Item("CTRMNC").ToString 'NCSOTR
                    strPk2 = RowFiltro.Item("NGUIRM").ToString 'NCRRSR
                    '' Se crear Los Titulos de Los filtros
                    NroItem = 1

                    objWorkSheet.GetRow(indice - 3 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("CARGO_PLAN").ToString()
                    objWorkSheet.GetRow(indice - 3 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 3 + rowActual, 0, indice - 3 + rowActual, 1))


                    objWorkSheet.GetRow(indice - 2 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("OPERACION").ToString()
                    objWorkSheet.GetRow(indice - 2 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 2 + rowActual, 0, indice - 2 + rowActual, 1))

                    '==========Validamos permiso para visualizar cotizacion=========='
                    If permiso = True Then
                        objWorkSheet.GetRow(indice - 2 + rowActual).CreateCell(5).CellStyle = styleFiltro
                        If RowFiltro.Item("TARIFA_MONEDA").ToString() = 0 Then
                            txtFiltro = "TARIFA :  " & RowFiltro.Item("TARIFA_MONTO").ToString()
                        Else
                            If RowFiltro.Item("TARIFA_MONEDA").ToString() = 1 Then
                                txtFiltro = "TARIFA : S/. " & RowFiltro.Item("TARIFA_MONTO").ToString()
                            Else
                                txtFiltro = "TARIFA : USD " & RowFiltro.Item("TARIFA_MONTO").ToString()
                            End If
                        End If
                        objWorkSheet.GetRow(indice - 2 + rowActual).GetCell(5).SetCellValue(txtFiltro)
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 2 + rowActual, 5, indice - 2 + rowActual, 6))
                    End If
                    '================================================================'
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("TITULO_1").ToString()
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5))
                    indice = indice + 1
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("TITULO_2").ToString()
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    Dim Region As New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5)
                    objWorkSheet.AddMergedRegion(Region)

                    indice = indice + 1
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = RowFiltro.Item("ESTADO_ENTREGA").ToString()
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5))


                    '=======================CARGAMOS LOGO POR CADA CARGO PLAN==============================
                    Dim anchor As HSSFClientAnchor
                    anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, indice - 1 + rowActual - 5, 0, 0)
                    Dim rutaLogo As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.png"
                    If IO.File.Exists(rutaLogo) Then
                        'load the picture and get the picture index in the workbook
                        Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaLogo, objWorkBook)), HSSFPicture)
                        'Reset the image to the original size.
                        picture.Resize(0.8)
                    End If
                    '================================================================================

                    indice = indice + 1

                    '===Generamos la Cabecera Cada Cambio de Grupo===
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleCab
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(1).CellStyle = styleCab
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(1).SetCellValue("")
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(1).SetCellValue("")
                    'IndiceColum = 0

                    Dim ColumnaPos As New Hashtable
                    Dim ListaColExport As New List(Of String)
                    Dim iPostCol As Integer = 0

                    Dim iPosCol As Integer = 0
                    ListaColExport.Add("ITEM")
                    ListaColExport.Add("GUIA_PROV")
                    ListaColExport.Add("PROVEEDOR")
                    ListaColExport.Add("COD_PRODUCTO")
                    ListaColExport.Add("DESCRIPCION")
                    ListaColExport.Add("F_DE_INGRESO")
                    ListaColExport.Add("OC")
                    ListaColExport.Add("LOTE")
                    ListaColExport.Add("GUIA_REMISION")
                    ListaColExport.Add("MEDIO_ENVIO")
                    ListaColExport.Add("KG")
                    ListaColExport.Add("M3")
                    ListaColExport.Add("BUL")
                    ListaColExport.Add("CUENTA_IMPUTACION")
                    ListaColExport.Add("POR_CI")
                    ListaColExport.Add("PORCENTAJE")

                    If permiso = True Then
                        ListaColExport.Add("TARIFA_X_CI")
                        ListaColExport.Add("TARIFA")
                        ListaColExport.Add("CUENTA_MAYOR")
                        ListaColExport.Add("CENTRO_COSTE")
                        ListaColExport.Add("ELEMENTO_PEP")
                        ListaColExport.Add("ORDEN")
                        ListaColExport.Add("GRAFO")
                        ListaColExport.Add("SIN_CUENTA")
                    Else
                        ListaColExport.Add("CUENTA_MAYOR")
                        ListaColExport.Add("CENTRO_COSTE")
                        ListaColExport.Add("ELEMENTO_PEP")
                        ListaColExport.Add("ORDEN")
                        ListaColExport.Add("GRAFO")
                        ListaColExport.Add("SIN_CUENTA")
                    End If


                    y = 2
                    For Each ItemCol As String In ListaColExport
                        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y).CellStyle = styleCab
                        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).SetCellValue(ItemCol)
                        ColumnaPos(ItemCol) = y
                        y = y + 1
                    Next



                    'For j As Integer = 0 To odtDetalles.Columns.Count - 1
                    '    If odtDetalles.Columns(j).ColumnName <> "TCMPCL" AndAlso _
                    '     odtDetalles.Columns(j).ColumnName <> "CCLNT" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "CTRMNC" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "NGUIRM" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "CUENTA_MAYOR" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "CENTRO_COSTE" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "ELEMENTO_PEP" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "ORDEN" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "GRAFO" AndAlso _
                    '        odtDetalles.Columns(j).ColumnName <> "SIN_CUENTA" Then

                    '        y = IndiceColum + 2
                    '        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y).CellStyle = styleCab
                    '        Dim valorCab As String = odtDetalles.Columns(j).ColumnName.ToString().Trim()
                    '        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).SetCellValue(valorCab)
                    '        IndiceColum = IndiceColum + 1

                    '        ColumnaPos(valorCab) = y
                    '    End If
                    'Next
                    'objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 1).CellStyle = styleCab
                    'objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 1).SetCellValue("PORCENTAJE")

                    'ColumnaPos("PORCENTAJE") = y + 1


                    'If permiso = True Then 'Columna para TARIFA por permiso
                    '    celAdd = 19
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 2).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 2).SetCellValue("TARIFA X CI")

                    '    ColumnaPos("TARIFA X CI") = y + 2

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 3).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 3).SetCellValue("TARIFA")

                    '    ColumnaPos("TARIFA") = y + 3

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 4).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 4).SetCellValue("CUENTA_MAYOR")

                    '    ColumnaPos("CUENTA_MAYOR") = y + 4

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 5).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 5).SetCellValue("CENTRO_COSTE")

                    '    ColumnaPos("CENTRO_COSTE") = y + 5

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 6).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 6).SetCellValue("ELEMENTO_PEP")

                    '    ColumnaPos("ELEMENTO_PEP") = y + 6

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 7).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 7).SetCellValue("ORDEN")

                    '    ColumnaPos("ORDEN") = y + 7

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 8).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 8).SetCellValue("GRAFO")

                    '    ColumnaPos("GRAFO") = y + 8

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 9).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 9).SetCellValue("SIN_CUENTA")

                    '    ColumnaPos("SIN_CUENTA") = y + 9

                    'Else
                    '    celAdd = 17
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 2).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 2).SetCellValue("CUENTA_MAYOR")

                    '    ColumnaPos("CUENTA_MAYOR") = y + 2

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 3).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 3).SetCellValue("CENTRO_COSTE")

                    '    ColumnaPos("CENTRO_COSTE") = y + 3

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 4).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 4).SetCellValue("ELEMENTO_PEP")

                    '    ColumnaPos("ELEMENTO_PEP") = y + 4

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 5).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 5).SetCellValue("ORDEN")

                    '    ColumnaPos("ORDEN") = y + 5

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 6).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 6).SetCellValue("GRAFO")

                    '    ColumnaPos("GRAFO") = y + 6

                    '    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y + 7).CellStyle = styleCab
                    '    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y + 7).SetCellValue("SIN_CUENTA")

                    '    ColumnaPos("SIN_CUENTA") = y + 7

                    'End If
                    ''-------------------------------------------------------------------------
                    Dim dtRegistros As DataTable
                    drSelect = odtDetalles.Select("CCLNT = " + ClienteRow("CCLNT").ToString + " and CTRMNC = " + strPk1 + "  and NGUIRM = " + strPk2 + "")
                    dtRegistros = RowToDatatable(drSelect, odtDetalles)
                    Dim RowVacio As Integer
                    If dtRegistros.Rows.Count() = 0 Then
                        RowVacio = indice + rowActual
                    End If

                    Dim dtTempTotal As DataTable
                    dtTempTotal = filtraReporteXPK_NPOI(odtTotales, ClienteRow("CCLNT").ToString, strPk1, strPk2)



                    For Each RowDetalle As DataRow In dtRegistros.Rows
                        'Se llena el Detalle
                        If NroItem = 1 Then
                            rowReinicio = indice + rowActual
                        End If
                        'IndiceColum = 0

                        For Each ItemCol As String In ListaColExport

                            iPostCol = ColumnaPos(ItemCol)
                            'Next

                            'For x As Integer = 0 To dtRegistros.Columns.Count - 1
                            '===Obtenemos el primer Registro como flag                                                                                     
                            'If odtDetalles.Columns(x).ColumnName <> "TCMPCL" AndAlso _
                            ' odtDetalles.Columns(x).ColumnName <> "CCLNT" AndAlso _
                            '   odtDetalles.Columns(x).ColumnName <> "CTRMNC" AndAlso _
                            '    odtDetalles.Columns(x).ColumnName <> "NGUIRM" Then
                            'y = IndiceColum + 2

                            'Dim colum As String = odtDetalles.Columns(x).ColumnName
                            'Dim colum As String = ItemCol
                            Select Case ItemCol
                                Case "PORCENTAJE", "POR_CI", "TARIFA", "TARIFA_X_CI", "PORCENTAJE"
                                    Continue For
                                Case "ITEM"
                                    Dim NroItemVis As String = ""
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        NroItemVis = NroItem.ToString.Trim()
                                    End If
                                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(NroItemVis)
                                    'objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = styleNumber
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(NroItemVis)
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = styleNumber
                                    'Exit Select
                                Case "KG"
                                    '===============
                                    'Para el Calculo del Porcentaje
                                    '===============
                                    celda = RowDetalle.Item("KG").ToString().Trim()

                                    posTarifas = dtRegistros.Columns.Count
                                    'evaluamos que el total sea mayor a '0' sino no hace la division
                                    If dtTempTotal.Rows(0).Item("T_KILO") = 0 Then calcPor = 0 Else calcPor = Math.Round(100 * CDbl(celda) / dtTempTotal.Rows(0).Item("T_KILO"), 2) 'Calcula el porcentaje
                                    'Se obtiene el porcentaje de distribucion
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                        valSubPor = 1 'Si no existe se neutraliza la multiplicacion
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).SetCellValue(CDbl(celda))
                                        '------------------------------------------------------------------------------------
                                        'objWorkSheet.GetRow(indice + rowActual).CreateCell(16).CellStyle = styleMonto
                                        'objWorkSheet.GetRow(indice + rowActual).GetCell(16).SetCellValue(calcPor)

                                        'objWorkSheet.GetRow(indice + rowActual).CreateCell(15).CellStyle = styleMonto
                                        'objWorkSheet.GetRow(indice + rowActual).GetCell(15).SetCellValue("") '--------para porcentaje CI, cuando lo encuentre abajo lo omitira

                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("PORCENTAJE")).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("PORCENTAJE")).SetCellValue(calcPor)

                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("POR_CI")).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("POR_CI")).SetCellValue("") '--------para porcentaje CI, cuando lo encuentre abajo lo omitira

                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).SetCellValue("") '----------------------pesos vacios
                                        ''------------------------------------------------------------------------------------
                                        valSubPor = RowDetalle.Item("POR_CI")
                                        'objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas - 2).CellStyle = styleMontoCI
                                        'objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas - 2).SetCellValue("")
                                        ' ''------------------------------------------------------------------------------------
                                        'objWorkSheet.GetRow(indice + rowActual).CreateCell(posTarifas - 3).CellStyle = styleMontoCI
                                        'objWorkSheet.GetRow(indice + rowActual).GetCell(posTarifas - 3).SetCellValue(CDbl(valSubPor)) '--------para porcentaje CI, cuando lo encuentre abajo lo omitira

                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("PORCENTAJE")).CellStyle = styleMontoCI
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("PORCENTAJE")).SetCellValue("")
                                        ''------------------------------------------------------------------------------------
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("POR_CI")).CellStyle = styleMontoCI
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("POR_CI")).SetCellValue(CDbl(valSubPor)) '--------para porcentaje CI, cuando lo encuentre abajo lo omitira


                                    End If
                                    '===============
                                    If permiso = True Then
                                        '==============
                                        If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                            'objWorkSheet.GetRow(indice + rowActual).CreateCell(17).CellStyle = styleMonto
                                            'objWorkSheet.GetRow(indice + rowActual).GetCell(17).SetCellValue("")
                                            ''--------------------------------------------------------------------------------------------------
                                            'objWorkSheet.GetRow(indice + rowActual).CreateCell(18).CellStyle = styleMonto
                                            'objWorkSheet.GetRow(indice + rowActual).GetCell(18).CellFormula = (calcPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100") '(Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                            ''--------------------------------------------------------------------------------------------------

                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("TARIFA_X_CI")).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("TARIFA_X_CI")).SetCellValue("")
                                            '--------------------------------------------------------------------------------------------------
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("TARIFA")).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("TARIFA")).CellFormula = (calcPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100") '(Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                            '--------------------------------------------------------------------------------------------------


                                         

                                        Else
                                            'objWorkSheet.GetRow(indice + rowActual).CreateCell(17).CellStyle = styleMontoCI
                                            'objWorkSheet.GetRow(indice + rowActual).GetCell(17).CellFormula = (calcPor & "*" & (valSubPor * 0.01) & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100") '(Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                            ''--------------------------------------------------------------------------------------------------
                                            'objWorkSheet.GetRow(indice + rowActual).CreateCell(18).CellStyle = styleMontoCI
                                            'objWorkSheet.GetRow(indice + rowActual).GetCell(18).SetCellValue("")
                                            ''--------------------------------------------------------------------------------------------------

                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("TARIFA_X_CI")).CellStyle = styleMontoCI
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("TARIFA_X_CI")).CellFormula = (calcPor & "*" & (valSubPor * 0.01) & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100") '(Convert.ToDouble(celda) & "*" & valSubPor & "*" & RowFiltro.Item("TARIFA_MONTO") & "/100")
                                            '--------------------------------------------------------------------------------------------------
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("TARIFA")).CellStyle = styleMontoCI
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("TARIFA")).SetCellValue("")
                                            '--------------------------------------------------------------------------------------------------

                                        End If
                                        '==============
                                    End If
                                    'Exit Select
                                Case "M3"
                                    celda = RowDetalle.Item("M3").ToString().Trim()
                                    If IsNumeric(celda) Then
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).SetCellValue(Convert.ToDouble(celda))
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style
                                    End If
                                    'Exit Select
                                    'Case "OC"
                                    '    celda = RowDetalle.Item("OC").ToString().Trim()
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style
                                    'Exit Select
                                    'Case "CUENTA_IMPUTACION"
                                    '    celda = RowDetalle.Item("CUENTA_IMPUTACION").ToString().Trim()
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style
                                    '    Exit Select
                                    'Case "COD_PRODUCTO"
                                    '    celda = RowDetalle.Item("COD_PRODUCTO").ToString().Trim()
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style
                                    '    Exit Select
                                    'Case "POR_CI"
                                    '    Continue For
                                    'Case "CUENTA_MAYOR"
                                    '    celda = RowDetalle.Item("CUENTA_MAYOR").ToString().Trim()
                                    '    'objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd).SetCellValue(celda)
                                    '    'objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd).CellStyle = style

                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style



                                    '    'Exit Select
                                    'Case "CENTRO_COSTE"
                                    '    celda = RowDetalle.Item("CENTRO_COSTE").ToString().Trim()
                                    '    'objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 1).SetCellValue(celda)
                                    '    'objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 1).CellStyle = style

                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style

                                    'Exit Select
                                    'Case "ELEMENTO_PEP"
                                    '    celda = RowDetalle.Item("ELEMENTO_PEP").ToString().Trim()
                                    '    'objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 2).SetCellValue(celda)
                                    '    'objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 2).CellStyle = style

                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style
                                    'Exit Select
                                    'Case "ORDEN"
                                    '    celda = RowDetalle.Item("ORDEN").ToString().Trim()
                                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 3).SetCellValue(celda)
                                    'objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 3).CellStyle = style
                                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    'objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style
                                    'Exit Select
                                Case "GRAFO", "SIN_CUENTA", "ORDEN", "ELEMENTO_PEP", "CENTRO_COSTE", "CUENTA_MAYOR", "COD_PRODUCTO", "CUENTA_IMPUTACION"
                                    celda = RowDetalle.Item(ItemCol).ToString().Trim()
                                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 4).SetCellValue(celda)
                                    'objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 4).CellStyle = style

                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style

                                    'Exit Select

                                    'Nueva Columna Sin Cuenta
                                    'Case "SIN_CUENTA"
                                    '    celda = RowDetalle.Item("SIN_CUENTA").ToString().Trim()
                                    '    'objWorkSheet.GetRow(indice + rowActual).CreateCell(celAdd + 5).SetCellValue(celda)
                                    '    'objWorkSheet.GetRow(indice + rowActual).GetCell(celAdd + 5).CellStyle = style
                                    '    objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    '    objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style
                                    '    'Exit Select


                                Case Else
                                    celda = RowDetalle.Item(ItemCol).ToString().Trim()
                                    If IsNumeric(celda) Then
                                        If celda.Contains(".") Then
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).SetCellValue(Convert.ToDouble(celda))
                                        ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).CellStyle = style
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).CellStyle = styleNumber
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).SetCellValue(Convert.ToDouble(celda))
                                        End If
                                    Else
                                        If IsDate(celda) Then
                                            celda = String.Format("{0:d}", CDate(celda))
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).CellStyle = styleFecha
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(iPostCol).SetCellValue(RowDetalle.Item(ItemCol).ToString().Trim())
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(iPostCol).CellStyle = style
                                        End If
                                    End If
                            End Select
                            'IndiceColum = IndiceColum + 1
                            'End If
                        Next
                        NroItem = NroItem + 1
                        'If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Para los detalles Generales saltando cuando se pinte el subdetalle
                        '    NroItem += 1
                        'End If
                        indice += 1
                    Next
                    'Crea Los Totales
                    If dtRegistros.Rows.Count = 0 Then
                        txtFiltro2 = "0"
                    End If
                    'Filtramos los totales antes de pintar el detalle

                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(7).CellStyle = style
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(7).SetCellValue("TOTAL")

                    objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("KG") - 1).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("KG") - 1).SetCellValue("TOTAL")

                    'ColumnaPos
                    If dtTempTotal.Rows.Count > 0 Then
                        txtFiltro2 = dtTempTotal.Rows(0).Item("T_KILO").ToString()
                    End If
                    If txtFiltro2 = "" Then txtFiltro2 = "0"
                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(10).CellStyle = styleMonto
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(10).SetCellValue(Convert.ToDouble(txtFiltro2))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("KG")).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("KG")).SetCellValue(Convert.ToDouble(txtFiltro2))
                    If dtTempTotal.Rows.Count > 0 Then
                        txtFiltro2 = dtTempTotal.Rows(0).Item("T_M3").ToString()
                    End If
                    If txtFiltro2 = "" Then txtFiltro2 = "0"
                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(11).CellStyle = styleMonto
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(11).SetCellValue(Convert.ToDouble(txtFiltro2))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("M3")).CellStyle = styleMonto
                    objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("M3")).SetCellValue(Convert.ToDouble(txtFiltro2))
                    If dtTempTotal.Rows.Count > 0 Then
                        txtFiltro2 = dtTempTotal.Rows(0).Item("T_BULTO").ToString()
                    End If
                    If txtFiltro2 = "" Then txtFiltro2 = "0"
                    'objWorkSheet.GetRow(indice + rowActual).CreateCell(12).CellStyle = styleNumber
                    'objWorkSheet.GetRow(indice + rowActual).GetCell(12).SetCellValue(Convert.ToInt64(txtFiltro2))
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(ColumnaPos("BUL")).CellStyle = styleNumber
                    objWorkSheet.GetRow(indice + rowActual).GetCell(ColumnaPos("BUL")).SetCellValue(Convert.ToInt64(txtFiltro2))
                    indice += 1

                    '' Inserta el Resumen en el Excel.                                                                                             
                    indice = indice + 2
                    Dim tblResumen As DataTable
                    drSelect = odtResumen.Select("CCLNT = '" + ClienteRow("CCLNT").ToString.Trim + "' and CTRMNC = '" + strPk1.Trim + "' and NGUIRM = '" + strPk2.Trim + "'")
                    tblResumen = RowToDatatable(drSelect, odtResumen)

                    For z As Integer = 0 To tblResumen.Rows.Count - 1 '                                                                            
                        IndiceColum = 4
                        For x As Integer = 0 To tblResumen.Columns.Count - 1
                            If tblResumen.Columns(x).ColumnName <> "CCLNT" AndAlso _
                            tblResumen.Columns(x).ColumnName <> "CTRMNC" AndAlso _
                               tblResumen.Columns(x).ColumnName <> "NGUIRM" Then
                                y = IndiceColum + 5
                                celda = tblResumen.Rows(z).Item(x).ToString().Trim()
                                If IsNumeric(celda) Then
                                    If x = 6 Then
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToInt64(celda))
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                    End If

                                Else
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(tblResumen.Rows(z).Item(x).ToString().Trim())
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                                End If
                                IndiceColum = IndiceColum + 1
                            End If
                        Next
                        indice += 1
                    Next

                    indice = indice + addEspacios
                    Try
                        If dtRegistros.Rows.Count = 0 Then
                            rowReinicio = RowVacio
                        End If
                        objWorkSheet.GetRow(rowReinicio).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowReinicio).CreateCell(1).CellStyle = style
                        txtFiltro_ = RowFiltro.Item("FECHA").ToString()
                        objWorkSheet.GetRow(rowReinicio).GetCell(0).SetCellValue("FECHA :")
                        objWorkSheet.GetRow(rowReinicio).GetCell(1).SetCellValue(txtFiltro_.Trim)

                        objWorkSheet.GetRow(rowReinicio + 1).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowReinicio + 1).CreateCell(1).CellStyle = style
                        txtFiltro_ = RowFiltro.Item("ORIGEN").ToString()
                        objWorkSheet.GetRow(rowReinicio + 1).GetCell(0).SetCellValue("ORIGEN :")
                        objWorkSheet.GetRow(rowReinicio + 1).GetCell(1).SetCellValue(txtFiltro_.Trim)

                        objWorkSheet.GetRow(rowReinicio + 2).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowReinicio + 2).CreateCell(1).CellStyle = style
                        txtFiltro_ = RowFiltro.Item("DESTINO").ToString()
                        objWorkSheet.GetRow(rowReinicio + 2).GetCell(0).SetCellValue("DESTINO :")
                        objWorkSheet.GetRow(rowReinicio + 2).GetCell(1).SetCellValue(txtFiltro_.Trim)

                        style.WrapText = True
                        objWorkSheet.GetRow(rowReinicio + 3).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(rowReinicio + 3).CreateCell(1).CellStyle = style
                        txtFiltro_ = RowFiltro.Item("MEDIO").ToString()
                        objWorkSheet.GetRow(rowReinicio + 3).GetCell(0).SetCellValue("MEDIO :")
                        objWorkSheet.GetRow(rowReinicio + 3).GetCell(1).SetCellValue(txtFiltro_.Trim)
                    Catch ex As Exception

                    End Try
                Next
                indice = indice + 1

                ''===Generamos la Cabecera Cada Cambio de Grupo===
                IndiceColum = 0
                y = 0

                For j As Integer = 0 To oDtResumenMedio.Columns.Count - 1
                    y = IndiceColum + 6
                    If oDtResumenMedio.Columns(j).ColumnName <> "CCLNT" Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleCab
                        Dim valorCab As String = oDtResumenMedio.Columns(j).ColumnName.ToString().Trim()
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(valorCab)
                        IndiceColum += 1
                    End If
                Next
                indice += 1

                Dim flgInicioResumen As Integer = indice + rowActual
                Dim TotalViaje As Int64 = 0
                For z As Integer = 0 To oDtResumenMedio.Rows.Count - 1 '
                    If ClienteRow("CCLNT").ToString = oDtResumenMedio.Rows(z).Item("CCLNT").ToString Then
                        IndiceColum = 0
                        For x As Integer = 0 To oDtResumenMedio.Columns.Count - 1 '
                            If oDtResumenMedio.Columns(x).ColumnName <> "CCLNT" Then
                                y = IndiceColum + 6
                                celda = oDtResumenMedio.Rows(z).Item(x).ToString().Trim()
                                If IsNumeric(celda) Then
                                    If x = 2 Then
                                        TotalViaje = TotalViaje + Convert.ToInt64(celda)
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToInt64(celda))
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                    End If
                                Else
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(oDtResumenMedio.Rows(z).Item(x).ToString().Trim())
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                                End If
                                IndiceColum = IndiceColum + 1
                            End If
                        Next
                        indice += 1
                    End If
                Next
                indice += 1

                objWorkSheet.GetRow(indice + rowActual).CreateCell(6).CellStyle = styleCab
                objWorkSheet.GetRow(indice + rowActual).GetCell(6).SetCellValue("TOTALES")

                Dim formula As String = ""
                'formula = "SUM(" & LetraNumero_NPOI(7) & (flgInicioResumen).ToString & ":" & LetraNumero_NPOI(7) & (indice + rowActual - 1).ToString & ")"

                If oDtResumenMedio.Rows.Count = 0 Then TotalViaje = 0
                objWorkSheet.GetRow(indice + rowActual).CreateCell(7).CellStyle = styleNumber
                objWorkSheet.GetRow(indice + rowActual).GetCell(7).SetCellValue(TotalViaje)
                'objWorkSheet.GetRow(indice + rowActual).GetCell(6).CellFormula = (formula)

                formula = "SUM(" & LetraNumero_NPOI(8) & (flgInicioResumen).ToString & ":" & LetraNumero_NPOI(8) & (indice + rowActual - 1).ToString & ")"
                If oDtResumenMedio.Rows.Count = 0 Then formula = "0"
                objWorkSheet.GetRow(indice + rowActual).CreateCell(8).CellStyle = styleMonto
                objWorkSheet.GetRow(indice + rowActual).GetCell(8).CellFormula = (formula)

                objWorkSheet.DefaultRowHeightInPoints = 25
                objWorkSheet.DefaultColumnWidth = 25

                For z As Integer = 0 To odtDetalles.Columns.Count - 1

                    If z <> 1 Then
                        objWorkSheet.AutoSizeColumn(z)
                    End If
                Next
                oDs.Tables("DT_General").Columns("POR_CI").SetOrdinal(23)
                oDs.Tables("DT_General").Columns("TARIFA_CI").SetOrdinal(24)
                oDs.Tables("DT_General").Columns("TARIFA").SetOrdinal(25)
                If permiso = False Then
                    oDs.Tables("DT_General").Columns.Remove("TARIFA_CI")
                    oDs.Tables("DT_General").Columns.Remove("TARIFA")
                End If
                CreaHojaExcel(objWorkBook, oDs, ClienteRow, CARGOPLAN.AEREO)
                If permiso = True Then
                    CreaHojaExcel(objWorkBook, oDs, ClienteRow, CARGOPLAN.RESUMEN_GENERAL_AEREO)
                End If

            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try
    End Sub

    Public Shared Sub ExportExcelPlusPetrol_Fluvial_Masivo(ByVal oDs As DataSet)
        '=====================================================================
        Try

            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)
            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            Dim strRutaImagen As String = ""
            Dim strNroCargoPlan As String = ""
            Dim celda As String = ""
            Dim oDtClientes As DataTable = oDs.Tables(5)
            Dim ClienteRow As DataRow

            For Each ClienteRow In oDtClientes.Rows
                If objWorkBook.GetSheetIndex(ClienteRow("TCMPCL")) = -1 Then
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("TCMPCL").ToString.Replace("*", ""))
                Else
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("CCLNT") & "_" & ClienteRow("TCMPCL").ToString.ToString.Replace("*", ""))
                End If
                Dim oDtFiltro As DataTable = filtraReporte_NPOI(oDs.Tables(0).Copy, ClienteRow("CCLNT").ToString)
                Dim odtg As DataTable = filtraReporte_NPOI(oDs.Tables(1).Copy, ClienteRow("CCLNT").ToString)
                'Dim odtImagenes As Data.DataTable = filtraReporte_NPOI(oDs.Tables(2).Copy, ClienteRow("CCLNT").ToString)
                Dim oDtResMate As DataTable = filtraReporte_NPOI(oDs.Tables(2).Copy, ClienteRow("CCLNT").ToString)
                Dim oDtResLote As DataTable = filtraReporte_NPOI(oDs.Tables(3).Copy, ClienteRow("CCLNT").ToString)
                Dim oDtResCuenta As DataTable = filtraReporte_NPOI(oDs.Tables(4).Copy, ClienteRow("CCLNT").ToString)

                '=============Estilos======================
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontTitulo.FontHeight = 220

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontFiltro.FontHeight = 120

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 120

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 120

                '============================================
                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontTitulo)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                '============================================
                Estilos_Excel_NPOI_Fluvial(styleFiltro, FORMATO.Filtro)
                Estilos_Excel_NPOI_Fluvial(styleCab, FORMATO.Cabecera)
                Estilos_Excel_NPOI_Fluvial(style, FORMATO.Normal)
                Estilos_Excel_NPOI_Fluvial(styleTitulo, FORMATO.Titulo)
                Estilos_Excel_NPOI_Fluvial(styleNumber, FORMATO.Numero)
                Estilos_Excel_NPOI_Fluvial(styleMonto, FORMATO.Monto)
                Estilos_Excel_NPOI_Fluvial(styleFecha, FORMATO.Fecha)
                Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
                '============================================

                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontFiltro)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                styleMontoCI.SetFont(oFont)

                ''create los atributos de las imagenes
                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)


                '===================Se cargan Las Variables de Trabajo=====================
                Dim Indice As Integer = 0
                Dim rowActual As Integer = 6
                Dim IndiceColum As Integer = 0
                Dim y As Integer = 0 'Posicion Inicial por la Izquierda
                Dim txtFiltro As String = "" 'Valor del filtro en posicion Inicial Actual
                Dim addEspacios As Integer = 12
                Dim NroItem As Integer = 1
                Dim posLabel As Integer = 6

                '---------------Creamos los rows--------------
                For iCreate As Integer = 0 To (odtg.Rows.Count + oDtResCuenta.Rows.Count + oDtResLote.Rows.Count + (oDtFiltro.Columns.Count * oDtFiltro.Rows.Count) + (oDtFiltro.Rows.Count * 27))
                    objWorkSheet.CreateRow(iCreate)
                Next
                Dim strPk1 As String = ""
                Dim strPk2 As String = ""

                For Each RowFiltro As DataRow In oDtFiltro.Rows
                    strPk1 = RowFiltro.Item("CTRMNC").ToString
                    strPk2 = RowFiltro.Item("NGUIRM").ToString
                    strNroCargoPlan = strPk2.PadLeft(10, "0").Substring(0, 3) & "-" & strPk2.PadLeft(10, "0").Substring(3)
                    strNroCargoPlan = "NRO. CARGO PLAN : " & strNroCargoPlan
                    NroItem = 1
                    Dim IndiceLote As Integer '
                    Dim iPosFiltro As Integer = Indice + rowActual
                    Dim tblResumenCuenta As New DataTable
                    Dim tblResumenLote As New DataTable

                    tblResumenCuenta = filtraResumen_Reporte(oDtResCuenta, strPk1, strPk2)
                    tblResumenLote = filtraResumen_Reporte(oDtResLote, strPk1, strPk2)

                    '==================Pie de Imagen======================
                    objWorkSheet.GetRow(Indice + rowActual + 30).CreateCell(0).SetCellValue(RowFiltro.Item("MARCA").ToString.Trim)
                    objWorkSheet.GetRow(Indice + rowActual + 30).CreateCell(1).SetCellValue("")
                    objWorkSheet.GetRow(Indice + rowActual + 30).GetCell(0).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual + 30).GetCell(1).CellStyle = styleCab
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual + 30, 0, Indice + rowActual + 30, 1))
                    '==================Fin de Pie de Imagen===============

                    '=====CREAMOS CELDAS=======
                    If oDtFiltro.Columns.Count < tblResumenLote.Rows.Count Then
                        iPosFiltro = iPosFiltro + 2 * tblResumenLote.Rows.Count - oDtFiltro.Columns.Count + 4
                    Else
                        iPosFiltro = iPosFiltro + 13
                    End If

                    For iRowFiltro As Integer = Indice + rowActual To iPosFiltro
                        For iCellFiltro As Integer = 3 To 16
                            If iRowFiltro = Indice + rowActual Then
                                objWorkSheet.GetRow(iRowFiltro).CreateCell(iCellFiltro).CellStyle = styleTitulo
                            Else
                                objWorkSheet.GetRow(iRowFiltro).CreateCell(iCellFiltro).CellStyle = styleFiltro
                            End If
                        Next
                    Next
                    IndiceLote = Indice + rowActual
                    ''========Filtros Inicio ==========
                    strNroCargoPlan = ClienteRow("TCMPCL").ToString & " - " & strNroCargoPlan
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue(strNroCargoPlan)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel, Indice + rowActual, 11))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("OX:") 'Etiqueta
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue("") 'Valor
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("NRO. OPERACIÓN:")
                    txtFiltro = RowFiltro.Item("OPERACION")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("ARMADOR:")
                    txtFiltro = RowFiltro.Item("TRANSPORTISTA")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("EMBARCACIÓN:")
                    txtFiltro = RowFiltro.Item("MARCA")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("RUTA:")
                    txtFiltro = RowFiltro.Item("RUTA")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("MODALIDAD:")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue("ROUND TRIP")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).SetCellValue("STAND BY")
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("COSTO:")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue("")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("FECHA ZARPE:")
                    txtFiltro = RowFiltro.Item("FECHA")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("PERIODO:")
                    txtFiltro = RowFiltro.Item("PERIODO")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    txtFiltro = RowFiltro.Item("PERIODO")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).SetCellValue(txtFiltro)
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(3).SetCellValue("SERVICIO:")
                    txtFiltro = RowFiltro.Item("SERVICIO")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(4).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, 4, Indice + rowActual, 6))
                    Indice += 1
                    ''======== Fin Filtros =====

                    ''======== Resumen Lote =====
                    objWorkSheet.GetRow(IndiceLote).GetCell(posLabel + 6).SetCellValue("KG")
                    objWorkSheet.GetRow(IndiceLote).GetCell(posLabel + 7).SetCellValue("M3")
                    objWorkSheet.GetRow(IndiceLote).GetCell(posLabel + 8).SetCellValue("MONTO")
                    IndiceLote += 1

                    '............                    
                    Dim sumaTotalLote As Double = 0D
                    Dim pesoLote As Double = 0D

                    If tblResumenLote.Rows.Count > 0 Then
                        sumaTotalLote = tblResumenLote.Compute("SUM(PESO)", "PESO >= 0")
                    Else
                        sumaTotalLote = 0
                    End If

                    '.........
                    For int_indexlote As Integer = 0 To tblResumenLote.Rows.Count - 1
                        For x As Integer = 3 To tblResumenLote.Columns.Count - 1
                            celda = tblResumenLote.Rows(int_indexlote).Item(x).ToString().Trim()

                            If tblResumenLote.Columns(x).ColumnName.ToString.Trim = "LOTE" Then 'x = 3 Or x = 4 
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).SetCellValue(celda)
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).CellStyle = style
                            ElseIf tblResumenLote.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Then
                                'If Not IsDBNull(tblResumenLote.Rows(int_indexlote).Item("PESO")) Then

                                pesoLote = tblResumenLote.Rows(int_indexlote).Item("PESO")
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).SetCellValue(100 * pesoLote / sumaTotalLote)
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).CellStyle = styleMonto

                                'End If

                            Else
                                If x = 7 Then celda = 0
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).SetCellValue(Convert.ToDouble(celda))
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).CellStyle = styleCab
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                            End If
                        Next
                    Next

                    '==== Totaliza Monto Resumen Lotes ====
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 4).CellStyle = style
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 5).CellStyle = style
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 6).CellStyle = styleMonto
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 7).CellStyle = styleMonto
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 8).CellStyle = styleMonto

                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 4).SetCellValue("TOTAL")
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 5).SetCellValue("100%")

                    Dim formula As String = ""
                    formula = "SUM(" & LetraNumero_NPOI(posLabel + 7) & (IndiceLote + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 7) & (tblResumenLote.Rows.Count + IndiceLote).ToString & ")" '001
                    If tblResumenLote.Rows.Count = 0 Then formula = "0"
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 6).CellFormula = (formula)

                    formula = "SUM(" & LetraNumero_NPOI(posLabel + 8) & (IndiceLote + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 8) & (tblResumenLote.Rows.Count + IndiceLote).ToString & ")" '002
                    If tblResumenLote.Rows.Count = 0 Then formula = "0"
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 7).CellFormula = (formula)

                    formula = "SUM(" & LetraNumero_NPOI(posLabel + 9) & (IndiceLote + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 9) & (tblResumenLote.Rows.Count + IndiceLote).ToString & ")" '003
                    If tblResumenLote.Rows.Count = 0 Then formula = "0"
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 8).CellFormula = (formula)

                    ''=================== Fin de Resumen Lote =====================
                    Indice = iPosFiltro - rowActual + 1
                    ''===================Se Cargan Las Cabeceras=====================
                    ' Cabecera de la Grilla
                    IndiceColum = 0

                    Dim ListaColExport As New List(Of String)
                    Dim PostListCol As New Hashtable
                    ListaColExport.Add("ITEM")
                    ListaColExport.Add("GUIA_PROV")
                    ListaColExport.Add("PROVEEDOR")
                    ListaColExport.Add("COD_PRODUCTO")
                    ListaColExport.Add("DESCRIPCION")
                    ListaColExport.Add("NAVE_PROCEDENCIA")
                    ListaColExport.Add("GUIA_REMISION")
                    ListaColExport.Add("MEDIO_ENVIO")
                    ListaColExport.Add("OC")
                    ListaColExport.Add("OR")
                    ListaColExport.Add("LOTE")
                    ListaColExport.Add("KG")
                    ListaColExport.Add("M3")
                    ListaColExport.Add("BULTOS")
                    ListaColExport.Add("CUENTA_IMPUTACION")
                    ListaColExport.Add("POR_CARGA")
                    ListaColExport.Add("MONTO_SOLES")
                    ListaColExport.Add("POR_CI")
                    'ListaColExport.Add("CUENTA_MAYOR")
                    'ListaColExport.Add("CENTRO_COSTE")
                    'ListaColExport.Add("ELEMENTO_PEP")
                    'ListaColExport.Add("ORDEN")
                    'ListaColExport.Add("GRAFO")
                    'ListaColExport.Add("SIN_CUENTA")


                    y = 3
                    For Each ItemCol As String In ListaColExport
                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleCab
                        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(ItemCol)
                        PostListCol(ItemCol) = y
                        y = y + 1
                    Next

                    'For j As Integer = 0 To odtg.Columns.Count - 1
                    '    If odtg.Columns(j).ColumnName <> "CCLNT" AndAlso _
                    '     odtg.Columns(j).ColumnName <> "TCMPCL" AndAlso _
                    '     odtg.Columns(j).ColumnName <> "CTRMNC" AndAlso _
                    '     odtg.Columns(j).ColumnName <> "NGUIRM" Then
                    '        y = IndiceColum + 3
                    '        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleCab
                    '        Dim valorCab As String = odtg.Columns(j).ColumnName.ToString().Trim()

                    '        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(valorCab)
                    '        IndiceColum = IndiceColum + 1

                    '    End If
                    'Next
                    Indice += 1
                    '========= ========= ========= ========= ========= ========= ========= ========= ========= 
                    '========= Coloca la Imagen del logo por cada cargo plan===========
                    'Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                    'create the anchor
                    Dim anchor As HSSFClientAnchor
                    anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, Indice + rowActual - 13, 0, 0)
                    Dim rutaLogo As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.PNG" 'logo.png -------------- 'Logo_Cargo_Plan.PNG
                    If IO.File.Exists(rutaLogo) Then
                        'load the picture and get the picture index in the workbook
                        Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaLogo, objWorkBook)), HSSFPicture)
                        'Reset the image to the original size.
                        picture.Resize(1) '0.5
                    End If
                    '========= ========= ========= ========= ========= ========= ========= ========= ========= 
                    ' Coloca la Imagen el el primer Registro (Fotografias de Usuario)
                    Try
                        If RowFiltro.Item("NMRGIM") <> 0 Then
                            Dim anchorImagen As HSSFClientAnchor
                            anchorImagen = New HSSFClientAnchor(0, 0, 0, 120, 0, Indice + rowActual, 0, 0)
                            Dim imagenAlmacen = DirectCast(patriarch.CreatePicture(anchorImagen, CargaImagen_Byte(RowFiltro.Item("Image"), objWorkBook, 150, 150)), HSSFPicture)
                            imagenAlmacen.LineStyle = 1
                            imagenAlmacen.Resize()
                        End If
                    Catch ex As Exception
                    End Try
                    ' ''===Generamos Los Detalles de los Registros===
                    Dim txtFiltro_ As String = ""
                    Dim FormulaDetalle As String

                    Dim dtRegistros As DataTable
                    dtRegistros = filtraResumen_Reporte(odtg, strPk1, strPk2)

                    Dim RowRegistroInicio As Integer = Indice + rowActual

                    Dim iPostCol As Integer = 0
                    For Each RowDetalle As DataRow In dtRegistros.Rows
                        IndiceColum = 0



                        For Each ItemCol As String In ListaColExport

                            'Next
                            iPostCol = PostListCol(ItemCol)

                            Select Case ItemCol
                                Case "POR_CARGA"
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        FormulaDetalle = "ROUND(100 * " & LetraNumero_NPOI(PostListCol("KG") + 1) & (Indice + rowActual + 1).ToString & " / " & LetraNumero_NPOI(PostListCol("KG") + 1) & (dtRegistros.Rows.Count + RowRegistroInicio + 1).ToString & ",2)"
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellFormula = FormulaDetalle
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).CellStyle = styleMonto
                                    Else
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).SetCellValue("")
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).CellStyle = styleMontoCI
                                    End If
                                Case "ITEM"

                                    Dim NroItemVis As String = ""
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        NroItemVis = NroItem.ToString.Trim()
                                    End If
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).SetCellValue(NroItemVis)
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).CellStyle = styleNumber

                                Case "OC"
                                    celda = RowDetalle.Item("OC").ToString().Trim() 'RowDetalle.Item("KG").ToString().Trim()
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).CellStyle = style

                                Case "COD_PRODUCTO"

                                    celda = RowDetalle.Item("COD_PRODUCTO").ToString().Trim()
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).CellStyle = style
                                Case "KG"

                                    celda = RowDetalle.Item("KG").ToString().Trim()
                                    'Se obtiene el porcentaje de distribucion
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue(CDbl(celda))
                                    Else
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue("")
                                    End If

                                Case "CUENTA_IMPUTACION"

                                    celda = RowDetalle.Item("CUENTA_IMPUTACION").ToString().Trim()
                                    If IsDBNull(RowDetalle.Item("CUENTA_IMPUTACION")) Then
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = style
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue("")
                                    Else
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = style
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue(celda)
                                    End If
                                Case "POR_CI"
                                    celda = RowDetalle.Item("POR_CI").ToString().Trim()
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue(celda)
                                    Else
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = styleMontoCI
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue(CDbl(celda))
                                    End If
                                Case Else

                                    celda = RowDetalle.Item(ItemCol).ToString().Trim()
                                    If IsNumeric(celda) Then
                                        If celda.Contains(".") Then
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = styleMonto
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue(Convert.ToDouble(celda))
                                        ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = style
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = styleNumber
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue(Convert.ToDouble(celda))
                                        End If
                                    Else
                                        If IsDate(celda) Then
                                            celda = String.Format("{0:d}", CDate(celda))
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).CellStyle = styleFecha
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPostCol).SetCellValue(celda)
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPostCol).CellStyle = style
                                        End If
                                    End If

                            End Select
                            'For x As Integer = 0 To dtRegistros.Columns.Count - 1
                            'If dtRegistros.Columns(x).ColumnName <> "CCLNT" AndAlso _
                            '    dtRegistros.Columns(x).ColumnName <> "TCMPCL" AndAlso _
                            '    dtRegistros.Columns(x).ColumnName <> "NGUIRM" AndAlso _
                            '   dtRegistros.Columns(x).ColumnName <> "CTRMNC" Then
                            '    y = IndiceColum + 3

                            'If dtRegistros.Columns(x).ColumnName = "POR_CARGA" Then  'Porcentaje Carga
                            '    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                            '        FormulaDetalle = "ROUND(100 * " & LetraNumero_NPOI(x - 3) & (Indice + rowActual + 1).ToString & " / " & LetraNumero_NPOI(x - 3) & (dtRegistros.Rows.Count + RowRegistroInicio + 1).ToString & ",2)"
                            '        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellFormula = FormulaDetalle
                            '        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).CellStyle = styleMonto
                            '    Else
                            '        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).SetCellValue("")
                            '        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).CellStyle = styleMontoCI
                            '    End If
                            'ElseIf dtRegistros.Columns(x).ColumnName = "ITEM" Then
                            'Dim NroItemVis As String = ""
                            'If IsDBNull(RowDetalle.Item("POR_CI")) Then
                            '    NroItemVis = NroItem.ToString.Trim()
                            'End If
                            'objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).SetCellValue(NroItemVis)
                            'objWorkSheet.GetRow(Indice + rowActual).GetCell(y).CellStyle = styleNumber
                            'ElseIf dtRegistros.Columns(x).ColumnName = "OC" Then
                            'celda = RowDetalle.Item("OC").ToString().Trim() 'RowDetalle.Item("KG").ToString().Trim()
                            'objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).SetCellValue(celda)
                            'objWorkSheet.GetRow(Indice + rowActual).GetCell(y).CellStyle = style

                            'ElseIf dtRegistros.Columns(x).ColumnName = "COD_PRODUCTO" Then
                            'celda = RowDetalle.Item("COD_PRODUCTO").ToString().Trim()
                            'objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).SetCellValue(celda)
                            'objWorkSheet.GetRow(Indice + rowActual).GetCell(y).CellStyle = style


                            'ElseIf dtRegistros.Columns(x).ColumnName = "KG" Then
                            ''===============
                            ''Para el Calculo del Porcentaje
                            ''===============
                            'celda = RowDetalle.Item("KG").ToString().Trim()
                            ''Se obtiene el porcentaje de distribucion
                            'If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                            '    objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            '    objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(CDbl(celda))
                            'Else
                            '    objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            '    objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue("")
                            'End If
                            'ElseIf dtRegistros.Columns(x).ColumnName = "CUENTA_IMPUTACION" Then
                            'celda = RowDetalle.Item("CUENTA_IMPUTACION").ToString().Trim()
                            'If IsDBNull(RowDetalle.Item("CUENTA_IMPUTACION")) Then
                            '    objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = style
                            '    objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue("")
                            'Else
                            '    objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = style
                            '    objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(celda)
                            'End If
                            'ElseIf dtRegistros.Columns(x).ColumnName = "POR_CI" Then
                            'celda = RowDetalle.Item("POR_CI").ToString().Trim()
                            'If IsDBNull(RowDetalle.Item("POR_CI")) Then
                            '    objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            '    objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(celda)
                            'Else
                            '    objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleMontoCI
                            '    objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(CDbl(celda))
                            'End If
                            'Continue For
                            'end if
                            'Else
                            ''===Obtenemos el primer Registro como flag
                            'celda = RowDetalle.Item(x).ToString().Trim()
                            'If IsNumeric(celda) Then
                            '    If celda.Contains(".") Then
                            '        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            '        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            '    ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                            '        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = style
                            '        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(celda)
                            '    Else
                            '        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleNumber
                            '        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            '    End If
                            'Else
                            '    If IsDate(celda) Then
                            '        celda = String.Format("{0:d}", CDate(celda))
                            '        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleFecha
                            '        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(celda)
                            '    Else
                            '        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).SetCellValue(celda)
                            '        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).CellStyle = style
                            '    End If
                            'End If
                            'End If
                            'IndiceColum += 1
                            'End If
                        Next
                        Indice += 1
                        'NroItem += 1
                        'If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Para los detalles Generales saltando cuando se pinte el subdetalle
                        '    NroItem += 1
                        'End If
                        NroItem += 1
                    Next

                    '===========Totalizamos Detalles=============
                    'Verifica si se llego a la Ultima Fila

                    '

                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 6).CellStyle = styleMonto
                    'FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 7) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 7) & (Indice + rowActual).ToString & ")" '001
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 6).CellFormula = (FormulaDetalle)


                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 7).CellStyle = styleMonto
                    'FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 8) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 8) & (Indice + rowActual).ToString & ")" '002
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 7).CellFormula = (FormulaDetalle)


                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 8).CellStyle = styleMonto
                    'FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 9) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 9) & (Indice + rowActual).ToString & ")" '003
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 8).CellFormula = (FormulaDetalle)


                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 10).CellStyle = styleCab
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 10).SetCellValue("100%")


                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 11).CellStyle = styleCab
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 11).SetCellValue("S/.     -")

                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("KG")).CellStyle = styleMonto
                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(PostListCol("KG") + 1) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(PostListCol("KG") + 1) & (Indice + rowActual).ToString & ")" '001
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("KG")).CellFormula = (FormulaDetalle)


                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("M3")).CellStyle = styleMonto
                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(PostListCol("M3") + 1) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(PostListCol("M3") + 1) & (Indice + rowActual).ToString & ")" '002
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("M3")).CellFormula = (FormulaDetalle)


                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("BULTOS")).CellStyle = styleMonto
                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(PostListCol("BULTOS") + 1) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(PostListCol("BULTOS") + 1) & (Indice + rowActual).ToString & ")" '003
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("BULTOS")).CellFormula = (FormulaDetalle)


                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("POR_CARGA")).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("POR_CARGA")).SetCellValue("100%")


                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("MONTO_SOLES")).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("MONTO_SOLES")).SetCellValue("S/.     -")

                

                  

                    Indice = Indice + 1

                    '===================Se Carga El  Resumen de Cuentas ===========================
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(6).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(7).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(8).CellStyle = styleCab

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(6).SetCellValue("RESUMEN")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, 6, Indice + rowActual, 8))

                    Indice = Indice + 1

                    For x As Integer = 3 To oDtResCuenta.Columns.Count - 1
                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(x + 3).CellStyle = styleCab
                        Dim valorCab As String = oDtResCuenta.Columns(x).ColumnName.ToString().Trim()
                        objWorkSheet.GetRow(Indice + rowActual).GetCell(x + 3).SetCellValue(valorCab)
                    Next
                    Indice = Indice + 1

                    '===================Se Carga El Detalle del Resumen de Cuentas ============================
                    For int_IndexCuenta As Integer = 0 To tblResumenCuenta.Rows.Count - 1
                        For x As Integer = 3 To tblResumenCuenta.Columns.Count - 1
                            celda = tblResumenCuenta.Rows(int_IndexCuenta).Item(x).ToString().Trim()
                            If tblResumenCuenta.Columns(x).ColumnName = "CUENTA" Then
                                objWorkSheet.GetRow(Indice + rowActual).CreateCell(x + 3).SetCellValue(celda)
                                objWorkSheet.GetRow(Indice + rowActual).GetCell(x + 3).CellStyle = style
                            Else
                                If IsNumeric(celda) Then
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(x + 3).SetCellValue(Convert.ToDouble(celda))
                                Else
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(x + 3).CellStyle = style
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(x + 3).SetCellValue(celda)
                                End If
                            End If
                        Next
                        Indice = Indice + 1
                    Next
                    '===========Totalizamos Detalles Resumen de Cuentas=============
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("")
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 1).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 2).CellStyle = styleCab

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")

                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 2) & (Indice + rowActual - tblResumenCuenta.Rows.Count + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 2) & (Indice + rowActual).ToString & ")" '001
                    If oDtResCuenta.Rows.Count = 0 Then FormulaDetalle = "0"
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).CellFormula = (FormulaDetalle)

                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 3) & (Indice + rowActual - tblResumenCuenta.Rows.Count + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 3) & (Indice + rowActual).ToString & ")" '002
                    If oDtResCuenta.Rows.Count = 0 Then FormulaDetalle = "0"
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).CellFormula = (FormulaDetalle)
                    '=============================================
                    Indice = Indice + addEspacios
                Next
                ''========Fin Resumen Lote=====
                objWorkSheet.DefaultRowHeightInPoints = 25
                ' objWorkSheet.AutoSizeColumn(0, True)
                Dim n As Integer = 0
                For z As Integer = 0 To odtg.Columns.Count - 1
                    n = z + 3
                    If Not (n = 6 Or n = 5) Then
                        objWorkSheet.AutoSizeColumn(n, True)
                    Else
                        objWorkSheet.SetColumnWidth(n, 9600)
                    End If
                Next
                '---FIN DE UNA HOJA
                oDs.Tables(6).Columns.Remove("FLAG_DIST")
                CreaHojaExcel(objWorkBook, oDs, ClienteRow, CARGOPLAN.FLUVIAL)
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub
    ''GASTON
    Public Shared Sub ExportExcelPlusPetrol_Fluvial_Masivo_Plus(ByVal oDs As DataSet)
        '=====================================================================
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)
            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            Dim strRutaImagen As String = ""
            Dim strNroCargoPlan As String = ""
            Dim celda As String = ""
            Dim oDtClientes As DataTable = oDs.Tables(5)
            Dim ClienteRow As DataRow

            For Each ClienteRow In oDtClientes.Rows
                If objWorkBook.GetSheetIndex(ClienteRow("TCMPCL")) = -1 Then
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("TCMPCL").ToString.Replace("*", ""))
                Else
                    objWorkSheet = objWorkBook.CreateSheet(ClienteRow("CCLNT") & "_" & ClienteRow("TCMPCL").ToString.ToString.Replace("*", ""))
                End If
                Dim oDtFiltro As DataTable = filtraReporte_NPOI(oDs.Tables(0).Copy, ClienteRow("CCLNT").ToString)
                Dim odtg As DataTable = filtraReporte_NPOI(oDs.Tables(1).Copy, ClienteRow("CCLNT").ToString)
                odtg.Columns("POR_CI").SetOrdinal(20)
                'Dim odtImagenes As Data.DataTable = filtraReporte_NPOI(oDs.Tables(2).Copy, ClienteRow("CCLNT").ToString)
                Dim oDtResMate As DataTable = filtraReporte_NPOI(oDs.Tables(2).Copy, ClienteRow("CCLNT").ToString)
                Dim oDtResLote As DataTable = filtraReporte_NPOI(oDs.Tables(3).Copy, ClienteRow("CCLNT").ToString)
                Dim oDtResCuenta As DataTable = filtraReporte_NPOI(oDs.Tables(4).Copy, ClienteRow("CCLNT").ToString)

                '=============Estilos======================
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleMontoCI As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontTitulo.FontHeight = 220

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontFiltro.FontHeight = 120

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 120

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 120

                '============================================
                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontTitulo)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                '============================================
                Estilos_Excel_NPOI_Fluvial(styleFiltro, FORMATO.Filtro)
                Estilos_Excel_NPOI_Fluvial(styleCab, FORMATO.Cabecera)
                Estilos_Excel_NPOI_Fluvial(style, FORMATO.Normal)
                Estilos_Excel_NPOI_Fluvial(styleTitulo, FORMATO.Titulo)
                Estilos_Excel_NPOI_Fluvial(styleNumber, FORMATO.Numero)
                Estilos_Excel_NPOI_Fluvial(styleMonto, FORMATO.Monto)
                Estilos_Excel_NPOI_Fluvial(styleFecha, FORMATO.Fecha)
                Estilos_Excel_NPOI(styleMontoCI, FORMATO.MontoCI)
                '============================================

                styleFiltro.SetFont(oFontFiltro)
                styleCab.SetFont(oFontCab)
                style.SetFont(oFont)
                styleTitulo.SetFont(oFontFiltro)
                styleNumber.SetFont(oFont)
                styleMonto.SetFont(oFont)
                styleFecha.SetFont(oFont)
                styleMontoCI.SetFont(oFont)

                ''create los atributos de las imagenes
                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)


                '===================Se cargan Las Variables de Trabajo=====================
                Dim Indice As Integer = 0
                Dim rowActual As Integer = 6
                Dim IndiceColum As Integer = 0
                Dim y As Integer = 0 'Posicion Inicial por la Izquierda
                Dim txtFiltro As String = "" 'Valor del filtro en posicion Inicial Actual
                Dim addEspacios As Integer = 12
                Dim NroItem As Integer = 1
                Dim posLabel As Integer = 6

                '---------------Creamos los rows--------------
                For iCreate As Integer = 0 To (odtg.Rows.Count + oDtResCuenta.Rows.Count + oDtResLote.Rows.Count + (oDtFiltro.Columns.Count * oDtFiltro.Rows.Count) + (oDtFiltro.Rows.Count * 27))
                    objWorkSheet.CreateRow(iCreate)
                Next
                Dim strPk1 As String = ""
                Dim strPk2 As String = ""

                For Each RowFiltro As DataRow In oDtFiltro.Rows
                    strPk1 = RowFiltro.Item("CTRMNC").ToString
                    strPk2 = RowFiltro.Item("NGUIRM").ToString
                    strNroCargoPlan = strPk2.PadLeft(10, "0").Substring(0, 3) & "-" & strPk2.PadLeft(10, "0").Substring(3)
                    strNroCargoPlan = "NRO. CARGO PLAN : " & strNroCargoPlan
                    NroItem = 1
                    Dim IndiceLote As Integer '
                    Dim iPosFiltro As Integer = Indice + rowActual
                    Dim tblResumenCuenta As New DataTable
                    Dim tblResumenLote As New DataTable

                    tblResumenCuenta = filtraResumen_Reporte(oDtResCuenta, strPk1, strPk2)
                    tblResumenLote = filtraResumen_Reporte(oDtResLote, strPk1, strPk2)

                    '==================Pie de Imagen======================
                    objWorkSheet.GetRow(Indice + rowActual + 30).CreateCell(0).SetCellValue(RowFiltro.Item("MARCA").ToString.Trim)
                    objWorkSheet.GetRow(Indice + rowActual + 30).CreateCell(1).SetCellValue("")
                    objWorkSheet.GetRow(Indice + rowActual + 30).GetCell(0).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual + 30).GetCell(1).CellStyle = styleCab
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual + 30, 0, Indice + rowActual + 30, 1))
                    '==================Fin de Pie de Imagen===============

                    '=====CREAMOS CELDAS=======
                    If oDtFiltro.Columns.Count < tblResumenLote.Rows.Count Then
                        iPosFiltro = iPosFiltro + 2 * tblResumenLote.Rows.Count - oDtFiltro.Columns.Count + 4
                    Else
                        iPosFiltro = iPosFiltro + 13
                    End If

                    For iRowFiltro As Integer = Indice + rowActual To iPosFiltro
                        For iCellFiltro As Integer = 3 To 16
                            If iRowFiltro = Indice + rowActual Then
                                objWorkSheet.GetRow(iRowFiltro).CreateCell(iCellFiltro).CellStyle = styleTitulo
                            Else
                                objWorkSheet.GetRow(iRowFiltro).CreateCell(iCellFiltro).CellStyle = styleFiltro
                            End If
                        Next
                    Next
                    IndiceLote = Indice + rowActual
                    ''========Filtros Inicio ==========
                    strNroCargoPlan = ClienteRow("TCMPCL").ToString & " - " & strNroCargoPlan
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue(strNroCargoPlan)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel, Indice + rowActual, 11))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("OX:") 'Etiqueta
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue("") 'Valor
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("NRO. OPERACIÓN:")
                    txtFiltro = RowFiltro.Item("OPERACION")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("ARMADOR:")
                    txtFiltro = RowFiltro.Item("TRANSPORTISTA")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("EMBARCACIÓN:")
                    txtFiltro = RowFiltro.Item("MARCA")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("RUTA:")
                    txtFiltro = RowFiltro.Item("RUTA")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("MODALIDAD:")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue("ROUND TRIP")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).SetCellValue("STAND BY")
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("COSTO:")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue("")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("FECHA ZARPE:")
                    txtFiltro = RowFiltro.Item("FECHA")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, posLabel + 1, Indice + rowActual, posLabel + 2))
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("PERIODO:")
                    txtFiltro = RowFiltro.Item("PERIODO")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).SetCellValue(txtFiltro)
                    txtFiltro = RowFiltro.Item("PERIODO")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).SetCellValue(txtFiltro)
                    Indice += 1

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(3).SetCellValue("SERVICIO:")
                    txtFiltro = RowFiltro.Item("SERVICIO")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(4).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, 4, Indice + rowActual, 6))
                    Indice += 1
                    ''======== Fin Filtros =====

                    ''======== Resumen Lote =====
                    objWorkSheet.GetRow(IndiceLote).GetCell(posLabel + 6).SetCellValue("KG")
                    objWorkSheet.GetRow(IndiceLote).GetCell(posLabel + 7).SetCellValue("M3")
                    objWorkSheet.GetRow(IndiceLote).GetCell(posLabel + 8).SetCellValue("MONTO")
                    IndiceLote += 1

                    '............                    
                    Dim sumaTotalLote As Double = 0D
                    Dim pesoLote As Double = 0D

                    If tblResumenLote.Rows.Count > 0 Then
                        sumaTotalLote = tblResumenLote.Compute("SUM(PESO)", "PESO >= 0")
                    Else
                        sumaTotalLote = 0
                    End If

                    '.........
                    For int_indexlote As Integer = 0 To tblResumenLote.Rows.Count - 1
                        For x As Integer = 3 To tblResumenLote.Columns.Count - 1
                            celda = tblResumenLote.Rows(int_indexlote).Item(x).ToString().Trim()



                            If tblResumenLote.Columns(x).ColumnName.ToString.Trim = "LOTE" Then 'x = 3 Or x = 4 
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).SetCellValue(celda)
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).CellStyle = style
                            ElseIf tblResumenLote.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Then


                                'If Not IsDBNull(tblResumenLote.Rows(int_indexlote).Item("PESO")) Then
                                pesoLote = tblResumenLote.Rows(int_indexlote).Item("PESO")
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).SetCellValue(100 * pesoLote / sumaTotalLote)
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).CellStyle = styleMonto
                                'End If

                            Else
                                If x = 7 Then celda = 0
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).SetCellValue(Convert.ToDouble(celda))
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).CellStyle = styleCab
                                objWorkSheet.GetRow(int_indexlote + IndiceLote).GetCell(x + posLabel + 1).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                            End If
                        Next
                    Next

                    '==== Totaliza Monto Resumen Lotes ====
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 4).CellStyle = style
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 5).CellStyle = style
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 6).CellStyle = styleMonto
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 7).CellStyle = styleMonto
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 8).CellStyle = styleMonto

                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 4).SetCellValue("TOTAL")
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 5).SetCellValue("100%")

                    Dim formula As String = ""
                    formula = "SUM(" & LetraNumero_NPOI(posLabel + 7) & (IndiceLote + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 7) & (tblResumenLote.Rows.Count + IndiceLote).ToString & ")" '001
                    If tblResumenLote.Rows.Count = 0 Then formula = "0"
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 6).CellFormula = (formula)

                    formula = "SUM(" & LetraNumero_NPOI(posLabel + 8) & (IndiceLote + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 8) & (tblResumenLote.Rows.Count + IndiceLote).ToString & ")" '002
                    If tblResumenLote.Rows.Count = 0 Then formula = "0"
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 7).CellFormula = (formula)

                    formula = "SUM(" & LetraNumero_NPOI(posLabel + 9) & (IndiceLote + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 9) & (tblResumenLote.Rows.Count + IndiceLote).ToString & ")" '003
                    If tblResumenLote.Rows.Count = 0 Then formula = "0"
                    objWorkSheet.GetRow(tblResumenLote.Rows.Count + IndiceLote).GetCell(posLabel + 8).CellFormula = (formula)

                    ''=================== Fin de Resumen Lote =====================
                    Indice = iPosFiltro - rowActual + 1
                    ''===================Se Cargan Las Cabeceras=====================
                    ' Cabecera de la Grilla
                    IndiceColum = 0



                    Dim ListaColExport As New List(Of String)
                    Dim PostListCol As New Hashtable
                    ListaColExport.Add("ITEM")
                    ListaColExport.Add("GUIA_PROV")
                    ListaColExport.Add("PROVEEDOR")
                    ListaColExport.Add("COD_PRODUCTO")
                    ListaColExport.Add("DESCRIPCION")
                    ListaColExport.Add("NAVE_PROCEDENCIA")
                    ListaColExport.Add("GUIA_REMISION")
                    ListaColExport.Add("MEDIO_ENVIO")
                    ListaColExport.Add("OC")
                    ListaColExport.Add("OR")
                    ListaColExport.Add("LOTE")
                    ListaColExport.Add("KG")
                    ListaColExport.Add("M3")
                    ListaColExport.Add("BULTOS")
                    ListaColExport.Add("CUENTA_IMPUTACION")
                    ListaColExport.Add("POR_CARGA")
                    ListaColExport.Add("MONTO_SOLES")
                    ListaColExport.Add("POR_CI")
                    ListaColExport.Add("CUENTA_MAYOR")
                    ListaColExport.Add("CENTRO_COSTE")
                    ListaColExport.Add("ELEMENTO_PEP")
                    ListaColExport.Add("ORDEN")
                    ListaColExport.Add("GRAFO")
                    ListaColExport.Add("SIN_CUENTA")


                    y = 3
                    For Each ItemCol As String In ListaColExport
                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleCab
                        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(ItemCol)
                        PostListCol(ItemCol) = y
                        y = y + 1
                    Next

                    'For j As Integer = 0 To odtg.Columns.Count - 1
                    '    If odtg.Columns(j).ColumnName <> "CCLNT" AndAlso _
                    '     odtg.Columns(j).ColumnName <> "TCMPCL" AndAlso _
                    '     odtg.Columns(j).ColumnName <> "CTRMNC" AndAlso _
                    '     odtg.Columns(j).ColumnName <> "NGUIRM" Then
                    '        y = IndiceColum + 3
                    '        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleCab
                    '        Dim valorCab As String = odtg.Columns(j).ColumnName.ToString().Trim()

                    '        objWorkSheet.GetRow(Indice + rowActual).GetCell(y).SetCellValue(valorCab)
                    '        IndiceColum = IndiceColum + 1

                    '    End If
                    'Next
                    Indice += 1
                    '========= ========= ========= ========= ========= ========= ========= ========= ========= 
                    '========= Coloca la Imagen del logo por cada cargo plan===========
                    'Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                    'create the anchor
                    Dim anchor As HSSFClientAnchor
                    anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, Indice + rowActual - 13, 0, 0)
                    Dim rutaLogo As String = Application.StartupPath & " \Resources\Logo_Cargo_Plan.PNG" 'logo.png -------------- 'Logo_Cargo_Plan.PNG
                    If IO.File.Exists(rutaLogo) Then
                        'load the picture and get the picture index in the workbook
                        Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(rutaLogo, objWorkBook)), HSSFPicture)
                        'Reset the image to the original size.
                        picture.Resize(1) '0.5
                    End If
                    '========= ========= ========= ========= ========= ========= ========= ========= ========= 
                    ' Coloca la Imagen el el primer Registro (Fotografias de Usuario)
                    Try
                        If RowFiltro.Item("NMRGIM") <> 0 Then
                            Dim anchorImagen As HSSFClientAnchor
                            anchorImagen = New HSSFClientAnchor(0, 0, 0, 120, 0, Indice + rowActual, 0, 0)
                            Dim imagenAlmacen = DirectCast(patriarch.CreatePicture(anchorImagen, CargaImagen_Byte(RowFiltro.Item("Image"), objWorkBook, 150, 150)), HSSFPicture)
                            imagenAlmacen.LineStyle = 1
                            imagenAlmacen.Resize()
                        End If
                    Catch ex As Exception
                    End Try
                    ' ''===Generamos Los Detalles de los Registros===
                    Dim txtFiltro_ As String = ""
                    Dim FormulaDetalle As String

                    Dim dtRegistros As DataTable
                    dtRegistros = filtraResumen_Reporte(odtg, strPk1, strPk2)

                    Dim iPosCol As Integer = 0

                    Dim RowRegistroInicio As Integer = Indice + rowActual

                    For Each RowDetalle As DataRow In dtRegistros.Rows
                        'IndiceColum = 0


                        For Each ItemCol As String In ListaColExport

                            'Next

                            'For x As Integer = 0 To dtRegistros.Columns.Count - 1
                            'If dtRegistros.Columns(x).ColumnName <> "CCLNT" AndAlso _
                            '    dtRegistros.Columns(x).ColumnName <> "TCMPCL" AndAlso _
                            '    dtRegistros.Columns(x).ColumnName <> "NGUIRM" AndAlso _
                            '   dtRegistros.Columns(x).ColumnName <> "CTRMNC" Then

                            '    y = IndiceColum + 3
                            '    Dim columna As String = dtRegistros.Columns(x).ColumnName


                            iPosCol = PostListCol(ItemCol)

                            Select Case ItemCol
                                Case "POR_CARGA"
                                    'If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                    '    FormulaDetalle = "ROUND(100 * " & LetraNumero_NPOI(x - 3) & (Indice + rowActual + 1).ToString & " / " & LetraNumero_NPOI(x - 3) & (dtRegistros.Rows.Count + RowRegistroInicio + 1).ToString & ",2)"
                                    '    objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellFormula = FormulaDetalle
                                    '    objWorkSheet.GetRow(Indice + rowActual).GetCell(y).CellStyle = styleMonto
                                    'Else
                                    '    objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).SetCellValue("")
                                    '    objWorkSheet.GetRow(Indice + rowActual).GetCell(y).CellStyle = styleMontoCI
                                    'End If
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        FormulaDetalle = "ROUND(100 * " & LetraNumero_NPOI(PostListCol("KG") + 1) & (Indice + rowActual + 1).ToString & " / " & LetraNumero_NPOI(PostListCol("KG") + 1) & (dtRegistros.Rows.Count + RowRegistroInicio + 1).ToString & ",2)"
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellFormula = FormulaDetalle
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).CellStyle = styleMonto
                                    Else
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).SetCellValue("")
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).CellStyle = styleMontoCI
                                    End If
                                    'Exit Select
                                Case "ITEM"
                                    Dim NroItemVis As String = ""
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        NroItemVis = NroItem.ToString.Trim()
                                    End If
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).SetCellValue(NroItemVis)
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).CellStyle = styleNumber
                                    'Exit Select
                                Case "OC"
                                    celda = RowDetalle.Item("OC").ToString().Trim() 'RowDetalle.Item("KG").ToString().Trim()
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).SetCellValue(celda)
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).CellStyle = style
                                    Exit Select
                                Case "COD_PRODUCTO"
                                    celda = RowDetalle.Item("COD_PRODUCTO").ToString().Trim()
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).SetCellValue(celda)
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).CellStyle = style
                                    'Exit Select
                                Case "KG"
                                    '===============
                                    'Para el Calculo del Porcentaje
                                    '===============
                                    celda = RowDetalle.Item("KG").ToString().Trim()
                                    'Se obtiene el porcentaje de distribucion
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Verificamos si existe porcentaje para distribucion por CI
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue(CDbl(celda))
                                    Else
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(y).CellStyle = styleMonto
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue("")
                                    End If
                                    'Exit Select
                                Case "CUENTA_IMPUTACION"
                                    celda = RowDetalle.Item("CUENTA_IMPUTACION").ToString().Trim()
                                    If IsDBNull(RowDetalle.Item("CUENTA_IMPUTACION")) Then
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellStyle = style
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue("")
                                    Else
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellStyle = style
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue(celda)
                                    End If
                                    'Exit Select
                                Case "POR_CI"
                                    celda = RowDetalle.Item("POR_CI").ToString().Trim()
                                    If IsDBNull(RowDetalle.Item("POR_CI")) Then
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue(celda)
                                    Else
                                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellStyle = styleMontoCI
                                        objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue(CDbl(celda))
                                    End If
                                    'Exit Select
                                Case Else
                                    '===Obtenemos el primer Registro como flag
                                    'celda = RowDetalle.Item(x).ToString().Trim()
                                    celda = RowDetalle.Item(ItemCol).ToString().Trim()

                                    If IsNumeric(celda) Then
                                        If celda.Contains(".") Then
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellStyle = styleMonto
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue(Convert.ToDouble(celda))
                                        ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellStyle = style
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellStyle = styleNumber
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue(Convert.ToDouble(celda))
                                        End If
                                    Else
                                        If IsDate(celda) Then
                                            celda = String.Format("{0:d}", CDate(celda))
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).CellStyle = styleFecha
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(Indice + rowActual).CreateCell(iPosCol).SetCellValue(celda)
                                            objWorkSheet.GetRow(Indice + rowActual).GetCell(iPosCol).CellStyle = style
                                        End If
                                    End If
                            End Select
                            'IndiceColum += 1
                            'End If
                        Next
                        Indice += 1
                        'NroItem += 1
                        'If IsDBNull(RowDetalle.Item("POR_CI")) Then 'Para los detalles Generales saltando cuando se pinte el subdetalle
                        '    NroItem += 1
                        'End If
                        NroItem += 1
                    Next

                    '===========Totalizamos Detalles=============
                    'Verifica si se llego a la Ultima Fila

                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 6).CellStyle = styleMonto
                    'FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 7) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 7) & (Indice + rowActual).ToString & ")" '001
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 6).CellFormula = (FormulaDetalle)


                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 7).CellStyle = styleMonto
                    'FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 8) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 8) & (Indice + rowActual).ToString & ")" '002
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 7).CellFormula = (FormulaDetalle)


                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 8).CellStyle = styleMonto
                    'FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 9) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 9) & (Indice + rowActual).ToString & ")" '003
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 8).CellFormula = (FormulaDetalle)


                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 10).CellStyle = styleCab
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 10).SetCellValue("100%")

                    'objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 11).CellStyle = styleCab
                    'objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 11).SetCellValue("S/.     -")

                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("KG")).CellStyle = styleMonto
                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(PostListCol("KG") + 1) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(PostListCol("KG") + 1) & (Indice + rowActual).ToString & ")" '001
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("KG")).CellFormula = (FormulaDetalle)


                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("M3")).CellStyle = styleMonto
                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(PostListCol("M3") + 1) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(PostListCol("M3") + 1) & (Indice + rowActual).ToString & ")" '002
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("M3")).CellFormula = (FormulaDetalle)


                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("BULTOS")).CellStyle = styleMonto
                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(PostListCol("BULTOS") + 1) & (RowRegistroInicio + 1).ToString & ":" & LetraNumero_NPOI(PostListCol("BULTOS") + 1) & (Indice + rowActual).ToString & ")" '003
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("BULTOS")).CellFormula = (FormulaDetalle)


                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("POR_CARGA")).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("POR_CARGA")).SetCellValue("100%")

                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(PostListCol("MONTO_SOLES")).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(PostListCol("MONTO_SOLES")).SetCellValue("S/.     -")

                 

                 

                    Indice = Indice + 1

                    '===================Se Carga El  Resumen de Cuentas ===========================
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(6).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(7).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(8).CellStyle = styleCab

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(6).SetCellValue("RESUMEN")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(Indice + rowActual, 6, Indice + rowActual, 8))

                    Indice = Indice + 1

                    For x As Integer = 3 To oDtResCuenta.Columns.Count - 1
                        objWorkSheet.GetRow(Indice + rowActual).CreateCell(x + 3).CellStyle = styleCab
                        Dim valorCab As String = oDtResCuenta.Columns(x).ColumnName.ToString().Trim()
                        objWorkSheet.GetRow(Indice + rowActual).GetCell(x + 3).SetCellValue(valorCab)
                    Next
                    Indice = Indice + 1

                    '===================Se Carga El Detalle del Resumen de Cuentas ============================
                    For int_IndexCuenta As Integer = 0 To tblResumenCuenta.Rows.Count - 1
                        For x As Integer = 3 To tblResumenCuenta.Columns.Count - 1
                            celda = tblResumenCuenta.Rows(int_IndexCuenta).Item(x).ToString().Trim()
                            If tblResumenCuenta.Columns(x).ColumnName = "CUENTA" Then
                                objWorkSheet.GetRow(Indice + rowActual).CreateCell(x + 3).SetCellValue(celda)
                                objWorkSheet.GetRow(Indice + rowActual).GetCell(x + 3).CellStyle = style
                            Else
                                If IsNumeric(celda) Then
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(x + 3).CellStyle = styleMonto
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(x + 3).SetCellValue(Convert.ToDouble(celda))
                                Else
                                    objWorkSheet.GetRow(Indice + rowActual).GetCell(x + 3).CellStyle = style
                                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(x + 3).SetCellValue(celda)
                                End If
                            End If
                        Next
                        Indice = Indice + 1
                    Next
                    '===========Totalizamos Detalles Resumen de Cuentas=============
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel).SetCellValue("")
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 1).CellStyle = styleCab
                    objWorkSheet.GetRow(Indice + rowActual).CreateCell(posLabel + 2).CellStyle = styleCab

                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).CellStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")

                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 2) & (Indice + rowActual - tblResumenCuenta.Rows.Count + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 2) & (Indice + rowActual).ToString & ")" '001
                    If oDtResCuenta.Rows.Count = 0 Then FormulaDetalle = "0"
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 1).CellFormula = (FormulaDetalle)

                    FormulaDetalle = "SUM(" & LetraNumero_NPOI(posLabel + 3) & (Indice + rowActual - tblResumenCuenta.Rows.Count + 1).ToString & ":" & LetraNumero_NPOI(posLabel + 3) & (Indice + rowActual).ToString & ")" '002
                    If oDtResCuenta.Rows.Count = 0 Then FormulaDetalle = "0"
                    objWorkSheet.GetRow(Indice + rowActual).GetCell(posLabel + 2).CellFormula = (FormulaDetalle)
                    '=============================================
                    Indice = Indice + addEspacios
                Next
                ''========Fin Resumen Lote=====
                objWorkSheet.DefaultRowHeightInPoints = 25
                ' objWorkSheet.AutoSizeColumn(0, True)
                Dim n As Integer = 0
                For z As Integer = 0 To odtg.Columns.Count - 1
                    n = z + 3
                    If Not (n = 6 Or n = 5) Then
                        objWorkSheet.AutoSizeColumn(n, True)
                    Else
                        objWorkSheet.SetColumnWidth(n, 9600)
                    End If
                Next
                '---FIN DE UNA HOJA
                oDs.Tables(6).Columns("POR_CI").SetOrdinal(22)
                oDs.Tables(6).Columns.Remove("FLAG_DIST")
                CreaHojaExcel(objWorkBook, oDs, ClienteRow, CARGOPLAN.FLUVIAL)
            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub


    Private Shared Function LoadImage(ByVal path As String, ByVal wb As HSSFWorkbook) As Integer
        Dim file As New FileStream(path, FileMode.Open, FileAccess.Read)
        Dim buffer As Byte() = New Byte(file.Length - 1) {}
        file.Read(buffer, 0, CInt(file.Length))
        Return wb.AddPicture(buffer, PictureType.JPEG)
    End Function

    Private Shared Sub CreaHojaExcel(ByVal objWorkBook As HSSFWorkbook, ByVal oDs As DataSet, ByVal ClienteRow As DataRow, ByVal ObjCargoPlan As CARGOPLAN)
        '================================================================================
        'Crea la Nueva Hoja Para El resumen general
        Dim indice As Integer = 0
        Dim strPk1 As String = ""
        Dim strPk2 As String = ""
        Dim NroItem As Integer = 1
        Dim IndiceColum As Integer = 0
        Dim rowActual As Integer = 2
        Dim celda As String = ""
        Dim y As Integer = 0
        Dim objWorkSheet As New HSSFSheet(objWorkBook)
        Select Case ObjCargoPlan
            Case CARGOPLAN.AEREO, CARGOPLAN.FLUVIAL, CARGOPLAN.TERRESTRE
                objWorkSheet = objWorkBook.CreateSheet("GENERAL" & "_" & ClienteRow("TCMPCL").ToString.Replace("*", ""))
            Case CARGOPLAN.RESUMEN_GENERAL_TERRES, CARGOPLAN.RESUMEN_GENERAL_AEREO
                objWorkSheet = objWorkBook.CreateSheet("RESUMEN GENERAL")
        End Select
        '=============Stilos======================
        Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        style.WrapText = True
        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontFiltro.FontHeight = 165

        Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
        oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontCab.FontHeight = 165

        Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.FontHeight = 170


        Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
        Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
        Estilos_Excel_NPOI(style, FORMATO.Normal)
        Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
        Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
        Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
        Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
        '============================================
        style.VerticalAlignment = NPOI.SS.UserModel.VerticalAlignment.BOTTOM

        styleFiltro.SetFont(oFontFiltro)
        styleCab.SetFont(oFontCab)
        style.SetFont(oFont)
        styleTitulo.SetFont(oFontFiltro)
        styleNumber.SetFont(oFont)
        styleMonto.SetFont(oFont)
        styleFecha.SetFont(oFont)
        '============================================        
        If ObjCargoPlan = CARGOPLAN.RESUMEN_GENERAL_TERRES Then
            '''' ----GENERAMOS LAS TABLAS PARA POBLAR EL EXCEL---- ''''
            Dim odtResLote As DataTable = oDs.Tables("DT_ResCosto_Trans").Copy
            Dim odtResCIGral As DataTable = oDs.Tables("DT_ResCntImputacionGral").Copy
            Dim odtResLoteGral As DataTable = oDs.Tables("DT_ResLoteGral").Copy
            '=============================================================        
            '===================RESUMEN POR TRANSPORTISTA=================
            For s As Integer = 0 To (odtResLote.Rows.Count + 4)
                objWorkSheet.CreateRow(s)
            Next
            objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).CreateCell(2).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("*RESUMEN  COSTOS POR TRANSPORTISTA*")
            objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("")
            Dim Region As New NPOI.SS.Util.Region(rowActual, 1, rowActual, 2)
            objWorkSheet.AddMergedRegion(Region)

            rowActual = rowActual + 1
            For s As Integer = 0 To odtResLote.Columns.Count - 1
                If odtResLote.Columns(s).ColumnName <> "CTRMNC" Then
                    Dim valor As String = odtResLote.Columns(s).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).CreateCell(s).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual).GetCell(s).SetCellValue(valor)
                End If
            Next
            rowActual = rowActual + 1
            For x As Integer = 0 To odtResLote.Rows.Count - 1
                For z As Integer = 0 To odtResLote.Columns.Count - 1
                    If odtResLote.Columns(z).ColumnName <> "CTRMNC" Then
                        Dim valor As String = odtResLote.Rows(x).Item(z).ToString().Trim().Replace("TRANSPORTISTA :", "")
                        If IsNumeric(valor) Then
                            objWorkSheet.GetRow(rowActual + x).CreateCell(z).CellStyle = styleMonto
                            objWorkSheet.GetRow(rowActual + x).GetCell(z).SetCellValue(Convert.ToDouble(valor))
                        Else
                            objWorkSheet.GetRow(rowActual + x).CreateCell(z).CellStyle = style
                            objWorkSheet.GetRow(rowActual + x).GetCell(z).SetCellValue(valor)
                        End If
                    End If
                Next
            Next
            '=============================================================        
            '===================RESUMEN POR COSTOS X CUENTA IMPUTACION=============
            Dim posCelCIGral As Integer = 0
            Dim celd As String = ""
            rowActual = objWorkSheet.LastRowNum + 2
            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).CreateCell(2).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("RESUMEN GENERAL POR CUENTA DE IMPUTACION")
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 1, rowActual, 2))
            rowActual += 1
            objWorkSheet.CreateRow(rowActual)
            For x As Integer = 0 To odtResCIGral.Columns.Count - 1
                If odtResCIGral.Columns(x).ColumnName <> "CCLNT" Then
                    posCelCIGral = x
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(posCelCIGral).CellStyle = styleCab
                    '===Valores===
                    Dim valorCab As String = odtResCIGral.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(posCelCIGral).SetCellValue(valorCab)
                End If
            Next
            rowActual += 1
            For iCIGral As Integer = 0 To odtResCIGral.Rows.Count - 1
                objWorkSheet.CreateRow(iCIGral + rowActual)
                For x As Integer = 0 To odtResCIGral.Columns.Count - 1
                    If odtResCIGral.Columns(x).ColumnName <> "CCLNT" Then
                        posCelCIGral = x
                        celd = odtResCIGral.Rows(iCIGral).Item(x).ToString().Trim()
                        If IsNumeric(celd) Then
                            If celd.Contains(".") Then
                                objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(iCIGral + rowActual).GetCell(posCelCIGral).SetCellValue(Double.Parse(celd.ToString))
                        Else
                            objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = style
                            objWorkSheet.GetRow(iCIGral + rowActual).GetCell(posCelCIGral).SetCellValue(celd)
                        End If
                    End If
                Next
            Next
            '===============================================================      
            '===============================================================
            '===================RESUMEN POR COSTOS X LOTES==================  
            rowActual = objWorkSheet.LastRowNum + 2
            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).CreateCell(2).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("RESUMEN GENERAL POR LOTES")
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 1, rowActual, 4))
            rowActual += 1
            objWorkSheet.CreateRow(rowActual)
            For x As Integer = 0 To odtResLoteGral.Columns.Count - 1
                If odtResLoteGral.Columns(x).ColumnName <> "CCLNT" Then
                    posCelCIGral = x
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(posCelCIGral).CellStyle = styleCab
                    '===Valores===
                    Dim valorCab As String = odtResLoteGral.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(posCelCIGral).SetCellValue(valorCab)
                End If
            Next
            rowActual += 1
            For iCIGral As Integer = 0 To odtResLoteGral.Rows.Count - 1
                objWorkSheet.CreateRow(iCIGral + rowActual)
                For x As Integer = 0 To odtResLoteGral.Columns.Count - 1
                    If odtResLoteGral.Columns(x).ColumnName <> "CCLNT" Then
                        posCelCIGral = x
                        celd = odtResLoteGral.Rows(iCIGral).Item(x).ToString().Trim()
                        If IsNumeric(celd) Then
                            If celd.Contains(".") Then
                                objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(iCIGral + rowActual).GetCell(posCelCIGral).SetCellValue(Double.Parse(celd.ToString))
                        Else
                            objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = style
                            objWorkSheet.GetRow(iCIGral + rowActual).GetCell(posCelCIGral).SetCellValue(celd)
                        End If
                    End If
                Next
            Next
            '===================================================================          
            objWorkSheet.DefaultColumnWidth = 25
            For z As Integer = 0 To odtResLote.Columns.Count - 1
                objWorkSheet.AutoSizeColumn(z, True)
            Next
        ElseIf ObjCargoPlan = CARGOPLAN.RESUMEN_GENERAL_AEREO Then
            ' =============GENERAMOS LAS TABLAS PARA POBLAR EL EXCEL=============
            Dim odtResCIGral As DataTable = oDs.Tables("DT_CtaImputGral").Copy
            Dim odtResLoteGral As DataTable = oDs.Tables("DT_LoteResumen").Copy

            ' =============RESUMEN POR COSTOS X CUENTA IMPUTACION================
            Dim posCelCIGral As Integer = 0
            Dim celd As String = ""
            rowActual = objWorkSheet.LastRowNum + 2
            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).CreateCell(2).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("RESUMEN GENERAL POR CUENTA DE IMPUTACION")
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 1, rowActual, 2))
            rowActual += 1
            objWorkSheet.CreateRow(rowActual)
            For x As Integer = 0 To odtResCIGral.Columns.Count - 1
                If odtResCIGral.Columns(x).ColumnName <> "CCLNT" Then
                    posCelCIGral = x
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(posCelCIGral).CellStyle = styleCab
                    '===Valores===
                    Dim valorCab As String = odtResCIGral.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(posCelCIGral).SetCellValue(valorCab)
                End If
            Next
            rowActual += 1
            For iCIGral As Integer = 0 To odtResCIGral.Rows.Count - 1
                objWorkSheet.CreateRow(iCIGral + rowActual)
                For x As Integer = 0 To odtResCIGral.Columns.Count - 1
                    If odtResCIGral.Columns(x).ColumnName <> "CCLNT" Then
                        posCelCIGral = x
                        celd = odtResCIGral.Rows(iCIGral).Item(x).ToString().Trim()
                        If odtResCIGral.Columns(x).ColumnName = "Cuenta" Then
                            objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = style
                            objWorkSheet.GetRow(iCIGral + rowActual).GetCell(posCelCIGral).SetCellValue(celd)
                        ElseIf IsNumeric(celd) Then
                            If celd.Contains(".") Then
                                objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(iCIGral + rowActual).GetCell(posCelCIGral).SetCellValue(Double.Parse(celd.ToString))
                        Else
                            objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = style
                            objWorkSheet.GetRow(iCIGral + rowActual).GetCell(posCelCIGral).SetCellValue(celd)
                        End If
                    End If
                Next
            Next
            '===============================================================      
            '===============================================================
            '===================RESUMEN POR COSTOS X LOTES==================  
            rowActual = objWorkSheet.LastRowNum + 2
            objWorkSheet.CreateRow(rowActual)
            objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).CreateCell(2).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleCab
            objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("RESUMEN GENERAL POR LOTES")
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 1, rowActual, 4))
            rowActual += 1
            objWorkSheet.CreateRow(rowActual)
            For x As Integer = 0 To odtResLoteGral.Columns.Count - 1
                If odtResLoteGral.Columns(x).ColumnName <> "CCLNT" Then
                    posCelCIGral = x
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(posCelCIGral).CellStyle = styleCab
                    '===Valores===
                    Dim valorCab As String = odtResLoteGral.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(posCelCIGral).SetCellValue(valorCab)
                End If
            Next
            rowActual += 1
            For iCIGral As Integer = 0 To odtResLoteGral.Rows.Count - 1
                objWorkSheet.CreateRow(iCIGral + rowActual)
                For x As Integer = 0 To odtResLoteGral.Columns.Count - 1
                    If odtResLoteGral.Columns(x).ColumnName <> "CCLNT" Then
                        posCelCIGral = x
                        celd = odtResLoteGral.Rows(iCIGral).Item(x).ToString().Trim()
                        If IsNumeric(celd) Then
                            If celd.Contains(".") Then
                                objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(iCIGral + rowActual).GetCell(posCelCIGral).SetCellValue(Double.Parse(celd.ToString))
                        Else
                            objWorkSheet.GetRow(iCIGral + rowActual).CreateCell(posCelCIGral).CellStyle = style
                            objWorkSheet.GetRow(iCIGral + rowActual).GetCell(posCelCIGral).SetCellValue(celd)
                        End If
                    End If
                Next
            Next
            '===================================================================          
            objWorkSheet.DefaultColumnWidth = 25
            For z As Integer = 0 To odtResLoteGral.Columns.Count - 1
                objWorkSheet.AutoSizeColumn(z, True)
            Next
            '--------
        Else
            Dim odtFiltro As New DataTable
            odtFiltro = filtraReporte_NPOI(oDs.Tables(0).Copy, ClienteRow("CCLNT").ToString)
            Dim oDtGeneral As New DataTable
            oDtGeneral = filtraReporte_NPOI(oDs.Tables("DT_General").Copy, ClienteRow("CCLNT").ToString)
            For s As Integer = 0 To (odtFiltro.Rows.Count + oDtGeneral.Rows.Count + 20)
                objWorkSheet.CreateRow(s)
            Next
            IndiceColum = 0
            For j As Integer = 0 To oDtGeneral.Columns.Count - 1
                If oDtGeneral.Columns(j).ColumnName <> "TCMPCL" AndAlso _
                 oDtGeneral.Columns(j).ColumnName <> "CCLNT" AndAlso _
                    oDtGeneral.Columns(j).ColumnName <> "CTRMNC" AndAlso _
                    oDtGeneral.Columns(j).ColumnName <> "NGUIRM" Then
                    y = IndiceColum
                    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y).CellStyle = styleCab
                    Dim valorCab As String = oDtGeneral.Columns(j).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).SetCellValue(valorCab)
                    IndiceColum = IndiceColum + 1
                End If
            Next
            'Pinta Los registros
            NroItem = 1 'VIENE DE LA PARTE INFERIOR
            For Each RowFiltro As DataRow In odtFiltro.Rows
                Dim dtTempTotal As DataTable
                strPk1 = RowFiltro.Item("CTRMNC").ToString
                strPk2 = RowFiltro.Item("NGUIRM").ToString
                'Busca El Detalle en el Filtro
                dtTempTotal = filtraReporteXPK_NPOI(oDtGeneral, ClienteRow("CCLNT").ToString, strPk1, strPk2)
                'NroItem = 1 'SE PASO A LA PARTE SUPERIOR
                If dtTempTotal.Rows.Count > 0 Then
                    For Each RowGneral As DataRow In dtTempTotal.Rows
                        IndiceColum = 0
                        For x As Integer = 0 To dtTempTotal.Columns.Count - 1
                            '===Obtenemos el primer Registro como flag                                                                                     
                            If dtTempTotal.Columns(x).ColumnName <> "TCMPCL" AndAlso _
                             dtTempTotal.Columns(x).ColumnName <> "CCLNT" AndAlso _
                               dtTempTotal.Columns(x).ColumnName <> "CTRMNC" AndAlso _
                                dtTempTotal.Columns(x).ColumnName <> "NGUIRM" Then
                                y = IndiceColum
                                If dtTempTotal.Columns(x).ColumnName = "ITEM" Then
                                    If ObjCargoPlan = CARGOPLAN.TERRESTRE Or ObjCargoPlan = CARGOPLAN.AEREO Or ObjCargoPlan = CARGOPLAN.FLUVIAL Then
                                        If IsDBNull(RowGneral("POR_CI")) Then
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(NroItem.ToString.Trim())
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue("")
                                        End If
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(NroItem.ToString.Trim())
                                    End If
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = styleNumber
                                ElseIf dtTempTotal.Columns(x).ColumnName = "OC" Then
                                    celda = RowGneral.Item(x).ToString().Trim()
                                    If IsDBNull(RowGneral("OC")) Then
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue("")
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                                    End If

                                ElseIf dtTempTotal.Columns(x).ColumnName = "COD_PRODUCTO" Then
                                    celda = RowGneral.Item(x).ToString().Trim()
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

                                ElseIf dtTempTotal.Columns(x).ColumnName = "CUENTA_IMPUTACION" Then
                                    celda = RowGneral.Item(x).ToString().Trim()
                                    If IsDBNull(RowGneral("CUENTA_IMPUTACION")) Then
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue("")
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                                    End If



                                Else
                                    celda = RowGneral.Item(x).ToString().Trim()
                                    If IsNumeric(celda) Then
                                        If celda.Contains(".") Then
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                        ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                        End If
                                    Else
                                        If IsDate(celda) Then
                                            celda = String.Format("{0:d}", CDate(celda))
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
                                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                                        End If
                                    End If
                                End If
                                IndiceColum = IndiceColum + 1
                            End If
                        Next
                        If ObjCargoPlan = CARGOPLAN.TERRESTRE Or ObjCargoPlan = CARGOPLAN.AEREO Or ObjCargoPlan = CARGOPLAN.FLUVIAL Then
                            If IsDBNull(RowGneral("POR_CI")) Then
                                NroItem = NroItem + 1
                            End If
                        Else
                            NroItem = NroItem + 1
                        End If
                        indice += 1
                    Next
                Else
                    'Crea las los registros De la Cabecerea
                    Select Case ObjCargoPlan
                        Case CARGOPLAN.AEREO
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(0).SetCellValue(RowFiltro.Item("FECHA").ToString)
                            objWorkSheet.GetRow(indice + rowActual).GetCell(0).CellStyle = styleFecha

                            objWorkSheet.GetRow(indice + rowActual).CreateCell(1).SetCellValue(RowFiltro.Item("ORIGEN").ToString)
                            objWorkSheet.GetRow(indice + rowActual).GetCell(1).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(2).SetCellValue(RowFiltro.Item("DESTINO").ToString)
                            objWorkSheet.GetRow(indice + rowActual).GetCell(2).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(3).SetCellValue(RowFiltro.Item("MEDIO").ToString)
                            objWorkSheet.GetRow(indice + rowActual).GetCell(3).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(4).SetCellValue(Split(RowFiltro.Item("OPERACION"), ":")(1))
                            objWorkSheet.GetRow(indice + rowActual).GetCell(4).CellStyle = styleNumber
                        Case CARGOPLAN.TERRESTRE
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(0).SetCellValue(Split(RowFiltro.Item("FECHA").ToString, ":")(1))
                            objWorkSheet.GetRow(indice + rowActual).GetCell(0).CellStyle = styleFecha

                            objWorkSheet.GetRow(indice + rowActual).CreateCell(1).SetCellValue(Split(RowFiltro.Item("ORIGEN").ToString, ":")(1))
                            objWorkSheet.GetRow(indice + rowActual).GetCell(1).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(2).SetCellValue(Split(RowFiltro.Item("DESTINO").ToString, ":")(1))
                            objWorkSheet.GetRow(indice + rowActual).GetCell(2).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(3).SetCellValue(Split(RowFiltro.Item("CHOFER").ToString, ":")(1) + Chr(10) + Split(RowFiltro.Item("MARCA"), ":")(1))
                            objWorkSheet.GetRow(indice + rowActual).GetCell(3).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(4).SetCellValue(Split(RowFiltro.Item("OPERACION").ToString, ":")(1))
                            objWorkSheet.GetRow(indice + rowActual).GetCell(4).CellStyle = styleNumber
                        Case CARGOPLAN.FLUVIAL
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(0).SetCellValue(RowFiltro.Item("FECHA").ToString)
                            objWorkSheet.GetRow(indice + rowActual).GetCell(0).CellStyle = styleFecha

                            objWorkSheet.GetRow(indice + rowActual).CreateCell(1).SetCellValue(Split(RowFiltro.Item("RUTA"), "-")(0).ToString)
                            objWorkSheet.GetRow(indice + rowActual).GetCell(1).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(2).SetCellValue(Split(RowFiltro.Item("RUTA"), "-")(1).ToString)
                            objWorkSheet.GetRow(indice + rowActual).GetCell(2).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(3).SetCellValue(RowFiltro.Item("TRANSPORTISTA").ToString + Chr(10) + RowFiltro.Item("MARCA").ToString)
                            objWorkSheet.GetRow(indice + rowActual).GetCell(3).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(4).SetCellValue(RowFiltro.Item("OPERACION").ToString)
                            objWorkSheet.GetRow(indice + rowActual).GetCell(4).CellStyle = styleNumber
                    End Select
                    indice += 1
                End If
            Next
            objWorkSheet.DefaultRowHeightInPoints = 25
            objWorkSheet.DefaultColumnWidth = 25
            For z As Integer = 0 To oDtGeneral.Columns.Count - 1
                If z <> 1 Then
                    objWorkSheet.AutoSizeColumn(z)
                End If
            Next
        End If
    End Sub

    Private Enum CARGOPLAN
        AEREO
        TERRESTRE
        FLUVIAL
        RESUMEN_GENERAL_TERRES
        RESUMEN_GENERAL_AEREO
    End Enum

    Private Enum FORMATO
        Filtro
        Cabecera
        CabConsistencia
        Normal
        Titulo
        Numero
        Monto
        Fecha
        Porcentaje
        MontoCI
        TextBold
        TotalBold
        NormalBooton
    End Enum

    Public Shared Sub ExportExcelConTitulos(ByVal oDs As DataSet, ByVal title As List(Of String), Optional ByVal listSuma As Hashtable = Nothing)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls" 'xml
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            For intTable As Integer = 0 To oDs.Tables.Count - 1
                objWorkSheet = objWorkBook.CreateSheet(oDs.Tables(intTable).TableName)
                objWorkSheet.CreateRow(3)
                '=============Style======================
                Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleTituloConcepto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim styleTituloDescripcion As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                Dim stylePorcentaje As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

                Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
                oFontFiltro.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontFiltro.FontHeight = 165

                Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
                oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFontCab.FontHeight = 220

                Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFont.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
                oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
                oFont.FontHeight = 170

                Dim oFontTituloConcepto As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontTituloConcepto.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
                oFontTituloConcepto.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
                oFontTituloConcepto.FontHeight = 190

                Dim oFontTituloDescripcion As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
                oFontTituloDescripcion.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index '.HSSFColor.BLACK.index '.HSSF.Util.HSSFColor.WHITE.index
                oFontTituloDescripcion.Boldweight = NPOI.SS.UserModel.FontBoldWeight.NORMAL
                oFontTituloDescripcion.FontHeight = 170

                styleFiltro.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFiltro.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFiltro.BorderRight = CellBorderType.THIN
                styleFiltro.BorderBottom = CellBorderType.THIN
                styleFiltro.BorderLeft = CellBorderType.THIN
                styleFiltro.BorderTop = CellBorderType.THIN
                styleFiltro.SetFont(oFontFiltro)
                styleFiltro.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleFiltro.FillPattern = FillPatternType.SOLID_FOREGROUND

                styleCab.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREEN.index
                styleCab.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                styleCab.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleCab.BorderRight = CellBorderType.THIN
                styleCab.BorderBottom = CellBorderType.THIN
                styleCab.BorderLeft = CellBorderType.THIN
                styleCab.BorderTop = CellBorderType.THIN
                styleCab.SetFont(oFontCab)
                styleCab.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleCab.FillPattern = FillPatternType.SOLID_FOREGROUND

                style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREEN.index
                style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER

                style.FillPattern = FillPatternType.SOLID_FOREGROUND
                style.BorderRight = CellBorderType.THIN
                style.BorderBottom = CellBorderType.THIN
                style.BorderLeft = CellBorderType.THIN
                style.BorderTop = CellBorderType.THIN
                style.SetFont(oFont)

                stylePorcentaje.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                stylePorcentaje.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                stylePorcentaje.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                stylePorcentaje.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00%")
                stylePorcentaje.FillPattern = FillPatternType.SOLID_FOREGROUND
                stylePorcentaje.BorderRight = CellBorderType.THIN
                stylePorcentaje.BorderBottom = CellBorderType.THIN
                stylePorcentaje.BorderLeft = CellBorderType.THIN
                stylePorcentaje.BorderTop = CellBorderType.THIN

                stylePorcentaje.SetFont(oFontFiltro)

                styleTituloConcepto.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleTituloConcepto.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
                styleTituloConcepto.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleTituloConcepto.SetFont(oFontTituloConcepto)

                styleTituloDescripcion.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleTituloDescripcion.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
                styleTituloDescripcion.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleTituloDescripcion.SetFont(oFontTituloDescripcion)

                '===============================
                Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                styleNumber.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                styleNumber.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleNumber.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleNumber.BorderRight = CellBorderType.THIN
                styleNumber.BorderBottom = CellBorderType.THIN
                styleNumber.BorderLeft = CellBorderType.THIN
                styleNumber.BorderTop = CellBorderType.THIN

                styleNumber.SetFont(oFontFiltro)
                styleNumber.DataFormat = HSSFDataFormat.GetBuiltinFormat("#.##0,00")
                styleNumber.FillPattern = FillPatternType.SOLID_FOREGROUND
                '===============================
                Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                styleMonto.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
                styleMonto.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleMonto.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleMonto.BorderRight = CellBorderType.THIN
                styleMonto.BorderBottom = CellBorderType.THIN
                styleMonto.BorderLeft = CellBorderType.THIN
                styleMonto.BorderTop = CellBorderType.THIN
                styleMonto.SetFont(oFontFiltro)
                styleMonto.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
                styleMonto.FillPattern = FillPatternType.SOLID_FOREGROUND
                '===============================
                Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                styleFecha.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
                styleFecha.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFecha.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
                styleFecha.BorderRight = CellBorderType.THIN
                styleFecha.BorderBottom = CellBorderType.THIN
                styleFecha.BorderLeft = CellBorderType.THIN
                styleFecha.BorderTop = CellBorderType.THIN
                styleFecha.SetFont(oFontFiltro)
                styleFecha.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
                styleFecha.FillPattern = FillPatternType.SOLID_FOREGROUND
                '============================================
                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                'create the anchor
                Dim anchor As HSSFClientAnchor
                anchor = New HSSFClientAnchor(0, 0, 0, 0, 0, 0, _
                 0, 0)
                If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                    picture.Resize(0.4)
                End If
                If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.4)
                End If
                Dim rowActual As Integer = 4
                '===============Titulo
                objWorkSheet.CreateRow(rowActual).Height = 100 * 2
                '===========================

                '===========Titulo es centrado segun tamaño de grilla===========
                'objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(title)
                'objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 0, rowActual, odtg.Columns.Count - 1))
                '==============Verificamos Filtro a utilizar==================

                For intCont As Integer = 0 To title.Count - 1
                    Dim strDescripcionTitulo As String()
                    strDescripcionTitulo = Split(title.Item(intCont), "\n")

                    objWorkSheet.CreateRow(rowActual + 1)
                    'objWorkSheet.GetRow(rowActual + 1).GetCell(0).SetCellValue(strDescripcionTitulo(0))
                    'objWorkSheet.GetRow(rowActual + 1).CreateCell(0).CellStyle = styleTituloConcepto

                    objWorkSheet.GetRow(rowActual + 1).CreateCell(0).CellStyle = styleTituloConcepto
                    objWorkSheet.GetRow(rowActual + 1).GetCell(0).SetCellValue(strDescripcionTitulo(0))


                    'objWorkSheet.GetRow(rowActual + 1).CreateCell(1)
                    objWorkSheet.GetRow(rowActual + 1).CreateCell(1).CellStyle = styleTituloDescripcion
                    objWorkSheet.GetRow(rowActual + 1).GetCell(1).SetCellValue(strDescripcionTitulo(1))
                    rowActual += 1
                Next
                objWorkSheet.CreateRow(rowActual + 1)

                rowActual += 2
                '===================Se cargan Las Cabeceras=====================
                Dim flgCabDoble As Boolean = False
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To oDs.Tables(intTable).Columns.Count - 1
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = style
                    '===Valores===
                    Dim valorCab As String = oDs.Tables(intTable).Columns(x).ColumnName.ToString().Trim()
                    Dim valorCabDoble As String()
                    valorCabDoble = Split(valorCab, "\n")
                    If valorCabDoble.Length = 2 Then
                        flgCabDoble = True
                    End If
                    objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCabDoble(0))
                Next
                rowActual = rowActual + 1
                Dim intRepite As Integer = 0
                If flgCabDoble = True Then
                    '==========Limpiamos los Cells Repetidos en el Row Anterior=========
                    For x As Integer = 0 To oDs.Tables(intTable).Columns.Count - 1
                        'If x < oDs.Tables(intTable).Columns.Count - 1 Then
                        intRepite = 0
                        For intColumnas As Integer = 0 To oDs.Tables(intTable).Columns.Count - 1
                            If objWorkSheet.GetRow(rowActual - 1).GetCell(intColumnas).StringCellValue = objWorkSheet.GetRow(rowActual - 1).GetCell(x).StringCellValue Then
                                intRepite = intRepite + 1
                            End If
                        Next
                        If intRepite > 1 Then
                            intRepite = intRepite - 1
                            Dim valorTemp = objWorkSheet.GetRow(rowActual - 1).GetCell(x).StringCellValue
                            '===Union===
                            Dim Region As New NPOI.SS.Util.Region(rowActual - 1, x, rowActual - 1, x + intRepite)
                            objWorkSheet.AddMergedRegion(Region)
                            x = x + intRepite
                        End If
                        ' End If
                    Next
                    '===================================================================
                    objWorkSheet.CreateRow(rowActual)
                    For x As Integer = 0 To oDs.Tables(intTable).Columns.Count - 1
                        '===Estilo===
                        objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = style
                        '===Valores===
                        Dim valorCab As String = oDs.Tables(intTable).Columns(x).ColumnName.ToString().Trim()
                        Dim valorCabDoble As String()
                        valorCabDoble = Split(valorCab, "\n")
                        If valorCabDoble.Length = 2 Then
                            objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCabDoble(1))
                        End If
                    Next
                    rowActual = rowActual + 1
                End If
                '===================Se Carga El Detalle============================
                For i As Integer = 0 To oDs.Tables(intTable).Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To oDs.Tables(intTable).Columns.Count - 1
                        Dim celda As String = oDs.Tables(intTable).Rows(i).Item(x).ToString().Trim()
                        If oDs.Tables(intTable).Columns(x).ColumnName = "PORCENTAJE" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = stylePorcentaje
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda) / 100)
                            '
                        ElseIf oDs.Tables(intTable).Columns(x).ColumnName = "PORCENTAJE INGRESO" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = stylePorcentaje
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda) / 100)
                        ElseIf oDs.Tables(intTable).Columns(x).ColumnName = "PORCENTAJE SALIDA" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = stylePorcentaje
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda) / 100)

                        ElseIf oDs.Tables(intTable).Columns(x).ColumnName = "% Atraso" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = stylePorcentaje
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda) / 100)


                        ElseIf IsNumeric(celda) Then
                            If celda.Contains(".") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleMonto
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda))

                            ElseIf (celda.ToString.Length > 0 And celda.ToString.Substring(0, 1) = "0") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(oDs.Tables(intTable).Rows(i).Item(x).ToString().Trim())
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = styleFiltro

                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleNumber
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)

                            End If
                        Else
                            If IsDate(celda) Then
                                celda = String.Format("{0:d}", CDate(celda))
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleFecha
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(oDs.Tables(intTable).Rows(i).Item(x).ToString().Trim())
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = styleFiltro
                            End If
                        End If

                    Next
                Next

                ''Suma los registros indicados
                Dim strFormula As String
                objWorkSheet.CreateRow(rowActual + oDs.Tables(intTable).Rows.Count)
                If Not listSuma Is Nothing Then
                    For Each items As DictionaryEntry In listSuma
                        strFormula = "SUM(" & LetraNumero_NPOI(items.Value) & (title.Count + 8).ToString & ":" & LetraNumero_NPOI(items.Value) & (oDs.Tables(intTable).Rows.Count + title.Count + 7).ToString & ")"
                        If oDs.Tables(intTable).Rows.Count = 0 Then strFormula = "0"
                        objWorkSheet.GetRow(rowActual + oDs.Tables(intTable).Rows.Count).CreateCell(items.Value - 1).CellStyle = styleMonto
                        objWorkSheet.GetRow(rowActual + oDs.Tables(intTable).Rows.Count).GetCell(items.Value - 1).CellFormula = (strFormula)
                    Next
                End If
                '===================================================================
                For z As Integer = 0 To oDs.Tables(intTable).Columns.Count - 1
                    objWorkSheet.AutoSizeColumn(z, True)
                Next
            Next
            objWorkBook.Write(fs)
            fs.Close()

            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub

    Private Shared IdEncabezado As String

    Private Shared Function DesencriptarFormato(ByVal caption As String) As Encabezados.TIPOFORMATO
        If caption.Contains("|") Then
            Dim strCaption As String() = Split(caption, "|")
      Return Split(strCaption(1).ToString, "=")(1)

        End If
  End Function

    Private Shared Function DesencriptarOtroFormato(ByVal caption As String) As String
        Dim strReturn As String = "0.00"
        If caption.Contains("|") Then
            Dim strCaption As String() = Split(caption, "|")
            If strCaption.Length > 2 Then
                strReturn = Split(strCaption(2).ToString, "=")(2)
            End If
        End If
        Return strReturn
    End Function

    Private Shared Function DesencriptarTipodato(ByVal caption As String) As Encabezados.TIPODATO

        If caption.Contains("|") Then
            Dim strCaption As String() = Split(caption, "|")
            Return Split(strCaption(0).ToString, "=")(1)
        ElseIf caption.Contains("=") Then
            Return Split(caption.ToString, "=")(1)

        End If
    End Function

    Public Shared Function FormatColumna(Optional ByVal TIPODATO As Encabezados.TIPODATO = Encabezados.TIPODATO.NINGUNO, _
                                Optional ByVal VALORFORMATO As Encabezados.TIPOFORMATO = Encabezados.TIPOFORMATO.NINGUNO, _
                                Optional ByVal VALORESPECIAL As String = "") As String


        Dim strResult As String = ""
        Select Case TIPODATO
            Case Encabezados.TIPODATO.TIP_STRING
                strResult = Encabezados.FORMATO.TIPODATO & "=" & Encabezados.TIPODATO.TIP_STRING
            Case Encabezados.TIPODATO.TIP_DECIMAL
                strResult = Encabezados.FORMATO.TIPODATO & "=" & Encabezados.TIPODATO.TIP_DECIMAL
            Case Encabezados.TIPODATO.TIP_INTEGER
        strResult = Encabezados.FORMATO.TIPODATO & "=" & Encabezados.TIPODATO.TIP_INTEGER
        'Case Encabezados.TIPODATO.TIP_DATE
        'strResult = Encabezados.FORMATO.TIPODATO & "=" & Encabezados.TIPODATO.TIP_DATE
            Case Else
        End Select

        If VALORFORMATO <> Encabezados.TIPOFORMATO.NINGUNO Then
            strResult += "|" & Encabezados.FORMATO.FORMATO & "=" & VALORFORMATO
        End If

        If VALORESPECIAL <> "" Then
            strResult += "|" & Encabezados.FORMATO.FORMATOESPECIAL & "=" & VALORESPECIAL
        End If
        Return strResult

    End Function

    Private Shared Function TipoFormato(ByVal Tipo As Encabezados.TIPOFORMATO) As String
        Dim strFormato As String = ""
        Select Case Tipo
            Case Encabezados.TIPOFORMATO.D0
                strFormato = "0"
            Case Encabezados.TIPOFORMATO.D1
                strFormato = "0.0"
            Case Encabezados.TIPOFORMATO.D2
                strFormato = "0.00"
            Case Encabezados.TIPOFORMATO.D3
                strFormato = "0.000"
            Case Encabezados.TIPOFORMATO.D4
                strFormato = "0.0000"
            Case Encabezados.TIPOFORMATO.D5
                strFormato = "0.00000"
        End Select
        Return strFormato
  End Function

  'Private Shared Function Alineacion(ByVal Tipo As Encabezados.ALINEACION) As String
  '  Dim strFormato As String = ""
  '  Select Case Tipo
  '    Case Encabezados.ALINEACION.NINGUNO

  '    Case Encabezados.ALINEACION.LEFT

  '    Case Encabezados.ALINEACION.CENTER

  '    Case Encabezados.ALINEACION.RIGHT

  '  End Select
  '  Return strFormato
  'End Function

    Public Shared Sub ExportExcelGenerico(ByVal loEncabezados As List(Of Encabezados), ByVal oDs As DataSet, Optional ByVal FormatFecha As Integer = 0)
        '=====================================================================
        Dim path As String = Application.StartupPath.ToString
        Dim archivo As String = "reporte" & HelpClass.NowNumeric & ".xls" 'xml
        Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

        Dim objWorkBook As New HSSFWorkbook()
        Dim memoryStream As New MemoryStream()
        Dim objWorkSheet As New HSSFSheet(objWorkBook)
        '=============Stilos======================
        Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCenter As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNothing As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontFiltro.FontHeight = 165

        Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
        oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontCab.FontHeight = 165


        Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.FontHeight = 170
        Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
        Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
        Estilos_Excel_NPOI(style, FORMATO.Normal)
        Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
        Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
        Estilos_Excel_NPOI(styleCenter, FORMATO.Fecha)

        Dim styleWrap As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleWrap = style
        styleWrap.WrapText = True

        Dim loFilroEncabezados As List(Of Encabezados)
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_FormatoNumero)

        If loFilroEncabezados.Count > 0 Then
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto, loFilroEncabezados(0).Descripcion)
        Else
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto, "-1")
        End If

        Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
        '============================================
        styleFiltro.SetFont(oFontFiltro)
        styleCab.SetFont(oFontCab)
        style.SetFont(oFont)
        styleTitulo.SetFont(oFontFiltro)
        styleNumber.SetFont(oFont)
        styleMonto.SetFont(oFont)
        styleFecha.SetFont(oFont)
        styleCenter.SetFont(oFont)

        '===================Se cargan Las Variables de Trabajo=====================
        Dim indice As Integer = 0
        Dim rowActual As Integer = 2
        Dim IndiceColum As Integer = 0
        Dim y As Integer = 0
        Dim txtFiltro As String = ""
        Dim n As Integer = 0
        Dim intCantidadRows As Integer = 0
        Dim intMaxColum As Integer = 20

        Dim flgRowInicio As Integer = 0
        Dim flgRowFin As Integer = 0
        Dim flgColumInicio As Integer = 0
        Dim flgColumFin As Integer = 0
        Dim lstrTempColum As New Hashtable
        Dim objTipoFormato As Encabezados.TIPOFORMATO
        'Dim objTipoAlineacion As Encabezados.ALINEACION



        '---------------Creamos los rows--------------
        For Each dt As Data.DataTable In oDs.Tables()
            intCantidadRows += dt.Rows.Count + 3
            If intMaxColum < dt.Rows.Count + 3 Then
                intMaxColum = dt.Rows.Count + 3
            End If
        Next

        intCantidadRows += loEncabezados.Count + 200
        'Busca  El Nombre de la Hoja
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_NameHoja)
        objWorkSheet = objWorkBook.CreateSheet(loFilroEncabezados(0).Descripcion)
        For s As Integer = 0 To (intCantidadRows)
            objWorkSheet.CreateRow(s)
        Next
        'Titulo Principal
        'Busca  El Nombre El Titulo
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Titulo)
        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(3).CellStyle = styleTitulo
        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(3).SetCellValue(loFilroEncabezados(0).Descripcion.Trim)
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 6))

        If loFilroEncabezados.Count > 0 Then
            indice = indice + 3
        End If

        '' Se crean Los Titulos de Los filtros
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Filtros)
        'Dim IndexFiltro As Integer = 0
        For Each objFiltro As Encabezados In loFilroEncabezados
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = objFiltro.Descripcion.Trim
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
            ' objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 1, indice - 1 + rowActual, 6))
            '  If IndexFiltro = 0 Then
            'IndexFiltro = 3
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 2))
            ' Else
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 5))
            ' IndexFiltro = 0
            indice = indice + 1
            ' End If
        Next

        '-------------------------------------------------
        If loFilroEncabezados.Count > 0 Then
            indice = indice + 2
        End If
        '===Generamos la Cabecera
        Dim odtg As DataTable = oDs.Tables(0)
        '' Se crear Los SubTitulos de Los filtros
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Encabezados)
        For Each objSub As Encabezados In loFilroEncabezados
            If odtg.TableName = objSub.IdEncabezado Then
                objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
                objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(objSub.Descripcion.Trim)
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 1, indice - 1 + rowActual, 2))
                indice = indice + 1
            End If
        Next

        indice += 1
        IndiceColum = 0

        'Las Cabeceras De la Grilla
        For j As Integer = 0 To odtg.Columns.Count - 1
            y = IndiceColum '+ 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y).CellStyle = styleCab
            Dim valorCab As String = odtg.Columns(j).ColumnName.ToString().Trim()
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).SetCellValue(valorCab)
            IndiceColum += 1
        Next

        'Generamos los Registros del Detalle

        'Dim Fecha As Date

        For i As Integer = 0 To odtg.Rows.Count - 1
            Dim txtFiltro_ As String = ""
            IndiceColum = 0
            For x As Integer = 0 To odtg.Columns.Count - 1
                y = IndiceColum '+ 1
                Dim celda As String = odtg.Rows(i).Item(x).ToString().Trim()

                Select Case DesencriptarTipodato(odtg.Columns(x).Caption)
                    Case Encabezados.TIPODATO.TIP_DECIMAL
                        Try
                            objTipoFormato = DesencriptarFormato(odtg.Columns(x).Caption)
                            If objTipoFormato <> Encabezados.TIPOFORMATO.OTRO Then
                                celda = String.Format(celda.ToString, TipoFormato(objTipoFormato))
                            Else
                                celda = String.Format(celda.ToString, DesencriptarOtroFormato(odtg.Columns(x).Caption))
                            End If
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            If IsNumeric(celda) Then
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            Else
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue("")
                            End If

                        Catch ex As Exception
                        End Try

                    Case Encabezados.TIPODATO.TIP_INTEGER
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                        If IsNumeric(celda) Then
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                        Else
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue("")
                        End If

                    Case Encabezados.TIPODATO.TIP_STRING
                        If odtg.Columns(x).ColumnName.Contains("Guía") Then
                            celda = HelpClass.SetFormatoGuiaRemision(celda)
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        Else
                            If celda.Contains(Chr(10)) Then
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                            Else
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                            End If
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        End If

                        'Case Encabezados.TIPODATO.TIP_DATE

                        '  Try
                        'If (Date.TryParse(celda, Fecha)) Then
                        '      celda = String.Format("{0:d}", CDate(celda), Alineacion(Encabezados.ALINEACION.CENTER))

                        '      objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                        '      objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        '    Else
                        '      celda = ""
                        '      objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                        '      objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        '    End If

                        '  Catch ex As Exception
                        '  End Try

                    Case Else
                        'Sin Tipo de Dato
                        If odtg.Columns(x).ColumnName.Contains("Guía") And odtg.Columns(x).ColumnName <> "Fecha Guía" Then
                            celda = HelpClass.SetFormatoGuiaRemision(celda)
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        ElseIf odtg.Columns(x).ColumnName.Contains("Hora") Then
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleCenter
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        ElseIf IsNumeric(celda) Then
                            If celda.Contains(".") Then
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                If celda.Contains(Chr(10)) Then
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                                Else
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                End If
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            End If
                        Else
                            If IsDate(celda) Then
                                'celda = String.Format("{0:d}", CDate(celda))
                                If FormatFecha = 1 Then celda = String.Format("{0:dd/MM/yyyy}", CDate(celda))
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                            Else
                                If celda.Length > 52 Then
                                    If IsNothing(lstrTempColum(y)) Then
                                        lstrTempColum.Add(y, y)
                                    End If
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                                Else
                                    If celda.Contains(Chr(10)) Then
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                    End If
                                End If
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                            End If
                        End If
                End Select

                IndiceColum += 1

            Next

            indice += 1
        Next
        indice += 4

        objWorkSheet.DefaultColumnWidth = 35
        objWorkSheet.DefaultRowHeightInPoints = 25

        For z As Integer = 0 To intMaxColum
            If IsNothing(lstrTempColum(z)) Then
                objWorkSheet.AutoSizeColumn(z)
            Else
                objWorkSheet.SetColumnWidth(z, 18663)
            End If
        Next

        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_NameDocument)
        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(archivo)

    End Sub

    Public Shared Sub ExportExcelGenerico_V1(ByVal loEncabezados As List(Of Encabezados), ByVal oDs As DataSet, Optional ByVal FormatFecha As Integer = 0)
        '=====================================================================
        Dim path As String = Application.StartupPath.ToString
        Dim archivo As String = "reporte" & HelpClass.NowNumeric & ".xls" 'xml
        Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

        Dim objWorkBook As New HSSFWorkbook()
        Dim memoryStream As New MemoryStream()
        Dim objWorkSheet As New HSSFSheet(objWorkBook)
        '=============Stilos======================
        Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCenter As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNothing As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontFiltro.FontHeight = 250

        Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont

        oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
        oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontCab.FontHeight = 170

        Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.FontHeight = 170

        Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
        Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
        Estilos_Excel_NPOI(style, FORMATO.Normal)
        Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
        Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
        Estilos_Excel_NPOI(styleCenter, FORMATO.Fecha)

        Dim styleWrap As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleWrap = style
        styleWrap.WrapText = True

        Dim loFilroEncabezados As List(Of Encabezados)
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_FormatoNumero)

        If loFilroEncabezados.Count > 0 Then
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto, loFilroEncabezados(0).Descripcion)
        Else
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto, "-1")
        End If

        Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
        '============================================
        styleFiltro.SetFont(oFontFiltro)
        styleCab.SetFont(oFontCab)
        style.SetFont(oFont)
        styleTitulo.SetFont(oFontFiltro)
        styleNumber.SetFont(oFont)
        styleMonto.SetFont(oFont)
        styleFecha.SetFont(oFont)
        styleCenter.SetFont(oFont)

        '===================Se cargan Las Variables de Trabajo=====================
        Dim indice As Integer = 0
        Dim rowActual As Integer = 2
        Dim IndiceColum As Integer = 0
        Dim y As Integer = 0
        Dim txtFiltro As String = ""
        Dim n As Integer = 0
        Dim intCantidadRows As Integer = 0
        Dim intMaxColum As Integer = 20

        Dim flgRowInicio As Integer = 0
        Dim flgRowFin As Integer = 0
        Dim flgColumInicio As Integer = 0
        Dim flgColumFin As Integer = 0
        Dim lstrTempColum As New Hashtable
        Dim objTipoFormato As Encabezados.TIPOFORMATO
        'Dim objTipoAlineacion As Encabezados.ALINEACION



        '---------------Creamos los rows--------------
        For Each dt As Data.DataTable In oDs.Tables()
            intCantidadRows += dt.Rows.Count + 3
            If intMaxColum < dt.Rows.Count + 3 Then
                intMaxColum = dt.Rows.Count + 3
            End If
        Next

        intCantidadRows += loEncabezados.Count + 200
        'Busca  El Nombre de la Hoja
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_NameHoja)
        objWorkSheet = objWorkBook.CreateSheet(loFilroEncabezados(0).Descripcion)
        For s As Integer = 0 To (intCantidadRows)
            objWorkSheet.CreateRow(s)
        Next
        'Titulo Principal
        'Busca  El Nombre El Titulo
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Titulo)
        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleTitulo
        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(loFilroEncabezados(0).Descripcion.Trim)
        'objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, oDs.Tables(0).Columns.Count - 1))
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, 1, oDs.Tables(0).Columns.Count - 1))

        If loFilroEncabezados.Count > 0 Then
            indice = indice + 3
        End If

        '' Se crean Los Titulos de Los filtros
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Filtros)
        'Dim IndexFiltro As Integer = 0
        For Each objFiltro As Encabezados In loFilroEncabezados
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = objFiltro.Descripcion.Trim
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
            ' objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 1, indice - 1 + rowActual, 6))
            '  If IndexFiltro = 0 Then
            'IndexFiltro = 3
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 2))
            ' Else
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 5))
            ' IndexFiltro = 0
            indice = indice + 1
            ' End If
        Next

        '-------------------------------------------------
        If loFilroEncabezados.Count > 0 Then
            indice = indice + 2
        End If
        '===Generamos la Cabecera
        Dim odtg As DataTable = oDs.Tables(0)
        '' Se crear Los SubTitulos de Los filtros
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Encabezados)
        For Each objSub As Encabezados In loFilroEncabezados
            If odtg.TableName = objSub.IdEncabezado Then
                objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
                objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(objSub.Descripcion.Trim)
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 1, indice - 1 + rowActual, 2))
                indice = indice + 1
            End If
        Next

        indice += 1
        IndiceColum = 0

        'Las Cabeceras De la Grilla
        For j As Integer = 0 To odtg.Columns.Count - 1
            y = IndiceColum '+ 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y).CellStyle = styleCab
            Dim valorCab As String = odtg.Columns(j).ColumnName.ToString().Trim()
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).SetCellValue(valorCab)
            If valorCab <> "Ultima Actualización" Then
                objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).Sheet.AutoSizeColumn(y, True)
            End If
            IndiceColum += 1
        Next

        'Generamos los Registros del Detalle

        'Dim Fecha As Date

        For i As Integer = 0 To odtg.Rows.Count - 1
            Dim txtFiltro_ As String = ""
            IndiceColum = 0
            For x As Integer = 0 To odtg.Columns.Count - 1
                y = IndiceColum '+ 1
                Dim celda As String = odtg.Rows(i).Item(x).ToString().Trim()

                Select Case DesencriptarTipodato(odtg.Columns(x).Caption)
                    Case Encabezados.TIPODATO.TIP_DECIMAL
                        Try
                            objTipoFormato = DesencriptarFormato(odtg.Columns(x).Caption)
                            If objTipoFormato <> Encabezados.TIPOFORMATO.OTRO Then
                                celda = String.Format(celda.ToString, TipoFormato(objTipoFormato))
                            Else
                                celda = String.Format(celda.ToString, DesencriptarOtroFormato(odtg.Columns(x).Caption))
                            End If
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            If IsNumeric(celda) Then
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            Else
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue("")
                            End If

                        Catch ex As Exception
                        End Try

                    Case Encabezados.TIPODATO.TIP_INTEGER
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                        If IsNumeric(celda) Then
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                        Else
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue("")
                        End If

                    Case Encabezados.TIPODATO.TIP_STRING
                        If odtg.Columns(x).ColumnName.Contains("Guía") Then
                            celda = HelpClass.SetFormatoGuiaRemision(celda)
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        Else
                            If celda.Contains(Chr(10)) Then
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                            Else
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                            End If
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        End If

                        'Case Encabezados.TIPODATO.TIP_DATE

                        '  Try
                        'If (Date.TryParse(celda, Fecha)) Then
                        '      celda = String.Format("{0:d}", CDate(celda), Alineacion(Encabezados.ALINEACION.CENTER))

                        '      objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                        '      objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        '    Else
                        '      celda = ""
                        '      objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                        '      objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        '    End If

                        '  Catch ex As Exception
                        '  End Try

                    Case Else
                        'Sin Tipo de Dato
                        If odtg.Columns(x).ColumnName.Contains("Guía") And odtg.Columns(x).ColumnName <> "Fecha Guía" Then
                            celda = HelpClass.SetFormatoGuiaRemision(celda)
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        ElseIf odtg.Columns(x).ColumnName.Contains("Hora") Then
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleCenter
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        ElseIf IsNumeric(celda) Then
                            If celda.Contains(".") Then
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                If celda.Contains(Chr(10)) Then
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                                Else
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                End If
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                            End If
                        Else
                            If IsDate(celda) Then
                                'celda = String.Format("{0:d}", CDate(celda))
                                If FormatFecha = 1 Then celda = String.Format("{0:dd/MM/yyyy}", CDate(celda))
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                            Else
                                If celda.Length > 52 Then
                                    If IsNothing(lstrTempColum(y)) Then
                                        lstrTempColum.Add(y, y)
                                    End If
                                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                                Else
                                    If celda.Contains(Chr(10)) Then
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                                    Else
                                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                                    End If
                                End If
                                objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                            End If
                        End If
                End Select

                IndiceColum += 1

            Next

            indice += 1
        Next
        indice += 4

        objWorkSheet.DefaultColumnWidth = 35
        objWorkSheet.DefaultRowHeightInPoints = 25

        For z As Integer = 0 To intMaxColum
            If IsNothing(lstrTempColum(z)) Then
                objWorkSheet.AutoSizeColumn(z)
            Else
                objWorkSheet.SetColumnWidth(z, 18663)
            End If
        Next

        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_NameDocument)
        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(archivo)

    End Sub

    Public Shared Sub ExportExcel_Pasajero(ByVal loEncabezados As List(Of Encabezados), ByVal oDs As DataSet)
        '=====================================================================

        Dim path As String = Application.StartupPath.ToString
        Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls" 'xml
        Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

        Dim objWorkBook As New HSSFWorkbook()
        Dim memoryStream As New MemoryStream()
        Dim objWorkSheet As New HSSFSheet(objWorkBook)
        '=============Stilos======================
        Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCenter As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNothing As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontFiltro.FontHeight = 165

        Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
        oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontCab.FontHeight = 165

        Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.FontHeight = 170
        Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
        Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
        Estilos_Excel_NPOI(style, FORMATO.Normal)
        Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
        Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
        Estilos_Excel_NPOI(styleCenter, FORMATO.Fecha)

        Dim loFilroEncabezados As List(Of Encabezados)
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_FormatoNumero)
        If loFilroEncabezados.Count > 0 Then
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
        Else
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)

        End If

        Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
        '============================================
        styleFiltro.SetFont(oFontFiltro)
        styleCab.SetFont(oFontCab)
        style.SetFont(oFont)
        styleTitulo.SetFont(oFontFiltro)
        styleNumber.SetFont(oFont)
        styleMonto.SetFont(oFont)
        styleFecha.SetFont(oFont)
        styleCenter.SetFont(oFont)

        '===================Se cargan Las Variables de Trabajo=====================
        Dim indice As Integer = 0
        Dim rowActual As Integer = 2
        Dim IndiceColum As Integer = 0
        Dim y As Integer = 0
        Dim txtFiltro As String = ""
        Dim n As Integer = 0
        Dim intCantidadRows As Integer = 0
        Dim intMaxColum As Integer = 20

        Dim flgRowInicio As Integer = 0
        Dim flgRowFin As Integer = 0
        Dim flgColumInicio As Integer = 0
        Dim flgColumFin As Integer = 0
        Dim lstrTempColum As New Hashtable

        '---------------Creamos los rows--------------
        For Each dt As Data.DataTable In oDs.Tables()
            intCantidadRows += dt.Rows.Count + 3
            If intMaxColum < dt.Rows.Count + 3 Then
                intMaxColum = dt.Rows.Count + 3
            End If
        Next

        intCantidadRows += loEncabezados.Count + 200
        'Busca  El Nombre de la Hoja
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_NameHoja)
        objWorkSheet = objWorkBook.CreateSheet(loFilroEncabezados(0).Descripcion)
        For s As Integer = 0 To (intCantidadRows)
            objWorkSheet.CreateRow(s)
        Next
        'Titulo Principal
        'Busca  El Nombre El Titulo
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Titulo)
        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(3).CellStyle = styleTitulo
        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(3).SetCellValue(loFilroEncabezados(0).Descripcion.Trim)
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 6))
        indice = indice + 3

        '' Se crean Los Titulos de Los filtros
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Filtros)
        'Dim IndexFiltro As Integer = 0
        For Each objFiltro As Encabezados In loFilroEncabezados
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = objFiltro.Descripcion.Trim
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
            ' objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 1, indice - 1 + rowActual, 6))
            '  If IndexFiltro = 0 Then
            'IndexFiltro = 3
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 2))
            ' Else
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 5))
            ' IndexFiltro = 0
            indice = indice + 1
            ' End If
        Next
        '-------------------------------------------------
        indice = indice + 2
        '===Generamos la Cabecera
        Dim odtg As DataTable = oDs.Tables(0)
        '' Se crear Los SubTitulos de Los filtros
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Encabezados)
        For Each objSub As Encabezados In loFilroEncabezados
            If odtg.TableName = objSub.IdEncabezado Then
                objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
                objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(objSub.Descripcion.Trim)
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 1, indice - 1 + rowActual, 2))
                indice = indice + 1
            End If
        Next
        indice += 1
        IndiceColum = 0

        'Las Cabeceras De la Grilla
        For j As Integer = 0 To odtg.Columns.Count - 1
            y = IndiceColum '+ 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y).CellStyle = styleCab
            Dim valorCab As String = odtg.Columns(j).ColumnName.ToString().Trim()
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).SetCellValue(valorCab)
            IndiceColum += 1
        Next
        'Generamos los Registros del Detalle
        For i As Integer = 0 To odtg.Rows.Count - 1
            Dim txtFiltro_ As String = ""
            IndiceColum = 0
            For x As Integer = 0 To odtg.Columns.Count - 1
                y = IndiceColum '+ 1
                Dim celda As String = odtg.Rows(i).Item(x).ToString().Trim()
                If odtg.Columns(x).ColumnName.Contains("Guía") Then
                    celda = HelpClass.SetFormatoGuiaRemision(celda)
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                ElseIf odtg.Columns(x).ColumnName.Contains("Hora") Then
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleCenter
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                ElseIf IsNumeric(celda) Then
                    If celda.Contains(".") Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                    Else
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    End If
                Else
                    If IsDate(celda) Then
                        celda = String.Format("{0:d}", CDate(celda))
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                    Else
                        If celda.Length > 52 Then
                            Dim styleWrap As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                            styleWrap = style
                            styleWrap.WrapText = True
                            If IsNothing(lstrTempColum(y)) Then
                                lstrTempColum.Add(y, y)
                            End If
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                        Else
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                        End If
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

                    End If
                End If
                IndiceColum += 1
            Next
            indice += 1
        Next
        indice += 4

        objWorkSheet.DefaultColumnWidth = 35
        objWorkSheet.DefaultRowHeightInPoints = 25

        For z As Integer = 0 To intMaxColum
            If IsNothing(lstrTempColum(z)) Then
                objWorkSheet.AutoSizeColumn(z)
            Else
                objWorkSheet.SetColumnWidth(z, 18663)
            End If
        Next

        CreaHojaExcelResumen(objWorkBook, loEncabezados, oDs.Tables(1))
        CreaHojaExcelResumen(objWorkBook, loEncabezados, oDs.Tables(2))
        CreaHojaExcelResumen(objWorkBook, loEncabezados, oDs.Tables(3))

        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_NameDocument)


        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(archivo)

    End Sub

    Private Shared Sub CreaHojaExcelResumen(ByVal objWorkBook As HSSFWorkbook, ByVal loEncabezados As List(Of Encabezados), ByVal odtResumen As DataTable)
        '================================================================================
        'Crea la Nueva Hoja Para El resumen general
        Dim objWorkSheet As New HSSFSheet(objWorkBook)

        Dim loFilroEncabezados As List(Of Encabezados)
        IdEncabezado = odtResumen.TableName
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_NameHoja_ID)
        objWorkSheet = objWorkBook.CreateSheet(loFilroEncabezados(0).Descripcion)


        '=============Stilos======================
        Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        style.WrapText = True
        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleTextNegitra As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNumberNegitra As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontFiltro.FontHeight = 165

        Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
        oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontCab.FontHeight = 165

        Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.FontHeight = 170


        Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
        Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
        Estilos_Excel_NPOI(style, FORMATO.Normal)
        Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
        Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
        Estilos_Excel_NPOI(styleTextNegitra, FORMATO.TextBold)
        Estilos_Excel_NPOI(styleNumberNegitra, FORMATO.TotalBold)



        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_FormatoNumero)
        If loFilroEncabezados.Count > 0 Then
            Estilos_Excel_NPOI(styleMonto, loFilroEncabezados(0).Descripcion)
        Else
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
        End If

        Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
        '============================================
        styleFiltro.SetFont(oFontFiltro)
        styleCab.SetFont(oFontCab)
        style.SetFont(oFont)
        styleTitulo.SetFont(oFontFiltro)
        styleNumber.SetFont(oFont)
        styleMonto.SetFont(oFont)
        styleFecha.SetFont(oFont)
        styleTextNegitra.SetFont(oFontFiltro)
        styleNumberNegitra.SetFont(oFontFiltro)


        '============================================
        '============================================
        'Se envian 2 Tablas Filtro Y Resumen.

        Dim indice As Integer = 0
        Dim rowActual As Integer = 2
        Dim IndiceColum As Integer = 0
        Dim y As Integer = 0
        Dim txtFiltro As String = ""

        Dim intCantidadRows As Integer = 0
        Dim intMaxColum As Integer = 20

        Dim flgRowInicio As Integer = 0
        Dim flgRowFin As Integer = 0
        Dim flgColumInicio As Integer = 0
        Dim flgColumFin As Integer = 0
        Dim lstrTempColum As New Hashtable

        '---------------Creamos los rows--------------
        intCantidadRows = odtResumen.Rows.Count + 200 + loEncabezados.Count

        For s As Integer = 0 To (intCantidadRows)
            objWorkSheet.CreateRow(s)
        Next

        ' El Titulo
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Titulo_ID)
        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleTitulo
        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(loFilroEncabezados(0).Descripcion.Trim)
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 3))
        indice = indice + 2

        '' Se crean Los Titulos de Los filtros
        loFilroEncabezados = loEncabezados.FindAll(AddressOf SeachOBjobjEncabezados_Filtros)
        'Dim IndexFiltro As Integer = 0
        For Each objFiltro As Encabezados In loFilroEncabezados
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = objFiltro.Descripcion.Trim
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
            ' objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 1, indice - 1 + rowActual, 6))
            '  If IndexFiltro = 0 Then
            'IndexFiltro = 3
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 2))
            ' Else
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 5))
            ' IndexFiltro = 0
            indice = indice + 1
            ' End If
        Next
        '-------------------------------------------------
        indice = indice + 2
        indice += 1
        IndiceColum = 0

        'Las Cabeceras De la Grilla
        For j As Integer = 0 To odtResumen.Columns.Count - 1
            y = IndiceColum '+ 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(y).CellStyle = styleCab
            Dim valorCab As String = odtResumen.Columns(j).ColumnName.ToString().Trim()
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(y).SetCellValue(valorCab)
            IndiceColum += 1
        Next
        'Generamos los Registros del Detalle

        'Arupamos Por Cliente
        Dim RowInicioTemp As Integer = indice
        Dim lstInicioReg As New List(Of String)

        Dim oDtClientes As DataTable = SelectDistinct(odtResumen, "Cliente")

        For Each ClienteRow As DataRow In oDtClientes.Rows

            Dim odtResumenTemp As DataTable
            odtResumenTemp = RowToDatatable(odtResumen.Select("Cliente = '" + ClienteRow("Cliente").ToString + "'"), odtResumen)

            For i As Integer = 0 To odtResumenTemp.Rows.Count - 1
                Dim txtFiltro_ As String = ""
                IndiceColum = 0
                For x As Integer = 0 To odtResumenTemp.Columns.Count - 1
                    y = IndiceColum '+ 1
                    Dim celda As String = odtResumenTemp.Rows(i).Item(x).ToString().Trim()

                    If IsNumeric(celda) Then
                        If celda.Contains(".") Then
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                        ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        Else
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                        End If
                    Else
                        If IsDate(celda) Then
                            celda = String.Format("{0:d}", CDate(celda))
                            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                        Else
                            If celda.Length > 8 Then
                                Dim styleWrap As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
                                styleWrap = style
                                styleWrap.WrapText = True
                                If IsNothing(lstrTempColum(y)) Then
                                    lstrTempColum.Add(y, y)
                                End If
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleWrap
                            Else
                                objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                            End If
                            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

                        End If
                    End If
                    IndiceColum += 1
                Next
                indice += 1
            Next

            'Totales Por cada Cliente
            For x As Integer = 0 To odtResumenTemp.Columns.Count - 1
                If odtResumenTemp.Columns(x).Caption = "SUBTOTAL" Then
                    Dim sumKg As String = "SUM(" & HelpClass.LetraNumero(x + 1) & _
                        (RowInicioTemp + rowActual + 1).ToString & ":" & HelpClass.LetraNumero(x + 1) & _
                        (indice + rowActual).ToString & ")"
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(x).CellStyle = styleNumberNegitra
                    objWorkSheet.GetRow(indice + rowActual).GetCell(x).CellFormula = (sumKg)
                Else
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(x).CellStyle = styleTextNegitra
                End If
            Next

            objWorkSheet.GetRow(indice + rowActual).GetCell(1).SetCellValue("SUB TOTAL")

            ''Merge Por Cliente
            objWorkSheet.GetRow(RowInicioTemp + rowActual).GetCell(0).CellStyle = styleTextNegitra
            objWorkSheet.GetRow(RowInicioTemp + rowActual + 1).GetCell(0).SetCellValue("")

            Dim Region2 As New NPOI.SS.Util.Region(RowInicioTemp + rowActual + 1, 0, indice + rowActual, 0)
            objWorkSheet.AddMergedRegion(Region2)
            RowInicioTemp = indice + 1
            indice = indice + 1
            lstInicioReg.Add(indice + rowActual)
        Next

        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

        objWorkSheet.SetColumnWidth(0, 10000)
        For z As Integer = 1 To odtResumen.Columns.Count - 3
            objWorkSheet.AutoSizeColumn(z)
        Next

        objWorkSheet.SetColumnWidth(2, 15000)

        'Suma El total Por Todos Los Clientes
        For x As Integer = 0 To odtResumen.Columns.Count - 1
            If odtResumen.Columns(x).Caption = "SUBTOTAL" Then
                Dim strSum As String
                strSum = "SUM("
                For reg As Integer = 0 To lstInicioReg.Count - 2
                    strSum = strSum & HelpClass.LetraNumero(x + 1) & lstInicioReg(reg).ToString & ","
                Next
                strSum = strSum & HelpClass.LetraNumero(x + 1) & lstInicioReg(lstInicioReg.Count - 1).ToString & ")"

                objWorkSheet.GetRow(indice + rowActual).CreateCell(x).CellStyle = styleNumberNegitra
                objWorkSheet.GetRow(indice + rowActual).GetCell(x).CellFormula = (strSum)

            Else
                objWorkSheet.GetRow(indice + rowActual).CreateCell(x).CellStyle = styleTextNegitra
            End If
        Next
        objWorkSheet.GetRow(indice + rowActual).GetCell(1).SetCellValue("TOTALES")


        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

        indice += 4
        objWorkSheet.DefaultColumnWidth = 35
        objWorkSheet.DefaultRowHeightInPoints = 25
        objWorkSheet.SetColumnWidth(0, 10000)
        For z As Integer = 1 To odtResumen.Columns.Count
            objWorkSheet.AutoSizeColumn(z)
        Next
    End Sub

    Private Shared Function SeachOBjobjEncabezados_NameDocument(ByVal objEncabezados As Encabezados) As Boolean
        Dim retorno As Boolean = False
        retorno = objEncabezados.Tipo = Encabezados.TipoEncabezado.FILENAME
        Return retorno
    End Function

    Private Shared Function SeachOBjobjEncabezados_NameHoja(ByVal objEncabezados As Encabezados) As Boolean
        Dim retorno As Boolean = False
        retorno = objEncabezados.Tipo = Encabezados.TipoEncabezado.HOJA
        Return retorno
    End Function

    Private Shared Function SeachOBjobjEncabezados_FormatoNumero(ByVal objEncabezados As Encabezados) As Boolean
        Dim retorno As Boolean = False
        retorno = objEncabezados.Tipo = Encabezados.TipoEncabezado.DECIMALES
        Return retorno
    End Function

    Private Shared Function SeachOBjobjEncabezados_Header(ByVal objEncabezados As Encabezados) As Boolean
        Dim retorno As Boolean = False
        retorno = objEncabezados.Tipo = Encabezados.TipoEncabezado.HEADER
        Return retorno
    End Function

    Private Shared Function SeachOBjobjEncabezados_NameHoja_ID(ByVal objEncabezados As Encabezados) As Boolean
        Dim retorno As Boolean = False
        retorno = objEncabezados.Tipo = Encabezados.TipoEncabezado.HOJA AndAlso objEncabezados.IdEncabezado = IdEncabezado
        Return retorno
    End Function

    Private Shared Function SeachOBjobjEncabezados_Titulo_ID(ByVal objEncabezados As Encabezados) As Boolean
        Dim retorno As Boolean = False
        retorno = objEncabezados.Tipo = Encabezados.TipoEncabezado.TITULO AndAlso objEncabezados.IdEncabezado = IdEncabezado
        Return retorno
    End Function

    Public Shared Function SelectDistinct(ByVal SourceTable As DataTable, ByVal ParamArray FieldNames() As String) As DataTable
        Dim lastValues() As Object
        Dim newTable As DataTable

        If FieldNames Is Nothing OrElse FieldNames.Length = 0 Then
            Throw New ArgumentNullException("FieldNames")
        End If

        lastValues = New Object(FieldNames.Length - 1) {}
        newTable = New DataTable

        For Each field As String In FieldNames
            newTable.Columns.Add(field, SourceTable.Columns(field).DataType)
        Next

        For Each Row As DataRow In SourceTable.Select("", String.Join(", ", FieldNames))
            If Not fieldValuesAreEqual(lastValues, Row, FieldNames) Then
                newTable.Rows.Add(createRowClone(Row, newTable.NewRow(), FieldNames))

                setLastValues(lastValues, Row, FieldNames)
            End If
        Next

        Return newTable
    End Function

    Private Shared Function fieldValuesAreEqual(ByVal lastValues() As Object, ByVal currentRow As DataRow, ByVal fieldNames() As String) As Boolean
        Dim areEqual As Boolean = True

        For i As Integer = 0 To fieldNames.Length - 1
            If lastValues(i) Is Nothing OrElse Not lastValues(i).Equals(currentRow(fieldNames(i))) Then
                areEqual = False
                Exit For
            End If
        Next

        Return areEqual
    End Function

    Private Shared Function createRowClone(ByVal sourceRow As DataRow, ByVal newRow As DataRow, ByVal fieldNames() As String) As DataRow
        For Each field As String In fieldNames
            newRow(field) = sourceRow(field)
        Next

        Return newRow
    End Function

    Private Shared Sub setLastValues(ByVal lastValues() As Object, ByVal sourceRow As DataRow, ByVal fieldNames() As String)
        For i As Integer = 0 To fieldNames.Length - 1
            lastValues(i) = sourceRow(fieldNames(i))
        Next
    End Sub

    Private Shared Function SeachOBjobjEncabezados_Titulo(ByVal objEncabezados As Encabezados) As Boolean
        Dim retorno As Boolean = False
        retorno = objEncabezados.Tipo = Encabezados.TipoEncabezado.TITULO
        Return retorno
    End Function

    Private Shared Function SeachOBjobjEncabezados_Filtros(ByVal objEncabezados As Encabezados) As Boolean
        Dim retorno As Boolean = False
        retorno = objEncabezados.Tipo = Encabezados.TipoEncabezado.FILTRO
        Return retorno
    End Function

    Private Shared Function SeachOBjobjEncabezados_Encabezados(ByVal objEncabezados As Encabezados) As Boolean
        Dim retorno As Boolean = False
        retorno = objEncabezados.Tipo = Encabezados.TipoEncabezado.ENCABEZADO
        Return retorno
    End Function



    Public Shared Function TransformarGrilla(ByVal gv As DataGridView, ByVal odtg As DataTable) As DataTable
        ''Limpiamos las Columnas que no estan en la Grilla
        Dim bol As Boolean = False
        For Columnax As Integer = odtg.Columns.Count - 1 To 0 Step -1
            bol = False
            For Columna As Integer = 0 To gv.Columns.Count - 1
                If gv.Columns(Columna).Visible = True AndAlso gv.Columns(Columna).DataPropertyName.Trim.Equals(odtg.Columns(Columnax).ColumnName.Trim) Then
                    bol = True
                    Exit For
                End If
            Next
            If bol = False Then
                odtg.Columns.RemoveAt(Columnax)
            End If
        Next

        'Nombre Para los Detalles
        ''Cambiamos los Indices de las Columnas (Ordenamos el Detalle)
        '-------------------------------------------------
        For Columna As Integer = 0 To gv.Columns.Count - 1
            For ColumnaX As Integer = 0 To odtg.Columns.Count - 1
                If gv.Columns(Columna).DataPropertyName.Trim = odtg.Columns(ColumnaX).ColumnName Then
                    odtg.Columns(ColumnaX).ColumnName = gv.Columns(Columna).HeaderText.Trim
                End If
            Next
        Next

        '-------------------------------------------------
        Dim colum As New Data.DataColumn
        Dim dtCopyColum As DataTable = odtg.Clone

        Dim intIndexDetalle As Integer
        For Columna As Integer = 0 To gv.Columns.Count - 1
            For Each colum In dtCopyColum.Columns
                If gv.Columns(Columna).HeaderText.Trim = colum.ColumnName Then
                    odtg.Columns(colum.ColumnName).SetOrdinal(intIndexDetalle)
                    odtg.Columns(colum.ColumnName).ColumnName = gv.Columns(Columna).HeaderText.Trim
                    odtg.Columns(colum.ColumnName).Caption = gv.Columns(Columna).DataPropertyName.Trim
                    intIndexDetalle += 1
                End If
            Next
        Next
        Return odtg
        '-------------------------------------------------
    End Function

  Public Shared Sub ExportExcelDespacho(ByVal Title As String, ByVal loCabecera As Hashtable, ByVal oDs As DataSet, ByVal gv As DataGridView)
    '=====================================================================
    Dim path As String = Application.StartupPath.ToString
    Dim archivo As String = "Reporte Valorizado" & HelpClass.NowNumeric & ".xls" 'xml
    Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

    Dim objWorkBook As New HSSFWorkbook()
    Dim memoryStream As New MemoryStream()
    Dim objWorkSheet As New HSSFSheet(objWorkBook)

    Dim odtg As New DataTable
    Dim odtFiltro As New DataTable
    Dim odtTotales As New DataTable
    Dim odtTemp As New DataTable
    odtg = oDs.Tables(0)


    '=============Stilos======================

    Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
    Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
    Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
    ' style.WrapText = True
    Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
    Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
    Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
    Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
    Dim styleTotales As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
    Dim styleTextNegitra As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

    Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
    oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
    oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
    oFontFiltro.FontHeight = 165

    Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
    oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
    oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
    oFontCab.FontHeight = 165

    Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
    oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
    oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
    oFont.FontHeight = 170

    Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
    Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
    Estilos_Excel_NPOI(style, FORMATO.Normal)
    Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
    Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
    Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
    Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
    Estilos_Excel_NPOI(styleTotales, FORMATO.TotalBold)
    Estilos_Excel_NPOI(styleTextNegitra, FORMATO.TextBold)
    '============================================
    styleFiltro.SetFont(oFontFiltro)
    styleCab.SetFont(oFontCab)
    style.SetFont(oFont)
    styleTitulo.SetFont(oFontFiltro)
    styleNumber.SetFont(oFont)
    styleMonto.SetFont(oFont)
    styleFecha.SetFont(oFont)
    styleTotales.SetFont(oFontFiltro)
    styleTextNegitra.SetFont(oFontFiltro)
    '===================Se cargan Las Variables de Trabajo=====================
    Dim TotalKG As Double = 0
    Dim TotalM3 As Double = 0
    Dim TotalBUL As Double = 0
    Dim indice As Integer = 1
    Dim rowActual As Integer = 1
    Dim IndiceColum As Integer = 0

    'Dim indiceRowAnt As Integer = 1
    Dim y As Integer = 0 'Posicion Inicial por la Izquierda
    Dim txtFiltro As String = "" 'Valor del filtro en posicion Inicial Actual
    Dim txtFiltro2 As String = "" 'Valor del filtro en posicion Final Actual
    Dim addEspacios As Integer = 8

    '---------------Creamos los rows--------------
    objWorkSheet = objWorkBook.CreateSheet(Title.ToString.Trim)
    For s As Integer = 0 To (odtg.Rows.Count + 10 + loCabecera.Count + addEspacios)
      objWorkSheet.CreateRow(s)
    Next
    'Titulo Principal
    objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(3).CellStyle = styleTitulo
    txtFiltro = loCabecera("TITULO").ToString()
    objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(3).SetCellValue(txtFiltro)
    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 6))
    indice = indice + 3

    ''Se crear Los Titulos de Los filtros

    For Each de As DictionaryEntry In loCabecera
      If Not de.Key.ToString.Equals("TITULO") Then
        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(de.Key.ToString)
        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(1).CellStyle = styleFiltro
        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(1).SetCellValue(de.Value.ToString)
        indice = indice + 1
      End If
    Next de

    '  For Xfiltro As Integer = 1 To loCabecera.Count - 1
    'objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
    ' txtFiltro = loCabecera(Xfiltro).ToString()
    ' objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
    '  objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5))
    'indice = indice + 1
    ' Next

    ''Limpiamos las Columnas que no estan en la Grilla
    Dim bol As Boolean = False
    For Columnax As Integer = odtg.Columns.Count - 1 To 0 Step -1
      bol = False
      For Columna As Integer = 0 To gv.Columns.Count - 1
        If gv.Columns(Columna).Name.Trim.Equals(odtg.Columns(Columnax).ColumnName.Trim) Then
          bol = True
          Exit For
        End If
      Next
      If bol = False Then
        odtg.Columns.RemoveAt(Columnax)
      End If
    Next

    'Nombre Para los Detalles
    'Cambiamos los Indices de las Columnas (Ordenamos el Detalle)
    '-------------------------------------------------
    Dim intCountColum As Integer = 1
    For Columna As Integer = 0 To gv.Columns.Count - 1
      For ColumnaX As Integer = 0 To odtg.Columns.Count - 1
        If gv.Columns(Columna).Name.Trim = odtg.Columns(ColumnaX).ColumnName Then
          odtg.Columns(ColumnaX).ColumnName = gv.Columns(Columna).HeaderText.Trim
        End If
      Next
    Next

    '-------------------------------------------------
    Dim colum As New Data.DataColumn
    Dim dtCopyColum As DataTable = odtg.Clone

    Dim intIndexDetalle As Integer
    For Columna As Integer = 0 To gv.Columns.Count - 1
      For Each colum In dtCopyColum.Columns
        If gv.Columns(Columna).HeaderText.Trim = colum.ColumnName Then
          odtg.Columns(colum.ColumnName).SetOrdinal(intIndexDetalle)
          odtg.Columns(colum.ColumnName).ColumnName = gv.Columns(Columna).HeaderText.Trim
          intIndexDetalle += 1
        End If
      Next
    Next

    '--------------------------------------------------------------------------------------------------

    'Copiamos los Valores en un Temporal Para Realizar la Suma de los Totales por NSEQIN
    odtTemp = odtg.Copy
    If Not odtg.Columns("NSEQIN") Is Nothing Then
      odtg.Columns.Remove("NSEQIN")
    End If

        indice = indice + 1
        Dim INICIO, FIN As Integer
        INICIO = 32
        FIN = 10
        Dim intTramo As Integer = 1
        Dim intMedio As Integer = 1

    For j As Integer = 0 To odtg.Columns.Count - 1
      objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
      Dim valorCab As String = odtg.Columns(j).ColumnName.ToString().Trim()
      If valorCab.IndexOf("_") <> -1 Then
        Select Case Split(valorCab, "_")(0)
          Case 1
            intMedio = 1
          Case 2
            intMedio = 3
          Case 3
            intMedio = 2
        End Select
        valorCab = Split(valorCab, "_")(1) + " " + HelpClass.ConvierteLetraCapital((HelpClass.MedioEnvioConvertString(intMedio)).ToString)
      End If
      objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(IndiceColum).SetCellValue(valorCab)

      'Crea los Tramos de la Cabecera Superior
      Dim intnumColum As Integer


      If j > 0 AndAlso FIN - INICIO = 10 Then
        If (odtg.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
          For intnumColum = 0 To 9
            objWorkSheet.GetRow(indice - 2 + rowActual).CreateCell(IndiceColum + intnumColum).CellStyle = styleCab
          Next
          Dim valorCab1 As String = "MEDIO DE ENVIO " + HelpClass.MedioEnvioConvertString(intTramo).ToString
          objWorkSheet.GetRow(indice - 2 + rowActual).GetCell(IndiceColum).SetCellValue(valorCab1)
          Dim Region As New NPOI.SS.Util.Region(indice + rowActual - 2, INICIO, indice + rowActual - 2, FIN - 1)
          objWorkSheet.AddMergedRegion(Region)
          INICIO = FIN
          intTramo += 1
        End If

      End If
      FIN = FIN + 1
      IndiceColum = IndiceColum + 1
    Next

    '=================================================================

    Dim drTemp As DataRow = Nothing
    'Generamos los Registros del Detalle
    For i As Integer = 0 To odtg.Rows.Count - 1
      '  Dim txtFiltro_ As String = ""
      IndiceColum = 0
      For x As Integer = 0 To odtg.Columns.Count - 1
        y = IndiceColum
        Dim celda As String = odtg.Rows(i).Item(x).ToString().Trim()

        If drTemp IsNot Nothing _
           AndAlso odtTemp.Rows(i).Item("CLIENTE").ToString = drTemp.Item("CLIENTE") _
           AndAlso odtTemp.Rows(i).Item("PLANTA").ToString = drTemp.Item("PLANTA") _
           AndAlso odtTemp.Rows(i).Item("BULTO").ToString = drTemp.Item("BULTO") _
           AndAlso odtTemp.Rows(i).Item("NSEQIN").ToString = drTemp.Item("NSEQIN") Then
          If Not odtg.Columns(x).ColumnName.ToString.Trim.Contains("_") AndAlso _
          Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Guía Remisión") AndAlso _
          Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Medio Envio G/R") AndAlso _
          Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Transportista") AndAlso _
          Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Placa") AndAlso _
          Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Acoplado") Then
            celda = ""
          End If
        End If

        If odtg.Columns(x).ColumnName.Equals("Guía Remisión") Then
          celda = HelpClass.SetFormatoGuiaRemision(celda)
          objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
          objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
        ElseIf odtg.Columns(x).ColumnName.Equals("Orden de Compra") Then
          objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
          objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

        ElseIf odtg.Columns(x).ColumnName.ToLower.Contains("cuenta") Then
          objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
          objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

        ElseIf odtg.Columns(x).ColumnName.ToLower.Contains("acoplado") Then
          objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
          objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(ExisteCero(celda))
        ElseIf IsNumeric(celda) Then
          If celda.Contains(".") Then
            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
          ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
          Else
            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
          End If
        Else
          If IsDate(celda) Then
            celda = String.Format("{0:d}", CDate(celda))
            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
            objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
          Else
            objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
            objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
          End If
        End If
        IndiceColum = IndiceColum + 1


      Next
      'TotalBUL += Convert.ToDouble(odtg.Rows(i)(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")))
      'TotalKG += Convert.ToDouble(odtg.Rows(i)(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")))
      'TotalM3 += Convert.ToDouble(odtg.Rows(i)("Volumen Bulto"))
      drTemp = odtTemp.Rows(i)
      indice = indice + 1
    Next

    Dim dt As DataTable = SelectDistinct(odtTemp, "PLANTA", "CLIENTE", "Bulto", "NSEQIN", IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida"), IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido"), "Volumen Bulto")

    For Each dr As DataRow In dt.Rows
      TotalBUL += Convert.ToDouble(dr(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")))
      TotalKG += Convert.ToDouble(dr(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")))
      TotalM3 += Convert.ToDouble(dr("Volumen Bulto"))
    Next

    indice = indice + 1

    '===Validaindicetotalesmos  ToTALES
    objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal - 1).CellStyle = styleTotales
    objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal - 1).SetCellValue("TOTAL")
    txtFiltro2 = TotalBUL
    If txtFiltro2 = "" Then txtFiltro2 = "0"
    objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal).CellStyle = styleTotales
    objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))
    txtFiltro2 = TotalKG
    If txtFiltro2 = "" Then txtFiltro2 = "0"
    objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")).Ordinal).CellStyle = styleTotales
    objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")).Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))
    txtFiltro2 = TotalM3
    If txtFiltro2 = "" Then txtFiltro2 = "0"
    objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns("Volumen Bulto").Ordinal).CellStyle = styleTotales
    objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns("Volumen Bulto").Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))
    indice = indice + 1

    objWorkSheet.DefaultColumnWidth = 25
    For z As Integer = 0 To odtg.Columns.Count + 1
      objWorkSheet.AutoSizeColumn(z)
      If z = 0 Then
        objWorkSheet.SetColumnWidth(0, 10000)
      End If
    Next


    'create the anchor
    Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
    Dim anchor As New HSSFClientAnchor(0, 0, 0, 0, 0, 0, 0, 0)
    If IO.File.Exists(Application.StartupPath & "\Resources\Logo_Ransa.png") Then
      'load the picture and get the picture index in the workbook
      Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & "\Resources\Logo_Ransa.png", objWorkBook)), HSSFPicture)
      'Reset the image to the original size.
      picture.Resize(0.5)
    End If

    '----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    '----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    'SE CREA LOS RESUMENES CON NUEVAS HOJAS
    'EN CASO HUBIERA MAS RESUMENES SE TENDRIA EDITAR

    For intSheet As Integer = 1 To oDs.Tables.Count - 2
    
      If Not oDs.Tables(intSheet) Is Nothing AndAlso oDs.Tables(intSheet).Namespace <> "" Then
        objWorkSheet = New HSSFSheet(objWorkBook)
        Dim odtResumen As New DataTable
        odtResumen = oDs.Tables(intSheet)
        objWorkSheet = objWorkBook.CreateSheet(odtResumen.Namespace.ToString)
        For s As Integer = 0 To (odtResumen.Rows.Count * 3 + loCabecera.Count + 60 + addEspacios)
          objWorkSheet.CreateRow(s)
        Next
        indice = 4
        'Se crear Los Titulos de Los filtros en la Nueva Hoja
        'For Xfiltro As Integer = 1 To loCabecera.Count - 1
        '  objWorkSheet.GetRow(indice - 1).CreateCell(0).CellStyle = styleFiltro
        '  txtFiltro = loCabecera(Xfiltro).ToString()
        '  objWorkSheet.GetRow(indice - 1).GetCell(0).SetCellValue(txtFiltro)
        '  objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1, 0, indice - 1, 5))
        '  indice = indice + 1
        'Next

        For Each de As DictionaryEntry In loCabecera
          If Not de.Key.ToString.Equals("TITULO") Then
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(de.Key.ToString)
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(1).CellStyle = styleFiltro
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(1).SetCellValue(de.Value.ToString)
            indice = indice + 1
          End If
        Next de
        indice = indice + 2
        '===Generamos la Cabecera Del Resumen
                If intSheet = 1 Then
                    INICIO = 2
                Else
                    INICIO = 3
                End If
                'Inicializacion de Variables doble cabecera
                'Variable INICIO = Posicion Inicial de la columna con doble cabecera empesando desde 0
                'Variable FIN = Nro Intervalos
                'Y en la  condicion para generar las cabeceras en un grupo es INICIO - FIN = Nro Intervalos
                If odtResumen.TableName.Equals("DT_Resumen_MedioEnvio") Then
                    INICIO = 4
                    FIN = 3
                    For j As Integer = 0 To odtResumen.Columns.Count - 1
                        y = j
                        objWorkSheet.GetRow(indice - 1).CreateCell(y).CellStyle = styleCab
                        If odtResumen.Columns(j).ColumnName.Equals("ORDEN_COMPRA") OrElse _
                         odtResumen.Columns(j).ColumnName.Equals("MEDIO_ENVIO") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("SENTIDO_CARGA") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("TIPO_UNIDAD") Then
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(odtResumen.Columns(j).ColumnName.ToString().Trim())
                        Else
                            Dim valorCab As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(0)
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(valorCab)
                        End If

                        If j > 0 AndAlso FIN - INICIO = 3 Then
                            If intSheet = 1 OrElse (odtResumen.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
                                'se crean las celdas por cada Intervalo
                                objWorkSheet.GetRow(indice - 2).CreateCell(y).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 1).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 2).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 3).CellStyle = styleCab
                                Dim valorCab1 As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(1)
                                objWorkSheet.GetRow(indice - 2).GetCell(y).SetCellValue(valorCab1)
                                Dim Region As New NPOI.SS.Util.Region(indice - 2, INICIO, indice - 2, FIN)
                                objWorkSheet.AddMergedRegion(Region)
                                INICIO = FIN + 1
                            End If
                        End If
                        FIN = FIN + 1
                    Next
                Else

                    INICIO = 3
                    FIN = 3
                    For j As Integer = 0 To odtResumen.Columns.Count - 1
                        y = j
                        objWorkSheet.GetRow(indice - 1).CreateCell(y).CellStyle = styleCab
                        If odtResumen.Columns(j).ColumnName.Equals("CUENTA") OrElse _
                         odtResumen.Columns(j).ColumnName.Equals("MEDIO_ENVIO") OrElse _
                         odtResumen.Columns(j).ColumnName.Equals("SENTIDO_CARGA") OrElse _
                         odtResumen.Columns(j).ColumnName.Equals("TIPO_UNIDAD") Then
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(odtResumen.Columns(j).ColumnName.ToString().Trim())
                        Else
                            Dim valorCab As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(0)
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(valorCab)
                        End If

                        If j > 0 AndAlso FIN - INICIO = 3 Then
                            If intSheet = 1 OrElse (odtResumen.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
                                'se crean las celdas por cada Intervalo
                                objWorkSheet.GetRow(indice - 2).CreateCell(y).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 1).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 2).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 3).CellStyle = styleCab
                                Dim valorCab1 As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(1)
                                objWorkSheet.GetRow(indice - 2).GetCell(y).SetCellValue(valorCab1)
                                Dim Region As New NPOI.SS.Util.Region(indice - 2, INICIO, indice - 2, FIN)
                                objWorkSheet.AddMergedRegion(Region)
                                INICIO = FIN + 1
                            End If
                        End If
                        FIN = FIN + 1
                    Next
                End If

                Dim oDtClientes As DataTable = oDs.Tables("DT_Clientes")
                Dim ClienteRow As DataRow
                Dim RowInicioTemp As Integer = indice
                Dim RowInicioTemp2 As Integer = indice
                Dim RowInicioTemp3 As Integer = indice
                Dim lstInicioReg As New List(Of String)

                For Each ClienteRow In oDtClientes.Rows
                    Dim drSelFiltro As DataRow()
                    Dim drSelFiltroSentido As DataRow()
                    Dim drSelFiltroLote As DataRow()
                    Dim odtResumenTemp2 As New DataTable
                    Dim odtResumenTempCliente As New DataTable
                    drSelFiltro = odtResumen.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString + "'")
                    odtResumenTempCliente = RowToDatatable(drSelFiltro, odtResumen)

                    For i As Integer = 0 To odtResumenTempCliente.Rows.Count - 1
                        RowInicioTemp2 = indice
                        'Agrupa Por Medio de Envio 
                        drSelFiltroSentido = odtResumenTempCliente.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString + "' and MEDIO_ENVIO = '" + odtResumenTempCliente.Rows(i)("MEDIO_ENVIO").ToString.Trim + "'")
                        odtResumenTemp2 = RowToDatatable(drSelFiltroSentido, odtResumenTempCliente)
                        If odtResumenTempCliente.TableName.Equals("DT_Resumen_MedioEnvio") Then

                            For j As Integer = 0 To drSelFiltroSentido.Length - 1
                                'Agrupa por Lotes
                                RowInicioTemp3 = indice
                                drSelFiltroLote = odtResumenTemp2.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString + "' and MEDIO_ENVIO = '" + odtResumenTemp2.Rows(j)("MEDIO_ENVIO").ToString.Trim + "' and LOTE = '" + odtResumenTemp2.Rows(j)("LOTE").ToString.Trim + "'")
                                For Each RowTemp2 As DataRow In drSelFiltroLote
                                    IndiceColum = 0
                                    For x As Integer = 0 To odtResumenTempCliente.Columns.Count - 1 '
                                        y = IndiceColum
                                        Dim celda As String = RowTemp2.Item(x).ToString().Trim()
                                        If odtResumen.Columns(x).ColumnName.Equals("CUENTA") Then
                                            objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                            objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                        ElseIf IsNumeric(celda) Then
                                            If celda.Contains(".") Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleMonto
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                            ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                            Else
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleNumber
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                            End If
                                        Else
                                            If IsDate(celda) Then
                                                celda = String.Format("{0:d}", CDate(celda))
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleFecha
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                            Else
                                                objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                                objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                            End If
                                        End If
                                        IndiceColum = IndiceColum + 1
                                    Next
                                    indice = indice + 1
                                Next
                                objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = style
                                objWorkSheet.GetRow(indice).CreateCell(2).CellStyle = styleTextNegitra
                                objWorkSheet.GetRow(indice).GetCell(2).SetCellValue("SUB TOTAL")
                                For x As Integer = 4 To odtResumenTempCliente.Columns.Count
                                    Dim sumKg As String = "SUM(" & HelpClass.LetraNumero(x) & (RowInicioTemp3 + 1).ToString & ":" & HelpClass.LetraNumero(x) & (indice).ToString & ")"
                                    objWorkSheet.GetRow(indice).CreateCell(x - 1).CellStyle = styleTotales
                                    objWorkSheet.GetRow(indice).GetCell(x - 1).CellFormula = (sumKg)
                                Next
                                objWorkSheet.GetRow(indice).GetCell(3).CellFormula = ""
                                indice = indice + 1

                                ' ''Merge Por cada Lote
                                If RowInicioTemp3 < indice - 1 Then
                                    Dim Region As New NPOI.SS.Util.Region(RowInicioTemp3, 2, indice - 2, 2)
                                    objWorkSheet.AddMergedRegion(Region)
                                End If
                                j += drSelFiltroLote.Length - 1

                            Next
                            i += drSelFiltroSentido.Length - 1
                        Else
                            ''Otros Reportes
                            For j As Integer = 0 To drSelFiltroSentido.Length - 1

                                IndiceColum = 0
                                For x As Integer = 0 To odtResumenTempCliente.Columns.Count - 1 '
                                    y = IndiceColum
                                    Dim celda As String = odtResumenTemp2.Rows(j).Item(x).ToString().Trim()
                                    If odtResumen.Columns(x).ColumnName.Equals("ORDEN_COMPRA") Then
                                        objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                        objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                    ElseIf IsNumeric(celda) Then
                                        If celda.Contains(".") Then
                                            objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleMonto
                                            objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                        ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                            objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                            objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleNumber
                                            objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                        End If
                                    Else
                                        If IsDate(celda) Then
                                            celda = String.Format("{0:d}", CDate(celda))
                                            objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleFecha
                                            objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                            objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                        End If
                                    End If
                                    IndiceColum = IndiceColum + 1
                                Next
                                indice = indice + 1
                            Next
                            i += drSelFiltroSentido.Length - 1
                        End If

                        If odtResumenTempCliente.TableName.Equals("DT_Resumen_MedioEnvio") Then

                            objWorkSheet.GetRow(indice).CreateCell(0).CellStyle = style
                            objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = styleTextNegitra
                            objWorkSheet.GetRow(indice).GetCell(1).SetCellValue("SUB TOTAL")

                            For x As Integer = 3 To odtResumenTempCliente.Columns.Count
                                Dim strRango As String = HelpClass.LetraNumero(x) & (RowInicioTemp2 + 1).ToString & ":" & HelpClass.LetraNumero(x) & (indice).ToString
                                Dim strRango2 As String = HelpClass.LetraNumero(3) & (RowInicioTemp2 + 1).ToString & ":" & HelpClass.LetraNumero(3) & (indice).ToString

                                Dim sumKg As String = "SUMIF(" & strRango2 & " ," & HelpClass.LetraNumero(3) & (indice).ToString & " , " & strRango & ")"
                                objWorkSheet.GetRow(indice).CreateCell(x - 1).CellStyle = styleTotales
                                objWorkSheet.GetRow(indice).GetCell(x - 1).CellFormula = (sumKg)
                            Next
                            objWorkSheet.GetRow(indice).GetCell(2).CellFormula = ""
                            objWorkSheet.GetRow(indice).GetCell(3).CellFormula = ""
                            indice = indice + 1

                            'Merge Por cada Medio Transporte
                            If RowInicioTemp2 < indice - 1 Then
                                Dim Region As New NPOI.SS.Util.Region(RowInicioTemp2, 1, indice - 2, 1)
                                objWorkSheet.AddMergedRegion(Region)
                            End If
                        Else
                            'Merge Por cada Medio de Transporte para el Resumen por Cuentas
                            objWorkSheet.GetRow(indice).CreateCell(0).CellStyle = style
                            objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = styleTextNegitra
                            objWorkSheet.GetRow(indice).GetCell(1).SetCellValue("SUB TOTAL")
                            '

                            For x As Integer = 3 To odtResumenTempCliente.Columns.Count
                                Dim sumKg As String = "SUM(" & HelpClass.LetraNumero(x) & (RowInicioTemp2 + 1).ToString & ":" & HelpClass.LetraNumero(x) & (indice).ToString & ")"
                                objWorkSheet.GetRow(indice).CreateCell(x - 1).CellStyle = styleTotales
                                objWorkSheet.GetRow(indice).GetCell(x - 1).CellFormula = (sumKg)
                            Next
                            objWorkSheet.GetRow(indice).GetCell(2).CellFormula = ""
                            indice = indice + 1

                            If RowInicioTemp2 < indice - 1 Then
                                Dim Region As New NPOI.SS.Util.Region(RowInicioTemp2, 1, indice - 2, 1)
                                objWorkSheet.AddMergedRegion(Region)
                            End If
                        End If
                        RowInicioTemp2 = indice + 1
                    Next
                    indice = indice - 1
                    'Merge Por Cliente
                    objWorkSheet.GetRow(RowInicioTemp).GetCell(0).CellStyle = styleTextNegitra
                    Dim Region2 As New NPOI.SS.Util.Region(RowInicioTemp, 0, indice, 0)
                    objWorkSheet.AddMergedRegion(Region2)
                    RowInicioTemp = indice + 1
                    indice = indice + 1
                    lstInicioReg.Add(indice)
                Next

                objWorkSheet.SetColumnWidth(0, 10000)
                For z As Integer = 1 To odtResumen.Columns.Count - 3
                    objWorkSheet.AutoSizeColumn(z)
                Next
                objWorkSheet.SetColumnWidth(2, 10000)
                'End If
                patriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                anchor = New HSSFClientAnchor(0, 0, 0, 0, 0, 0, 0, 0)
                'Dim anchor As New HSSFClientAnchor(0, 0, 0, 0, 0, 0, 0, 0)
                If IO.File.Exists(Application.StartupPath & "\Resources\Logo_Ransa.png") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & "\Resources\Logo_Ransa.png", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If
            End If
        Next
        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(archivo)
    End Sub


  Public Shared Function ExisteCero(ByVal N As String) As String
    If Trim(N).ToString = "0" OrElse Trim(N) = "" Then
      Return ""
    Else
      Return N
    End If
  End Function

    Public Shared Sub ExportExcel_Consistencias(ByVal oDsSinReembolso As DataSet, ByVal oDsConReembolso As DataSet, Optional ByVal CantDetalles As Integer = 1)
        Try
            Dim path As String = Application.StartupPath.ToString
            Dim archivo As String = path & "reporte" & HelpClass.NowNumeric & ".xls"
            Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

            Dim opeTempIni As String = ""
            Dim opeTempCom As String = ""

            Dim objWorkBook As New HSSFWorkbook()
            Dim objWorkSheet As New HSSFSheet(objWorkBook)
            Dim objWorkSheet2 As New HSSFSheet(objWorkBook)


            '================================SIN REEMBLSO================================'
            Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
            Dim stylePorcentaje As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

            Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
            oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontTitulo.FontHeight = 180

            Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
            oFontFiltro.FontHeight = 165

            Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
            oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFontCab.FontHeight = 165

            Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
            oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
            oFont.FontHeight = 170

            Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
            Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
            Estilos_Excel_NPOI(style, FORMATO.Normal)
            Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
            Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
            Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)

            Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
            Estilos_Excel_NPOI(stylePorcentaje, FORMATO.Porcentaje)

            '============================================
            '============SIN REEMBOLSO==================='
            styleCab.SetFont(oFontCab)
            style.SetFont(oFont)
            styleTitulo.SetFont(oFontTitulo)
            styleNumber.SetFont(oFont)
            styleMonto.SetFont(oFont)

            styleFecha.SetFont(oFont)
            stylePorcentaje.SetFont(oFont)

            '---------------SIN REEMBOLSO----------------'
            Dim odtDetalleSinReem As New DataTable
            odtDetalleSinReem = oDsSinReembolso.Tables(0)

            Dim odtFiltroSinReem As New DataTable
            odtFiltroSinReem = oDsSinReembolso.Tables(1)

            Dim odtResumenSinReem As New DataTable
            odtResumenSinReem = oDsSinReembolso.Tables(2)

            Dim odtResLoteSinReem As New DataTable
            odtResLoteSinReem = oDsSinReembolso.Tables(3)

            '-----------------REEMBOLSO------------------'
            Dim odtDetalleConReem As New DataTable
            odtDetalleConReem = oDsConReembolso.Tables(0)

            Dim odtFiltroConReem As New DataTable
            odtFiltroConReem = oDsConReembolso.Tables(1)

            Dim odtResumenConReem As New DataTable
            odtResumenConReem = oDsConReembolso.Tables(2)

            Dim odtResLoteConReem As New DataTable
            odtResLoteConReem = oDsConReembolso.Tables(3)

            Dim odtCIConReem As New DataTable
            If oDsConReembolso.Tables.Count = 5 Then odtCIConReem = oDsConReembolso.Tables(4)




            For d As Integer = 0 To CantDetalles - 1

                Dim rowActual As Integer = 6
                Dim rowActualRe As Integer = 6
                If odtDetalleSinReem.Rows.Count > 0 Then
                    objWorkSheet = objWorkBook.CreateSheet(odtDetalleSinReem.TableName & Convert.ToString(d + 1))
                    objWorkSheet.CreateRow(3)
                End If
                If odtDetalleConReem.Rows.Count > 0 Then
                    objWorkSheet2 = objWorkBook.CreateSheet(odtDetalleConReem.TableName & Convert.ToString(d + 1))
                    objWorkSheet2.CreateRow(3)
                End If


                odtDetalleSinReem = oDsSinReembolso.Tables(0)
                odtDetalleConReem = oDsConReembolso.Tables(0)


                Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
                Dim patriarch2 As HSSFPatriarch = DirectCast(objWorkSheet2.CreateDrawingPatriarch(), HSSFPatriarch)
                'create the anchor
                Dim anchor As HSSFClientAnchor
                anchor = New HSSFClientAnchor(0, 0, 0, 120, 0, 0, _
                 0, 0)
                If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If
                If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If

                If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch2.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If
                If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
                    'load the picture and get the picture index in the workbook
                    Dim picture As HSSFPicture = DirectCast(patriarch2.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
                    'Reset the image to the original size.
                    picture.Resize(0.5)
                End If
                '************************************************************************'
                '*************************  ******SIN REEMBOLSO****************************'
                Dim valorFiltro As String = ""
                For i As Integer = 0 To odtFiltroSinReem.Rows.Count - 1
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = style
                    objWorkSheet.GetRow(rowActual).CreateCell(1).CellStyle = style
                    valorFiltro = odtFiltroSinReem.Rows(i).Item("Filtro")
                    objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue(valorFiltro)
                    valorFiltro = odtFiltroSinReem.Rows(i).Item("Valor")
                    objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue(valorFiltro)
                    rowActual = rowActual + 1
                Next
                rowActual = rowActual + 1
                '===========Titulo es centrado segun tamaño de grilla===========                  
                objWorkSheet.CreateRow(rowActual).Height = 400
                objWorkSheet.GetRow(rowActual).CreateCell(0).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).GetCell(0).SetCellValue("Reporte Consistencia")
                objWorkSheet.AddMergedRegion((New NPOI.SS.Util.Region(rowActual, 0, rowActual, odtDetalleSinReem.Columns.Count - 1)))
                rowActual = rowActual + 1

                '************************************************************************'
                '*******************************REEMBOLSO********************************'
                Dim valorFiltro2 As String = ""
                For i As Integer = 0 To odtFiltroConReem.Rows.Count - 1
                    objWorkSheet2.CreateRow(rowActualRe)
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(0).CellStyle = style
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(1).CellStyle = style
                    valorFiltro2 = odtFiltroConReem.Rows(i).Item("Filtro")
                    objWorkSheet2.GetRow(rowActualRe).GetCell(0).SetCellValue(valorFiltro2)
                    valorFiltro2 = odtFiltroConReem.Rows(i).Item("Valor")
                    objWorkSheet2.GetRow(rowActualRe).GetCell(1).SetCellValue(valorFiltro2)
                    rowActualRe = rowActualRe + 1
                Next
                rowActualRe = rowActualRe + 1
                '===========Titulo es centrado segun tamaño de grilla===========                  
                objWorkSheet2.CreateRow(rowActualRe).Height = 400
                objWorkSheet2.GetRow(rowActualRe).CreateCell(0).CellStyle = styleCab
                objWorkSheet2.GetRow(rowActualRe).GetCell(0).SetCellValue("Reporte Consistencia")
                objWorkSheet2.AddMergedRegion((New NPOI.SS.Util.Region(rowActualRe, 0, rowActualRe, odtDetalleConReem.Columns.Count - 1)))
                rowActualRe = rowActualRe + 1

                '**********************************************************************'
                '**************************SIN REEMBOLSO*******************************'

                '===================Se cargan Las Cabeceras=====================
                objWorkSheet.CreateRow(rowActual)
                For x As Integer = 0 To odtDetalleSinReem.Columns.Count - 1
                    '===Estilo===
                    objWorkSheet.GetRow(rowActual).CreateCell(x).CellStyle = styleCab
                    Dim valorCab As String = odtDetalleSinReem.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet.GetRow(rowActual).GetCell(x).SetCellValue(valorCab)
                Next
                rowActual = rowActual + 1

                '===================Se Carga El Detalle==========================
                For i As Integer = 0 To odtDetalleSinReem.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)

                    For x As Integer = 0 To odtDetalleSinReem.Columns.Count - 1
                        Dim celda As String = odtDetalleSinReem.Rows(i).Item(x).ToString().Trim()
                        If i = 0 And odtDetalleSinReem.Columns(x).ColumnName = "Operacion" Then 'COGE EL PRIMER registro 
                            opeTempIni = celda
                        End If
                        If i > 0 And odtDetalleSinReem.Columns(x).ColumnName = "Operacion" Then 'A partir del segundo registro empieza a validar
                            opeTempCom = celda
                            If opeTempCom = opeTempIni Then 'Si se repite operacion  Pintar Blanco
                                celda = ""
                            Else
                                opeTempIni = celda
                            End If
                        End If
                        If odtDetalleSinReem.Columns(x).ColumnName.ToString.Trim = "OC" Then
                            objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = style
                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                            Continue For
                        End If
                        If IsNumeric(celda) And celda = "0" Or celda = "0.000" Then celda = " "
                        If IsNumeric(celda) Then
                            If celda.Contains(".") Then

                                If odtDetalleSinReem.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Or odtDetalleSinReem.Columns(x).ColumnName.ToString.Trim = "FEE" Then
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = stylePorcentaje
                                Else
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleMonto
                                End If




                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleNumber
                            End If
                            If x = 0 Then
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                            Else
                                If celda.Substring(0, 1) = "0" And celda.Length > 1 Then

                                    If odtDetalleSinReem.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Or odtDetalleSinReem.Columns(x).ColumnName.ToString.Trim = "FEE" Then
                                        objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda) / 100)
                                    Else
                                        objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                                    End If

                                ElseIf celda.Length > 10 Then
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda.ToString)
                                Else
                                    If odtDetalleSinReem.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Or odtDetalleSinReem.Columns(x).ColumnName.ToString.Trim = "FEE" Then
                                        objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda) / 100)
                                    Else
                                        If odtDetalleSinReem.Columns(x).ColumnName.ToString.Trim = "T/C" Then
                                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                                        Else
                                            objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(Convert.ToDouble(celda))
                                        End If

                                    End If
                                End If
                            End If
                        Else
                            If IsDate(celda) Then
                                celda = String.Format("{0:d}", CDate(celda))
                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).CellStyle = styleFecha
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).SetCellValue(celda)
                            Else

                                objWorkSheet.GetRow(i + rowActual).CreateCell(x).SetCellValue(celda.ToString.Trim)
                                objWorkSheet.GetRow(i + rowActual).GetCell(x).CellStyle = style


                            End If
                        End If
                    Next
                Next
                rowActual = rowActual + odtDetalleSinReem.Rows.Count + 2
                '===================Se Carga El Resumen=============================
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.CreateRow(rowActual + 1)
                For i As Integer = 1 To 7
                    objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                Next
                objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("RESUMEN SERVICIOS")
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 1, rowActual, 7))
                rowActual = rowActual + 1
                objWorkSheet.GetRow(rowActual).GetCell(1).SetCellValue("Cod. Tarifa")
                objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("Descripción")
                objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Moneda")
                objWorkSheet.GetRow(rowActual).GetCell(4).SetCellValue("Tarifa")
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue("Cantidad")
                objWorkSheet.GetRow(rowActual).GetCell(6).SetCellValue("Monto Soles")
                objWorkSheet.GetRow(rowActual).GetCell(7).SetCellValue("Monto Dolares")
                rowActual = rowActual + 1
                For i As Integer = 0 To odtResumenSinReem.Rows.Count - 1
                    objWorkSheet.CreateRow(i + rowActual)
                    For x As Integer = 0 To odtResumenSinReem.Columns.Count - 1
                        Dim celda As String = odtResumenSinReem.Rows(i).Item(x).ToString().Trim()
                        Dim posCelda As Integer = x + 1
                        If IsNumeric(celda) Then
                            If celda.Contains(".") Then
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleMonto
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleNumber
                            End If
                            objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(Convert.ToDouble(celda))
                        Else
                            If IsDate(celda) Then
                                celda = String.Format("{0:d}", CDate(celda))
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).CellStyle = styleFecha
                                objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).SetCellValue(celda)
                            Else
                                objWorkSheet.GetRow(i + rowActual).CreateCell(posCelda).SetCellValue(odtResumenSinReem.Rows(i).Item(x).ToString().Trim())
                                objWorkSheet.GetRow(i + rowActual).GetCell(posCelda).CellStyle = style
                            End If
                        End If
                    Next
                Next

                Dim cIniS As String
                Dim cIniD As String
                cIniS = "G" & (rowActual).ToString
                cIniD = "H" & (rowActual).ToString

                rowActual = objWorkSheet.LastRowNum + 1
                Dim cFinS As String
                Dim cFinD As String
                cFinS = "G" & (rowActual).ToString
                cFinD = "H" & (rowActual).ToString
                objWorkSheet.CreateRow(rowActual)
                objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleCab
                objWorkSheet.GetRow(rowActual).CreateCell(6).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual).CreateCell(7).CellStyle = styleMonto
                objWorkSheet.GetRow(rowActual).GetCell(5).SetCellValue("Total")
                Dim dblTotalSoles As String = "SUM(" & cIniS & ":" & cFinS & ")"
                Dim dblTotalDolares As String = "SUM(" & cIniD & ":" & cFinD & ")"
                objWorkSheet.GetRow(rowActual).GetCell(6).CellFormula() = (dblTotalSoles)
                objWorkSheet.GetRow(rowActual).GetCell(7).CellFormula() = (dblTotalDolares)
                '===================================================================
                If odtResLoteSinReem.Rows.Count > 0 Then
                    '===================Se Carga El Resumen por Lote====================
                    rowActual += 2
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.CreateRow(rowActual + 1)
                    For i As Integer = 2 To 5
                        objWorkSheet.GetRow(rowActual).CreateCell(i).CellStyle = styleCab
                        objWorkSheet.GetRow(rowActual + 1).CreateCell(i).CellStyle = styleCab
                    Next
                    objWorkSheet.GetRow(rowActual).GetCell(2).SetCellValue("RESUMEN POR LOTE")
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(rowActual, 2, rowActual, 5))
                    rowActual += 1
                    For x As Integer = 0 To odtResLoteSinReem.Columns.Count - 1
                        objWorkSheet.GetRow(rowActual).GetCell(x + 2).SetCellValue(odtResLoteSinReem.Columns(x).ColumnName)
                    Next
                    rowActual += 1
                    For i As Integer = 0 To odtResLoteSinReem.Rows.Count - 1
                        objWorkSheet.CreateRow(i + rowActual)
                        For x As Integer = 0 To odtResLoteSinReem.Columns.Count - 1
                            Dim celda As String = odtResLoteSinReem.Rows(i).Item(x).ToString().Trim()
                            Select Case odtResLoteSinReem.Columns(x).ColumnName
                                Case "SOLES", "DOLARES"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = styleMonto
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda))
                                Case "LOTE", "MONEDA"
                                    objWorkSheet.GetRow(i + rowActual).CreateCell(x + 2).CellStyle = style
                                    objWorkSheet.GetRow(i + rowActual).GetCell(x + 2).SetCellValue(celda)
                            End Select
                        Next
                    Next

                    '=======suma los totales del lote==================
                    cIniS = String.Empty
                    cIniD = String.Empty
                    dblTotalSoles = 0
                    dblTotalDolares = 0

                    cIniS = "E" & (rowActual + 1).ToString
                    cIniD = "F" & (rowActual + 1).ToString
                    rowActual = rowActual + odtResLoteSinReem.Rows.Count + 1
                    cFinS = String.Empty
                    cFinD = String.Empty
                    cFinS = "E" & (rowActual).ToString
                    cFinD = "F" & (rowActual).ToString
                    objWorkSheet.CreateRow(rowActual)
                    objWorkSheet.GetRow(rowActual).CreateCell(3).CellStyle = styleCab
                    objWorkSheet.GetRow(rowActual).CreateCell(4).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).CreateCell(5).CellStyle = styleMonto
                    objWorkSheet.GetRow(rowActual).GetCell(3).SetCellValue("Total")
                    dblTotalSoles = "SUM(" & cIniS & ":" & cFinS & ")"
                    dblTotalDolares = "SUM(" & cIniD & ":" & cFinD & ")"
                    objWorkSheet.GetRow(rowActual).GetCell(4).CellFormula() = (dblTotalSoles)
                    objWorkSheet.GetRow(rowActual).GetCell(5).CellFormula() = (dblTotalDolares)

                End If

                '************************************************************************'
                '********************************REEMBOLSO*******************************'
                '===================Se cargan Las Cabeceras=====================
                objWorkSheet2.CreateRow(rowActualRe)
                For x As Integer = 0 To odtDetalleConReem.Columns.Count - 1
                    '===Estilo===
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(x).CellStyle = styleCab
                    Dim valorCab2 As String = odtDetalleConReem.Columns(x).ColumnName.ToString().Trim()
                    objWorkSheet2.GetRow(rowActualRe).GetCell(x).SetCellValue(valorCab2)
                Next
                rowActualRe = rowActualRe + 1

                '===================Se Carga El Detalle==========================
                For i As Integer = 0 To odtDetalleConReem.Rows.Count - 1
                    objWorkSheet2.CreateRow(i + rowActualRe)

                    For x As Integer = 0 To odtDetalleConReem.Columns.Count - 1
                        Dim celda2 As String = odtDetalleConReem.Rows(i).Item(x).ToString().Trim()
                        If i = 0 And odtDetalleConReem.Columns(x).ColumnName = "Operacion" Then 'COGE EL PRIMER registro 
                            opeTempIni = celda2
                        End If
                        If i > 0 And odtDetalleConReem.Columns(x).ColumnName = "Operacion" Then 'A partir del segundo registro empieza a validar
                            opeTempCom = celda2
                            If opeTempCom = opeTempIni Then 'Si se repite operacion  Pintar Blanco
                                celda2 = ""
                            Else
                                opeTempIni = celda2
                            End If
                        End If
                        If odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "OC" Then
                            objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x).CellStyle = style
                            objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(celda2.ToString)
                            Continue For
                        End If
                        If IsNumeric(celda2) And celda2 = "0" Or celda2 = "0.000" Then celda2 = " "
                        If IsNumeric(celda2) Then
                            If celda2.Contains(".") Then

                                If odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Or odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "FEE" Then
                                    objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x).CellStyle = stylePorcentaje
                                Else
                                    objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x).CellStyle = styleMonto
                                End If




                            Else
                                objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x).CellStyle = styleNumber
                            End If
                            If x = 0 Then
                                objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(celda2.ToString)
                            Else
                                If celda2.Substring(0, 1) = "0" And celda2.Length > 1 Then

                                    If odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Or odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "FEE" Then
                                        objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(Convert.ToDouble(celda2) / 100)
                                    ElseIf odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "Monto a Cobrar" Then
                                        objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(Convert.ToDouble(celda2))
                                    Else
                                        objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(celda2.ToString)
                                    End If

                                ElseIf celda2.Length > 10 Then
                                    If odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "Monto a Cobrar" Then
                                        objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(Convert.ToDouble(celda2))
                                    Else
                                        objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(celda2.ToString)
                                    End If

                                Else
                                    If odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "PORCENTAJE" Or odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "FEE" Then
                                        objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(Convert.ToDouble(celda2) / 100)
                                    Else
                                        If odtDetalleConReem.Columns(x).ColumnName.ToString.Trim = "T/C" Then
                                            objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(celda2)
                                        Else
                                            objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(Convert.ToDouble(celda2))
                                        End If

                                    End If
                                End If
                            End If
                        Else
                            If IsDate(celda2) Then
                                celda2 = String.Format("{0:d}", CDate(celda2))
                                objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x).CellStyle = styleFecha
                                objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).SetCellValue(celda2)
                            Else

                                objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x).SetCellValue(celda2.ToString.Trim)
                                objWorkSheet2.GetRow(i + rowActualRe).GetCell(x).CellStyle = style


                            End If
                        End If
                    Next
                Next
                rowActualRe = rowActualRe + odtDetalleConReem.Rows.Count + 2
                '===================Se Carga El Resumen=============================
                objWorkSheet2.CreateRow(rowActualRe)
                objWorkSheet2.CreateRow(rowActualRe + 1)
                For i As Integer = 1 To 7
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(i).CellStyle = styleCab
                    objWorkSheet2.GetRow(rowActualRe + 1).CreateCell(i).CellStyle = styleCab
                Next
                objWorkSheet2.GetRow(rowActualRe).GetCell(1).SetCellValue("RESUMEN SERVICIOS")
                objWorkSheet2.AddMergedRegion(New NPOI.SS.Util.Region(rowActualRe, 1, rowActualRe, 7))
                rowActualRe = rowActualRe + 1
                objWorkSheet2.GetRow(rowActualRe).GetCell(1).SetCellValue("Cod. Tarifa")
                objWorkSheet2.GetRow(rowActualRe).GetCell(2).SetCellValue("Descripción")
                objWorkSheet2.GetRow(rowActualRe).GetCell(3).SetCellValue("Moneda")
                objWorkSheet2.GetRow(rowActualRe).GetCell(4).SetCellValue("Tarifa")
                objWorkSheet2.GetRow(rowActualRe).GetCell(5).SetCellValue("Cantidad")
                objWorkSheet2.GetRow(rowActualRe).GetCell(6).SetCellValue("Monto Soles")
                objWorkSheet2.GetRow(rowActualRe).GetCell(7).SetCellValue("Monto Dolares")
                rowActualRe = rowActualRe + 1
                For i As Integer = 0 To odtResumenConReem.Rows.Count - 1
                    objWorkSheet2.CreateRow(i + rowActualRe)
                    For x As Integer = 0 To odtResumenConReem.Columns.Count - 1
                        Dim celda As String = odtResumenConReem.Rows(i).Item(x).ToString().Trim()
                        Dim posCelda As Integer = x + 1
                        If IsNumeric(celda) Then
                            If celda.Contains(".") Then
                                objWorkSheet2.GetRow(i + rowActualRe).CreateCell(posCelda).CellStyle = styleMonto
                            Else
                                objWorkSheet2.GetRow(i + rowActualRe).CreateCell(posCelda).CellStyle = styleNumber
                            End If
                            objWorkSheet2.GetRow(i + rowActualRe).GetCell(posCelda).SetCellValue(Convert.ToDouble(celda))
                        Else
                            If IsDate(celda) Then
                                celda = String.Format("{0:d}", CDate(celda))
                                objWorkSheet2.GetRow(i + rowActualRe).CreateCell(posCelda).CellStyle = styleFecha
                                objWorkSheet2.GetRow(i + rowActualRe).GetCell(posCelda).SetCellValue(celda)
                            Else
                                objWorkSheet2.GetRow(i + rowActualRe).CreateCell(posCelda).SetCellValue(odtResumenConReem.Rows(i).Item(x).ToString().Trim())
                                objWorkSheet2.GetRow(i + rowActualRe).GetCell(posCelda).CellStyle = style
                            End If
                        End If
                    Next
                Next

                Dim cIniSReem As String
                Dim cIniDReem As String
                cIniSReem = "G" & (rowActualRe).ToString
                cIniDReem = "H" & (rowActualRe).ToString

                rowActualRe = objWorkSheet2.LastRowNum + 1
                Dim cFinSReem As String
                Dim cFinDReem As String
                cFinSReem = "G" & (rowActualRe).ToString
                cFinDReem = "H" & (rowActualRe).ToString
                objWorkSheet2.CreateRow(rowActualRe)
                objWorkSheet2.GetRow(rowActualRe).CreateCell(5).CellStyle = styleCab
                objWorkSheet2.GetRow(rowActualRe).CreateCell(6).CellStyle = styleMonto
                objWorkSheet2.GetRow(rowActualRe).CreateCell(7).CellStyle = styleMonto
                objWorkSheet2.GetRow(rowActualRe).GetCell(5).SetCellValue("Total")
                Dim dblTotalSolesReem As String = "SUM(" & cIniSReem & ":" & cFinSReem & ")"
                Dim dblTotalDolaresReem As String = "SUM(" & cIniDReem & ":" & cFinDReem & ")"
                objWorkSheet2.GetRow(rowActualRe).GetCell(6).CellFormula() = (dblTotalSolesReem)
                objWorkSheet2.GetRow(rowActualRe).GetCell(7).CellFormula() = (dblTotalDolaresReem)
                '===================================================================
                If odtResLoteConReem.Rows.Count > 0 Then
                    '===================Se Carga El Resumen por Lote====================
                    rowActualRe += 2
                    objWorkSheet2.CreateRow(rowActualRe)
                    objWorkSheet2.CreateRow(rowActualRe + 1)
                    For i As Integer = 2 To 5
                        objWorkSheet2.GetRow(rowActualRe).CreateCell(i).CellStyle = styleCab
                        objWorkSheet2.GetRow(rowActualRe + 1).CreateCell(i).CellStyle = styleCab
                    Next
                    objWorkSheet2.GetRow(rowActualRe).GetCell(2).SetCellValue("RESUMEN POR LOTE")
                    objWorkSheet2.AddMergedRegion(New NPOI.SS.Util.Region(rowActualRe, 2, rowActualRe, 5))
                    rowActualRe += 1
                    For x As Integer = 0 To odtResLoteConReem.Columns.Count - 1
                        objWorkSheet2.GetRow(rowActualRe).GetCell(x + 2).SetCellValue(odtResLoteConReem.Columns(x).ColumnName)
                    Next
                    rowActualRe += 1
                    For i As Integer = 0 To odtResLoteConReem.Rows.Count - 1
                        objWorkSheet2.CreateRow(i + rowActualRe)
                        For x As Integer = 0 To odtResLoteConReem.Columns.Count - 1
                            Dim celda As String = odtResLoteConReem.Rows(i).Item(x).ToString().Trim()
                            Select Case odtResLoteConReem.Columns(x).ColumnName
                                Case "SOLES", "DOLARES"
                                    objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x + 2).CellStyle = styleMonto
                                    objWorkSheet2.GetRow(i + rowActualRe).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda))
                                Case "LOTE", "MONEDA"
                                    objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x + 2).CellStyle = style
                                    objWorkSheet2.GetRow(i + rowActualRe).GetCell(x + 2).SetCellValue(celda)
                            End Select
                        Next
                    Next

                    '=======suma los totales del lote==================
                    cIniSReem = String.Empty
                    cIniDReem = String.Empty
                    dblTotalSolesReem = 0
                    dblTotalDolaresReem = 0

                    cIniSReem = "E" & (rowActualRe + 1).ToString
                    cIniDReem = "F" & (rowActualRe + 1).ToString
                    rowActualRe = rowActualRe + odtResLoteConReem.Rows.Count + 1
                    cFinSReem = String.Empty
                    cFinDReem = String.Empty
                    cFinSReem = "E" & (rowActualRe).ToString
                    cFinDReem = "F" & (rowActualRe).ToString
                    objWorkSheet2.CreateRow(rowActualRe)
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(3).CellStyle = styleCab
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(4).CellStyle = styleMonto
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(5).CellStyle = styleMonto
                    objWorkSheet2.GetRow(rowActualRe).GetCell(3).SetCellValue("Total")
                    dblTotalSolesReem = "SUM(" & cIniSReem & ":" & cFinSReem & ")"
                    dblTotalDolaresReem = "SUM(" & cIniDReem & ":" & cFinDReem & ")"
                    objWorkSheet2.GetRow(rowActualRe).GetCell(4).CellFormula() = (dblTotalSolesReem)
                    objWorkSheet2.GetRow(rowActualRe).GetCell(5).CellFormula() = (dblTotalDolaresReem)

                End If


                '=======RESUMEN DE CUENTA DE IMPUTACION============================

                '===================================================================
                If odtCIConReem.Rows.Count > 0 Then
                    '===================Se Carga El Resumen por CI====================
                    rowActualRe += 2
                    objWorkSheet2.CreateRow(rowActualRe)
                    objWorkSheet2.CreateRow(rowActualRe + 1)
                    For i As Integer = 2 To 5
                        objWorkSheet2.GetRow(rowActualRe).CreateCell(i).CellStyle = styleCab
                        objWorkSheet2.GetRow(rowActualRe + 1).CreateCell(i).CellStyle = styleCab
                    Next
                    objWorkSheet2.GetRow(rowActualRe).GetCell(2).SetCellValue("RESUMEN POR CUENTA IMPUTACION")
                    objWorkSheet2.AddMergedRegion(New NPOI.SS.Util.Region(rowActualRe, 2, rowActualRe, 5))
                    rowActualRe += 1
                    For x As Integer = 0 To odtCIConReem.Columns.Count - 1
                        objWorkSheet2.GetRow(rowActualRe).GetCell(x + 2).SetCellValue(odtCIConReem.Columns(x).ColumnName)
                    Next
                    rowActualRe += 1
                    For i As Integer = 0 To odtCIConReem.Rows.Count - 1
                        objWorkSheet2.CreateRow(i + rowActualRe)
                        For x As Integer = 0 To odtCIConReem.Columns.Count - 1
                            Dim celda As String = odtCIConReem.Rows(i).Item(x).ToString().Trim()
                            Select Case odtCIConReem.Columns(x).ColumnName
                                Case "SOLES", "DOLARES"
                                    objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x + 2).CellStyle = styleMonto
                                    objWorkSheet2.GetRow(i + rowActualRe).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda))
                                Case "CI", "MONEDA"
                                    objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x + 2).CellStyle = style
                                    objWorkSheet2.GetRow(i + rowActualRe).GetCell(x + 2).SetCellValue(celda)
                                Case "PORCENTAJE"
                                    objWorkSheet2.GetRow(i + rowActualRe).CreateCell(x + 2).CellStyle = stylePorcentaje
                                    objWorkSheet2.GetRow(i + rowActualRe).GetCell(x + 2).SetCellValue(Convert.ToDouble(celda) / 100)
                            End Select
                        Next
                    Next

                    '=======suma los totales de CI ==================
                    cIniSReem = String.Empty
                    cIniDReem = String.Empty
                    dblTotalSolesReem = 0
                    dblTotalDolaresReem = 0

                    cIniSReem = "E" & (rowActualRe + 1).ToString
                    cIniDReem = "F" & (rowActualRe + 1).ToString
                    rowActualRe = rowActualRe + odtCIConReem.Rows.Count + 1
                    cFinSReem = String.Empty
                    cFinDReem = String.Empty
                    cFinSReem = "E" & (rowActualRe).ToString
                    cFinDReem = "F" & (rowActualRe).ToString
                    objWorkSheet2.CreateRow(rowActualRe)
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(3).CellStyle = styleCab
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(4).CellStyle = styleMonto
                    objWorkSheet2.GetRow(rowActualRe).CreateCell(5).CellStyle = styleMonto
                    objWorkSheet2.GetRow(rowActualRe).GetCell(3).SetCellValue("Total")
                    dblTotalSolesReem = "SUM(" & cIniSReem & ":" & cFinSReem & ")"
                    dblTotalDolaresReem = "SUM(" & cIniDReem & ":" & cFinDReem & ")"
                    objWorkSheet2.GetRow(rowActualRe).GetCell(4).CellFormula() = (dblTotalSolesReem)
                    objWorkSheet2.GetRow(rowActualRe).GetCell(5).CellFormula() = (dblTotalDolaresReem)

                End If

                '===========================SIN REEMBOLSO============================          
                'Redimensiono tamaño de columnas automaticamente
                For z As Integer = 0 To odtDetalleSinReem.Columns.Count - 1
                    objWorkSheet.AutoSizeColumn(z, True)
                Next

                '============================REEMBOLSO==================================          
                'Redimensiono tamaño de columnas automaticamente
                For z As Integer = 0 To odtDetalleConReem.Columns.Count - 1
                    objWorkSheet2.AutoSizeColumn(z, True)
                Next

            Next
            objWorkBook.Write(fs)
            fs.Close()
            HelpClass.AbrirDocumento(archivo)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub

    Public Shared Sub ExportExcelDespacho2(ByVal Title As String, ByVal loCabecera As List(Of String), ByVal oDs As DataSet, ByVal gv As DataGridView)
        '=====================================================================
        Dim objWorkBook As New HSSFWorkbook()
        Dim memoryStream As New MemoryStream()
        Dim objWorkSheet As New HSSFSheet(objWorkBook)

        Dim odtg As New DataTable
        Dim odtFiltro As New DataTable
        Dim odtTotales As New DataTable
        Dim odtTemp As New DataTable
        odtg = oDs.Tables(0)
        'odtg.Columns.Remove("PSLINK")

        '=============Stilos======================

        Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        ' style.WrapText = True
        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleTotales As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleTextNegitra As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontFiltro.FontHeight = 165

        Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
        oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontCab.FontHeight = 165

        Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.FontHeight = 170

        Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
        Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
        Estilos_Excel_NPOI(style, FORMATO.Normal)
        Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
        Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
        Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
        Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
        Estilos_Excel_NPOI(styleTotales, FORMATO.TotalBold)
        Estilos_Excel_NPOI(styleTextNegitra, FORMATO.TextBold)
        '============================================
        styleFiltro.SetFont(oFontFiltro)
        styleCab.SetFont(oFontCab)
        style.SetFont(oFont)
        styleTitulo.SetFont(oFontFiltro)
        styleNumber.SetFont(oFont)
        styleMonto.SetFont(oFont)
        styleFecha.SetFont(oFont)
        styleTotales.SetFont(oFontFiltro)
        styleTextNegitra.SetFont(oFontFiltro)
        '============================================
        Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
        'create the anchor
        Dim anchor As HSSFClientAnchor
        anchor = New HSSFClientAnchor(0, 0, 0, 100, 0, 0, 0, 0)
        ''Dim rutaImagen As String = Urlimagen("../images/logo.png")
        'Try
        'Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImageUrl(rutaImagen, objWorkBook)), HSSFPicture)
        'Picture.Resize(0.4)
        'Catch ex As Exception

        'End Try
        If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If
        If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If

        '===================Se cargan Las Variables de Trabajo=====================
        Dim TotalKG As Double = 0
        Dim TotalM3 As Double = 0
        Dim TotalBUL As Double = 0
        Dim indice As Integer = 0
        Dim rowActual As Integer = 1
        Dim IndiceColum As Integer = 0


        'Dim indiceRowAnt As Integer = 1
        Dim y As Integer = 0 'Posicion Inicial por la Izquierda
        Dim txtFiltro As String = "" 'Valor del filtro en posicion Inicial Actual
        Dim txtFiltro2 As String = "" 'Valor del filtro en posicion Final Actual
        Dim addEspacios As Integer = 8

        '---------------Creamos los rows--------------
        objWorkSheet = objWorkBook.CreateSheet(Title.ToString.Trim)
        For s As Integer = 0 To (odtg.Rows.Count + 10 + loCabecera.Count + addEspacios)
            objWorkSheet.CreateRow(s)
        Next
        'Titulo Principal
        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(3).CellStyle = styleTitulo
        txtFiltro = loCabecera(0).ToString()
        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(3).SetCellValue(txtFiltro)
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 6))
        indice = indice + 3

        ''Se crear Los Titulos de Los filtros
        For Xfiltro As Integer = 1 To loCabecera.Count - 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = loCabecera(Xfiltro).ToString()
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5))
            indice = indice + 1
        Next

        ''Limpiamos las Columnas que no estan en la Grilla
        Dim bol As Boolean = False
        For Columnax As Integer = odtg.Columns.Count - 1 To 0 Step -1
            bol = False
            For Columna As Integer = 0 To gv.Columns.Count - 1
                If gv.Columns(Columna).DataPropertyName.Trim.Equals(odtg.Columns(Columnax).ColumnName.Trim) Then
                    bol = True
                    Exit For
                End If
            Next
            If bol = False Then
                odtg.Columns.RemoveAt(Columnax)
            End If
        Next

        'Nombre Para los Detalles
        'Cambiamos los Indices de las Columnas (Ordenamos el Detalle)
        '-------------------------------------------------
        Dim intCountColum As Integer = 1
        For Columna As Integer = 0 To gv.Columns.Count - 1
            For ColumnaX As Integer = 0 To odtg.Columns.Count - 1
                If gv.Columns(Columna).DataPropertyName.Trim = odtg.Columns(ColumnaX).ColumnName Then
                    odtg.Columns(ColumnaX).ColumnName = gv.Columns(Columna).HeaderText.Trim
                End If
            Next
        Next

        '-------------------------------------------------
        Dim colum As New Data.DataColumn
        Dim dtCopyColum As DataTable = odtg.Clone

        Dim intIndexDetalle As Integer
        For Columna As Integer = 0 To gv.Columns.Count - 1
            For Each colum In dtCopyColum.Columns
                If gv.Columns(Columna).HeaderText.Trim = colum.ColumnName Then
                    odtg.Columns(colum.ColumnName).SetOrdinal(intIndexDetalle)
                    odtg.Columns(colum.ColumnName).ColumnName = gv.Columns(Columna).HeaderText.Trim
                    intIndexDetalle += 1
                End If
            Next
        Next

        '--------------------------------------------------------------------------------------------------

        'Copiamos los Valores en un Temporal Para Realizar la Suma de los Totales por NSEQIN
        odtTemp = odtg.Copy
        If Not odtg.Columns("NSEQIN") Is Nothing Then
            odtg.Columns.Remove("NSEQIN")
        End If

        indice = indice + 1
        ' ===Generamos la Cabecera
        Dim INICIO, FIN As Integer
        INICIO = 32
        FIN = 10
        Dim intTramo As Integer = 1
        Dim intMedio As Integer = 1

        For j As Integer = 0 To odtg.Columns.Count - 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
            Dim valorCab As String = odtg.Columns(j).ColumnName.ToString().Trim()
            If valorCab.IndexOf("_") <> -1 Then
                Select Case Split(valorCab, "_")(0)
                    Case 1
                        intMedio = 1
                    Case 2
                        intMedio = 3
                    Case 3
                        intMedio = 2
                End Select
                valorCab = Split(valorCab, "_")(1) + " " + HelpClass.ConvierteLetraCapital((HelpClass.MedioEnvioConvertString(intMedio)).ToString)
            End If
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(IndiceColum).SetCellValue(valorCab)

            'Crea los Tramos de la Cabecera Superior
            Dim intnumColum As Integer


            If j > 0 AndAlso FIN - INICIO = 10 Then
                If (odtg.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
                    For intnumColum = 0 To 9
                        objWorkSheet.GetRow(indice - 2 + rowActual).CreateCell(IndiceColum + intnumColum).CellStyle = styleCab
                    Next
                    Dim valorCab1 As String = "MEDIO DE ENVIO " + HelpClass.MedioEnvioConvertString(intTramo).ToString
                    objWorkSheet.GetRow(indice - 2 + rowActual).GetCell(IndiceColum).SetCellValue(valorCab1)
                    Dim Region As New NPOI.SS.Util.Region(indice + rowActual - 2, INICIO, indice + rowActual - 2, FIN - 1)
                    objWorkSheet.AddMergedRegion(Region)
                    INICIO = FIN
                    intTramo += 1
                End If

            End If
            FIN = FIN + 1
            IndiceColum = IndiceColum + 1
        Next


        '=================================================================

        Dim drTemp As DataRow = Nothing
        'Generamos los Registros del Detalle
        For i As Integer = 0 To odtg.Rows.Count - 1
            '  Dim txtFiltro_ As String = ""
            IndiceColum = 0
            For x As Integer = 0 To odtg.Columns.Count - 1
                y = IndiceColum
                Dim celda As String = odtg.Rows(i).Item(x).ToString().Trim()

                If drTemp IsNot Nothing _
                   AndAlso odtTemp.Rows(i).Item("Cliente").ToString = drTemp.Item("Cliente") _
                   AndAlso odtTemp.Rows(i).Item("Planta").ToString = drTemp.Item("Planta") _
                   AndAlso odtTemp.Rows(i).Item("Bulto").ToString = drTemp.Item("Bulto") Then _
                   'AndAlso odtTemp.Rows(i).Item("NSEQIN").ToString = drTemp.Item("NSEQIN") 

                    If Not odtg.Columns(x).ColumnName.ToString.Trim.Contains("_") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Guía Remisión") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Medio Envio G/R") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Transportista") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Placa") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Acoplado") Then
                        celda = ""
                    End If
                End If



                If odtg.Columns(x).ColumnName.Equals("Guía Remisión") Then
                    celda = HelpClass.SetFormatoGuiaRemision(celda)
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                ElseIf odtg.Columns(x).ColumnName.Equals("Orden de Compra") Then
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

                ElseIf odtg.Columns(x).ColumnName.ToLower.Contains("cuenta") Then
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

                ElseIf odtg.Columns(x).ColumnName.ToLower.Contains("acoplado") Then
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(ExisteCero(celda))
                ElseIf IsNumeric(celda) Then
                    If celda.Contains("-") OrElse celda.Contains("+") Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                    ElseIf celda.Contains(".") Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                    Else
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    End If
                Else
                    If IsDate(celda) Then
                        celda = String.Format("{0:d}", CDate(celda))
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                    Else
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                    End If
                End If
                IndiceColum = IndiceColum + 1


            Next
            'TotalBUL += Convert.ToDouble(odtg.Rows(i)(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")))
            'TotalKG += Convert.ToDouble(odtg.Rows(i)(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")))
            'TotalM3 += Convert.ToDouble(odtg.Rows(i)("Volumen Bulto"))
            drTemp = odtTemp.Rows(i)
            indice = indice + 1
        Next


        Dim dt As DataTable = SelectDistinct(odtTemp, "Planta", "Cliente", "Bulto", IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida"), IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido"), "Volumen Bulto")

        For Each dr As DataRow In dt.Rows
            TotalBUL += Convert.ToDouble(dr(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")))
            TotalKG += Convert.ToDouble(dr(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")))
            TotalM3 += Convert.ToDouble(dr("Volumen Bulto"))
        Next

        indice = indice + 1

        '===Validaindicetotalesmos  ToTALES
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal - 1).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal - 1).SetCellValue("TOTAL")
        txtFiltro2 = TotalBUL
        If txtFiltro2 = "" Then txtFiltro2 = "0"
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))
        txtFiltro2 = TotalKG
        If txtFiltro2 = "" Then txtFiltro2 = "0"
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")).Ordinal).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")).Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))
        txtFiltro2 = TotalM3
        If txtFiltro2 = "" Then txtFiltro2 = "0"
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns("Volumen Bulto").Ordinal).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns("Volumen Bulto").Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))
        indice = indice + 1
        objWorkSheet.DefaultColumnWidth = 25
        For z As Integer = 0 To odtg.Columns.Count + 1
            objWorkSheet.AutoSizeColumn(z)
            If z = 0 Then
                objWorkSheet.SetColumnWidth(0, 10000)
            End If
        Next

        '----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        '----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        'SE CREA LOS RESUMENES CON NUEVAS HOJAS

        For intSheet As Integer = 1 To oDs.Tables.Count - 1
            If Not oDs.Tables(intSheet) Is Nothing AndAlso oDs.Tables(intSheet).Namespace <> "" Then
                Dim odtResumen As New DataTable
                odtResumen = oDs.Tables(intSheet)
                objWorkSheet = objWorkBook.CreateSheet(odtResumen.Namespace.ToString)
                For s As Integer = 0 To (odtResumen.Rows.Count * 3 + loCabecera.Count + 60 + addEspacios)
                    objWorkSheet.CreateRow(s)
                Next
                indice = 1
                'Se crear Los Titulos de Los filtros en la Nueva Hoja
                For Xfiltro As Integer = 1 To loCabecera.Count - 1
                    objWorkSheet.GetRow(indice - 1).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = loCabecera(Xfiltro).ToString()
                    objWorkSheet.GetRow(indice - 1).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1, 0, indice - 1, 5))
                    indice = indice + 1
                Next
                indice = indice + 2
                '===Generamos la Cabecera Del Resumen
                If intSheet = 1 Then
                    INICIO = 2
                Else
                    INICIO = 3
                End If

                If odtResumen.TableName.Equals("DT_Resumen_MedioEnvio") Then
                    INICIO = 4
                    FIN = 3
                    For j As Integer = 0 To odtResumen.Columns.Count - 1
                        y = j
                        objWorkSheet.GetRow(indice - 1).CreateCell(y).CellStyle = styleCab
                        If odtResumen.Columns(j).ColumnName.Equals("ORDEN_COMPRA") OrElse _
                         odtResumen.Columns(j).ColumnName.Equals("MEDIO_ENVIO") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("SENTIDO_CARGA") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("TIPO_UNIDAD") Then
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(odtResumen.Columns(j).ColumnName.ToString().Trim())
                        Else
                            Dim valorCab As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(0)
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(valorCab)
                        End If

                        If j > 0 AndAlso FIN - INICIO = 3 Then
                            If intSheet = 1 OrElse (odtResumen.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
                                objWorkSheet.GetRow(indice - 2).CreateCell(y).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 1).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 2).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 3).CellStyle = styleCab
                                Dim valorCab1 As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(1)
                                objWorkSheet.GetRow(indice - 2).GetCell(y).SetCellValue(valorCab1)
                                Dim Region As New NPOI.SS.Util.Region(indice - 2, INICIO, indice - 2, FIN)
                                objWorkSheet.AddMergedRegion(Region)
                                INICIO = FIN + 1
                            End If
                        End If
                        FIN = FIN + 1
                    Next
                Else
                    FIN = 2
                    For j As Integer = 0 To odtResumen.Columns.Count - 1
                        y = j
                        objWorkSheet.GetRow(indice - 1).CreateCell(y).CellStyle = styleCab
                        If odtResumen.Columns(j).ColumnName.Equals("ORDEN_COMPRA") OrElse _
                         odtResumen.Columns(j).ColumnName.Equals("MEDIO_ENVIO") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("SENTIDO_CARGA") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("TIPO_UNIDAD") Then
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(odtResumen.Columns(j).ColumnName.ToString().Trim())
                        Else
                            Dim valorCab As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(0)
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(valorCab)
                        End If

                        If j > 0 AndAlso FIN - INICIO = 2 Then
                            If intSheet = 1 OrElse (odtResumen.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
                                objWorkSheet.GetRow(indice - 2).CreateCell(y).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 1).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 2).CellStyle = styleCab
                                Dim valorCab1 As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(1)
                                objWorkSheet.GetRow(indice - 2).GetCell(y).SetCellValue(valorCab1)
                                Dim Region As New NPOI.SS.Util.Region(indice - 2, INICIO, indice - 2, FIN)
                                objWorkSheet.AddMergedRegion(Region)
                                INICIO = FIN + 1
                            End If
                        End If
                        FIN = FIN + 1
                    Next
                End If

                Dim oDtClientes As DataTable = oDs.Tables("DT_Clientes")
                Dim ClienteRow As DataRow
                Dim RowInicioTemp As Integer = indice
                Dim RowInicioTemp2 As Integer = indice
                Dim RowInicioTemp3 As Integer = indice
                Dim lstInicioReg As New List(Of String)

                For Each ClienteRow In oDtClientes.Rows
                    Dim drSelFiltro As DataRow()
                    Dim drSelFiltroSentido As DataRow()
                    Dim drSelFiltroLote As DataRow()
                    Dim odtResumenTempLote As New DataTable
                    Dim odtResumenTemp As New DataTable
                    drSelFiltro = odtResumen.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString.Trim + "'")
                    odtResumenTemp = RowToDatatable(drSelFiltro, odtResumen)

                    For i As Integer = 0 To odtResumenTemp.Rows.Count - 1
                        RowInicioTemp2 = indice
                        If odtResumenTemp.TableName.Equals("DT_Resumen_Sentido") OrElse odtResumenTemp.TableName.Equals("DT_Resumen_MedioEnvio") Then
                            'Agrupa Por Medio de Envio o Sentido de Carga
                            If Not odtResumenTemp.Columns("MEDIO_ENVIO") Is Nothing Then
                                drSelFiltroSentido = odtResumenTemp.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString.Trim + "' and MEDIO_ENVIO = '" + odtResumenTemp.Rows(i)("MEDIO_ENVIO").ToString.Trim + "'")
                                odtResumenTempLote = RowToDatatable(drSelFiltroSentido, odtResumenTemp)
                            Else
                                drSelFiltroSentido = odtResumenTemp.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString.Trim + "' and SENTIDO_CARGA = '" + odtResumenTemp.Rows(i)("SENTIDO_CARGA").ToString.Trim + "'")
                            End If

                            For j As Integer = 0 To drSelFiltroSentido.Length - 1
                                'Agrupa por Lotes
                                RowInicioTemp3 = indice
                                If Not odtResumenTemp.Columns("MEDIO_ENVIO") Is Nothing Then
                                    drSelFiltroLote = odtResumenTempLote.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString.Trim + "' and MEDIO_ENVIO = '" + odtResumenTempLote.Rows(j)("MEDIO_ENVIO").ToString.Trim + "' and LOTE = '" + odtResumenTempLote.Rows(j)("LOTE").ToString.Trim + "'")
                                    For Each RowTemp2 As DataRow In drSelFiltroLote
                                        IndiceColum = 0
                                        For x As Integer = 0 To odtResumenTemp.Columns.Count - 1 '
                                            y = IndiceColum
                                            Dim celda As String = RowTemp2.Item(x).ToString().Trim()
                                            If odtResumen.Columns(x).ColumnName.Equals("ORDEN_COMPRA") Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                            ElseIf IsNumeric(celda) Then
                                                If celda.Contains("-") OrElse celda.Contains("+") Then
                                                    objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                                    objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                                ElseIf celda.Contains(".") Then
                                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleMonto
                                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                                ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                                Else
                                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleNumber
                                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                                End If
                                            Else
                                                If IsDate(celda) Then
                                                    celda = String.Format("{0:d}", CDate(celda))
                                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleFecha
                                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                                Else
                                                    objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                                    objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                                End If
                                            End If
                                            IndiceColum = IndiceColum + 1
                                        Next
                                        indice = indice + 1
                                    Next
                                    objWorkSheet.GetRow(indice).CreateCell(0).CellStyle = style
                                    objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = style
                                    objWorkSheet.GetRow(indice).CreateCell(2).CellStyle = styleTextNegitra
                                    objWorkSheet.GetRow(indice).GetCell(2).SetCellValue("SUB TOTAL")

                                    For x As Integer = 4 To odtResumenTemp.Columns.Count
                                        Dim sumKg As String = "SUM(" & HelpClass.LetraNumero(x) & (RowInicioTemp3 + 1).ToString & ":" & HelpClass.LetraNumero(x) & (indice).ToString & ")"
                                        objWorkSheet.GetRow(indice).CreateCell(x - 1).CellStyle = styleTotales
                                        objWorkSheet.GetRow(indice).GetCell(x - 1).CellFormula = (sumKg)
                                    Next

                                    objWorkSheet.GetRow(indice).GetCell(3).CellFormula = ""
                                    indice = indice + 1

                                    ' ''Merge Por cada Sentido Distinto
                                    If RowInicioTemp3 < indice - 1 Then
                                        Dim Region As New NPOI.SS.Util.Region(RowInicioTemp3, 2, indice - 2, 2)
                                        objWorkSheet.AddMergedRegion(Region)
                                    End If

                                    j += drSelFiltroLote.Length - 1

                                Else
                                    IndiceColum = 0
                                    For x As Integer = 0 To odtResumenTemp.Columns.Count - 1 '
                                        y = IndiceColum
                                        Dim celda As String = drSelFiltroSentido(j).Item(x).ToString().Trim()
                                        If odtResumen.Columns(x).ColumnName.Equals("ORDEN_COMPRA") Then
                                            objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                            objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                        ElseIf IsNumeric(celda) Then
                                            If celda.Contains("-") OrElse celda.Contains("+") Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                                objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                            ElseIf celda.Contains(".") Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleMonto
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                            ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                            Else
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleNumber
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                            End If
                                        Else
                                            If IsDate(celda) Then
                                                celda = String.Format("{0:d}", CDate(celda))
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleFecha
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                            Else
                                                objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                                objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                            End If
                                        End If
                                        IndiceColum = IndiceColum + 1
                                    Next
                                    indice = indice + 1
                                End If

                            Next
                            i += drSelFiltroSentido.Length - 1
                        Else
                            ''Otros Reportes
                            IndiceColum = 0
                            For x As Integer = 0 To odtResumenTemp.Columns.Count - 1 '
                                y = IndiceColum
                                Dim celda As String = odtResumenTemp.Rows(i).Item(x).ToString().Trim()
                                If odtResumen.Columns(x).ColumnName.Equals("ORDEN_COMPRA") Then
                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                ElseIf IsNumeric(celda) Then
                                    If celda.Contains("-") OrElse celda.Contains("+") Then
                                        objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                        objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                    ElseIf celda.Contains(".") Then
                                        objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                    ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                        objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                        objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                    Else
                                        objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleNumber
                                        objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                    End If
                                Else
                                    If IsDate(celda) Then
                                        celda = String.Format("{0:d}", CDate(celda))
                                        objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleFecha
                                        objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                    Else
                                        objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                        objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                    End If
                                End If
                                IndiceColum = IndiceColum + 1
                            Next
                            indice = indice + 1
                            ''
                        End If

                        If odtResumenTemp.TableName.Equals("DT_Resumen_MedioEnvio") Then
                            objWorkSheet.GetRow(indice).CreateCell(0).CellStyle = style
                            objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = styleTextNegitra
                            objWorkSheet.GetRow(indice).GetCell(1).SetCellValue("SUB TOTAL")
                            '
                            For x As Integer = 3 To odtResumenTemp.Columns.Count
                                Dim strRango As String = HelpClass.LetraNumero(x) & (RowInicioTemp2 + 1).ToString & ":" & HelpClass.LetraNumero(x) & (indice).ToString
                                Dim strRango2 As String = HelpClass.LetraNumero(3) & (RowInicioTemp2 + 1).ToString & ":" & HelpClass.LetraNumero(3) & (indice).ToString

                                Dim sumKg As String = "SUMIF(" & strRango2 & " ," & HelpClass.LetraNumero(3) & (indice).ToString & " , " & strRango & ")"
                                objWorkSheet.GetRow(indice).CreateCell(x - 1).CellStyle = styleTotales
                                objWorkSheet.GetRow(indice).GetCell(x - 1).CellFormula = (sumKg)
                            Next
                            objWorkSheet.GetRow(indice).GetCell(2).CellFormula = ""
                            objWorkSheet.GetRow(indice).GetCell(3).CellFormula = ""
                            indice = indice + 1
                            'Merge Por cada Medio de Envio
                            If RowInicioTemp2 < indice - 1 Then
                                Dim Region As New NPOI.SS.Util.Region(RowInicioTemp2, 1, indice - 2, 1)
                                objWorkSheet.AddMergedRegion(Region)
                            End If
                        Else
                            'Merge Por cada Sentido Distinto
                            If RowInicioTemp2 < indice - 1 Then
                                Dim Region As New NPOI.SS.Util.Region(RowInicioTemp2, 1, indice - 1, 1)
                                objWorkSheet.AddMergedRegion(Region)
                            End If
                        End If
                        RowInicioTemp2 = indice + 1
                    Next


                    If Not odtResumenTemp.TableName.Equals("DT_Resumen_MedioEnvio") Then
                        'Totales Por cada Cliente
                        objWorkSheet.GetRow(indice).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = styleTextNegitra
                        objWorkSheet.GetRow(indice).GetCell(1).SetCellValue("SUB TOTAL")
                        For x As Integer = 3 To odtResumenTemp.Columns.Count
                            Dim sumKg As String = "SUM(" & HelpClass.LetraNumero(x) & (RowInicioTemp + 1).ToString & ":" & HelpClass.LetraNumero(x) & (indice).ToString & ")"
                            objWorkSheet.GetRow(indice).CreateCell(x - 1).CellStyle = styleTotales
                            objWorkSheet.GetRow(indice).GetCell(x - 1).CellFormula = (sumKg)
                        Next
                        'Borra lo de la Columna con la sumatoria de las O/C
                        If intSheet <> 1 Then
                            objWorkSheet.GetRow(indice).GetCell(2).CellFormula = ""
                        End If
                        objWorkSheet.GetRow(RowInicioTemp + 1).GetCell(0).SetCellValue("")
                    Else
                        indice = indice - 1
                        objWorkSheet.GetRow(RowInicioTemp + 1).GetCell(0).SetCellValue("")
                    End If
                    'Negrita para el Cliente del Grupo

                    objWorkSheet.GetRow(RowInicioTemp).GetCell(0).CellStyle = styleTextNegitra

                    ''Merge Por Cliente
                    Dim Region2 As New NPOI.SS.Util.Region(RowInicioTemp + 1, 0, indice, 0)
                    objWorkSheet.AddMergedRegion(Region2)
                    RowInicioTemp = indice + 1
                    indice = indice + 1
                    lstInicioReg.Add(indice)
                Next

                objWorkSheet.SetColumnWidth(0, 10000)
                If Not odtResumen.TableName.Equals("DT_Resumen_MedioEnvio") Then
                    'Suma El total Por Todos Los Clientes
                    objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = styleTotales
                    objWorkSheet.GetRow(indice).GetCell(1).SetCellValue("TOTALES")
                    IndiceColum = 0
                    For z As Integer = 0 To odtResumen.Columns.Count - 3
                        IndiceColum = z + 2
                        Dim strSum As String
                        strSum = "SUM("

                        For reg As Integer = 0 To lstInicioReg.Count - 2
                            strSum = strSum & HelpClass.LetraNumero(IndiceColum + 1) & lstInicioReg(reg).ToString & ","
                        Next
                        strSum = strSum & HelpClass.LetraNumero(IndiceColum + 1) & lstInicioReg(lstInicioReg.Count - 1).ToString & ")"
                        objWorkSheet.GetRow(indice).CreateCell(IndiceColum).CellStyle = styleTotales
                        objWorkSheet.GetRow(indice).GetCell(IndiceColum).CellFormula = (strSum)
                        'Borra lo de la Columna con la sumatoria de las O/C
                        If intSheet <> 1 Then
                            objWorkSheet.GetRow(indice).GetCell(2).CellFormula = ""
                        End If

                        objWorkSheet.AutoSizeColumn(z)
                    Next
                Else

                    For z As Integer = 1 To odtResumen.Columns.Count - 3
                        objWorkSheet.AutoSizeColumn(z)
                    Next
                    objWorkSheet.SetColumnWidth(2, 10000)
                End If

            End If
        Next

        Dim FileName As String = "Reporte" & HelpClass.NowNumeric & "_" & Title & ".xls" 'xml
        Dim fs As New IO.FileStream(FileName, IO.FileMode.Create)
        'objWorkBook.Write(memoryStream)
        'memoryStream.Flush()
        'Dim response As HttpResponse = HttpContext.Current.Response
        'response.ContentType = "application/vnd.ms-excel"
        'response.AddHeader("Content-Disposition", String.Format("attachment;filename={0}", FileName))
        'response.Clear()
        'response.BinaryWrite(memoryStream.GetBuffer())
        'response.End()
        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(FileName)
    End Sub


    Public Shared Sub ExportExcelDespacho_Item(ByVal Title As String, ByVal loCabecera As List(Of String), ByVal oDs As DataSet, ByVal gv As DataGridView)
        '=====================================================================
        Dim objWorkBook As New HSSFWorkbook()
        Dim memoryStream As New MemoryStream()
        Dim objWorkSheet As New HSSFSheet(objWorkBook)

        Dim odtg As New DataTable
        Dim odtFiltro As New DataTable
        Dim odtTotales As New DataTable

        odtg = oDs.Tables(0)

        'Dim colum2 As New DataColumn
        'For Each colum2 In oDs.Tables(0).Columns
        '    If colum2.ColumnName = "LINK" Then
        '        colum2.ColumnName.Remove("LINK")
        '    End If
        'Next

        'Dim colum3 As New DataColumn
        'For Each colum3 In oDs.Tables(0).Columns
        '    If colum3.ColumnName = "PSLINK" Then
        '        oDs.Tables(0).Columns.Remove("PSLINK")
        '    End If
        'Next
        '=============Stilos======================
        Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontFiltro.FontHeight = 165

        Dim oFontTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontTitulo.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontTitulo.FontHeight = 210


        Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
        oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontCab.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontCab.FontHeight = 165

        Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.FontHeight = 170

        styleFiltro.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleFiltro.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleFiltro.SetFont(oFontFiltro)
        styleFiltro.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
        styleFiltro.FillPattern = FillPatternType.SOLID_FOREGROUND
        '===============================
        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleTitulo.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleTitulo.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleTitulo.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
        styleTitulo.SetFont(oFontTitulo)
        styleTitulo.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
        styleTitulo.FillPattern = FillPatternType.SOLID_FOREGROUND
        '===============================
        styleCab.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREEN.index
        styleCab.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
        styleCab.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleCab.SetFont(oFontCab)
        styleCab.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
        styleCab.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleCab.BorderRight = CellBorderType.THIN
        styleCab.BorderBottom = CellBorderType.THIN
        styleCab.BorderLeft = CellBorderType.THIN
        styleCab.BorderTop = CellBorderType.THIN

        '===============================
        style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        style.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
        style.SetFont(oFont)
        style.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
        style.FillPattern = FillPatternType.SOLID_FOREGROUND
        style.BorderRight = CellBorderType.THIN
        style.BorderBottom = CellBorderType.THIN
        style.BorderLeft = CellBorderType.THIN
        style.BorderTop = CellBorderType.THIN
        '===============================
        Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleNumber.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
        styleNumber.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleNumber.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleNumber.SetFont(oFont)
        styleNumber.DataFormat = HSSFDataFormat.GetBuiltinFormat("#.##0,00") '"#.##0,00"
        styleNumber.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleNumber.BorderRight = CellBorderType.THIN
        styleNumber.BorderBottom = CellBorderType.THIN
        styleNumber.BorderLeft = CellBorderType.THIN
        styleNumber.BorderTop = CellBorderType.THIN

        '===============================
        Dim styleTotales As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleTotales.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
        styleTotales.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleTotales.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleTotales.SetFont(oFontFiltro)
        styleTotales.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
        styleTotales.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleTotales.BorderRight = CellBorderType.THIN
        styleTotales.BorderBottom = CellBorderType.THIN
        styleTotales.BorderLeft = CellBorderType.THIN
        styleTotales.BorderTop = CellBorderType.THIN
        '===============================

        Dim styleTextNegitra As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleTextNegitra.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT
        styleTextNegitra.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleTextNegitra.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleTextNegitra.SetFont(oFontFiltro)
        styleTextNegitra.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleTextNegitra.BorderRight = CellBorderType.THIN
        styleTextNegitra.BorderBottom = CellBorderType.THIN
        styleTextNegitra.BorderLeft = CellBorderType.THIN
        styleTextNegitra.BorderTop = CellBorderType.THIN

        '===============================
        Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleMonto.Alignment = NPOI.SS.UserModel.HorizontalAlignment.RIGHT
        styleMonto.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleMonto.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleMonto.SetFont(oFont)
        styleMonto.DataFormat = HSSFDataFormat.GetBuiltinFormat("0.00")
        styleMonto.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleMonto.BorderRight = CellBorderType.THIN
        styleMonto.BorderBottom = CellBorderType.THIN
        styleMonto.BorderLeft = CellBorderType.THIN
        styleMonto.BorderTop = CellBorderType.THIN
        '===============================

        Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleFecha.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
        styleFecha.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleFecha.FillBackgroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleFecha.SetFont(oFont)
        styleFecha.DataFormat = NPOI.HSSF.Util.HSSFColor.BLACK.index
        styleFecha.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleFecha.BorderRight = CellBorderType.THIN
        styleFecha.BorderBottom = CellBorderType.THIN
        styleFecha.BorderLeft = CellBorderType.THIN
        styleFecha.BorderTop = CellBorderType.THIN
        '============================================
        Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
        'create the anchor
        Dim anchor As HSSFClientAnchor
        anchor = New HSSFClientAnchor(0, 0, 0, 100, 0, 0, 0, 0)


        If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If
        If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If

        ''Dim rutaImagen As String = Urlimagen("images/logo.png")
        'Try
        '    Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImageUrl(rutaImagen, objWorkBook)), HSSFPicture)
        '    picture.Resize(0.4)
        'Catch ex As Exception

        'End Try

        '===================Se cargan Las Variables de Trabajo=====================
        Dim TotalKG As Double = 0
        Dim TotalM3 As Double = 0
        Dim TotalBUL As Double = 0
        Dim indice As Integer = 0
        Dim rowActual As Integer = 1
        Dim IndiceColum As Integer = 0
        Dim indiceRowAnt As Integer = 1
        Dim y As Integer = 0 'Posicion Inicial por la Izquierda
        Dim txtFiltro As String = "" 'Valor del filtro en posicion Inicial Actual
        Dim txtFiltro2 As String = "" 'Valor del filtro en posicion Final Actual
        Dim addEspacios As Integer = 8
        Dim n As Integer = 0
        Dim RowInicio As Integer = 0
        Dim RowInicioAnt As Integer = 0

        '---------------Creamos los rows--------------
        objWorkSheet = objWorkBook.CreateSheet(Title.ToString.Trim)
        For s As Integer = 0 To (odtg.Rows.Count + 10 + loCabecera.Count + addEspacios)
            objWorkSheet.CreateRow(s)
        Next

        'Titulo Principal
        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(3).CellStyle = styleTitulo
        txtFiltro = loCabecera(0).ToString()
        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(3).SetCellValue(txtFiltro)
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 6))
        indice = indice + 3

        ''Se crear Los Titulos de Los filtros
        For Xfiltro As Integer = 1 To loCabecera.Count - 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = loCabecera(Xfiltro).ToString()
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5))
            indice = indice + 1
        Next

        ''Limpiamos las Columnas que no estan en la Grilla
        Dim bol As Boolean = False
        For Columnax As Integer = odtg.Columns.Count - 1 To 0 Step -1
            bol = False
            For Columna As Integer = 0 To gv.Columns.Count - 1
                If gv.Columns(Columna).DataPropertyName.Trim.Equals(odtg.Columns(Columnax).ColumnName.Trim) Then
                    bol = True
                    Exit For
                End If
            Next
            If bol = False Then
                odtg.Columns.RemoveAt(Columnax)
            End If
        Next

        'Nombre Para los Detalles
        ''Cambiamos los Indices de las Columnas (Ordenamos el Detalle)
        '-------------------------------------------------
        Dim intCountColum As Integer = 1
        For Columna As Integer = 0 To gv.Columns.Count - 1
            For ColumnaX As Integer = 0 To odtg.Columns.Count - 1
                If gv.Columns(Columna).DataPropertyName.Trim = odtg.Columns(ColumnaX).ColumnName Then
                    odtg.Columns(ColumnaX).ColumnName = gv.Columns(Columna).HeaderText.Trim
                End If
            Next
        Next

        '-------------------------------------------------
        Dim colum As New Data.DataColumn
        Dim dtCopyColum As DataTable = odtg.Clone

        Dim intIndexDetalle As Integer
        For Columna As Integer = 0 To gv.Columns.Count - 1
            For Each colum In dtCopyColum.Columns
                If gv.Columns(Columna).HeaderText.Trim = colum.ColumnName Then
                    odtg.Columns(colum.ColumnName).SetOrdinal(intIndexDetalle)
                    odtg.Columns(colum.ColumnName).ColumnName = gv.Columns(Columna).HeaderText.Trim
                    intIndexDetalle += 1
                End If
            Next
        Next
        'odtg.Columns.RemoveAt(34)
        '-------------------------------------------------
        indice = indice + 1
        '===Generamos la Cabecera
        Dim INICIO, FIN As Integer
        INICIO = 24
        FIN = 8
        Dim intTramo As Integer = 1

        For j As Integer = 0 To odtg.Columns.Count - 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
            Dim valorCab As String = odtg.Columns(j).ColumnName.ToString().Trim()
            If valorCab.IndexOf("_") <> -1 Then
                valorCab = Split(valorCab, "_")(1)
            End If
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(IndiceColum).SetCellValue(valorCab)

            'Crea los Tramos de la Cabecera Superior

            Dim intnumColum As Integer


            If j > 0 AndAlso FIN - INICIO = 8 Then
                If (odtg.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
                    For intnumColum = 0 To 7
                        objWorkSheet.GetRow(indice - 2 + rowActual).CreateCell(IndiceColum + intnumColum).CellStyle = styleCab
                    Next
                    Dim valorCab1 As String = "TRAMO " & intTramo.ToString
                    objWorkSheet.GetRow(indice - 2 + rowActual).GetCell(IndiceColum).SetCellValue(valorCab1)
                    Dim Region As New NPOI.SS.Util.Region(indice + rowActual - 2, INICIO, indice + rowActual - 2, FIN - 1)
                    objWorkSheet.AddMergedRegion(Region)
                    INICIO = FIN
                    intTramo += 1
                End If

            End If
            FIN = FIN + 1
            IndiceColum = IndiceColum + 1
        Next

        'Generamos los Registros del Detalle
        For i As Integer = 0 To odtg.Rows.Count - 1
            Dim txtFiltro_ As String = ""
            IndiceColum = 0
            For x As Integer = 0 To odtg.Columns.Count - 1
                y = IndiceColum
                Dim celda As String = odtg.Rows(i).Item(x).ToString().Trim()
                If odtg.Columns(x).ColumnName.Equals("Guía Remisión") Then
                    celda = HelpClass.SetFormatoGuiaRemision(celda)
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                ElseIf odtg.Columns(x).ColumnName.Equals("Orden de Compra") Then
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

                ElseIf odtg.Columns(x).ColumnName.ToLower.Contains("cuenta") Then
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

                ElseIf IsNumeric(celda) Then
                    If celda.Contains("-") OrElse celda.Contains("+") Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(odtg.Rows(i).Item(x).ToString().Trim())
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                    ElseIf celda.Contains(".") Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                    Else
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    End If
                Else
                    If IsDate(celda) Then
                        celda = String.Format("{0:d}", CDate(celda))
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                    Else
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(odtg.Rows(i).Item(x).ToString().Trim())
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                    End If
                End If
                IndiceColum = IndiceColum + 1
            Next
            'NroItem = NroItem + 1

            If (Title.Length = 8) Then

            End If
            'TotalBUL += Convert.ToDouble(odtg.Rows(i)(IIf(Title.Length, "Cant. Despachada", "Cant. Recibida")))
            TotalBUL += Convert.ToDouble(odtg.Rows(i)(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")))
            TotalKG += Convert.ToDouble(odtg.Rows(i)(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")))
            TotalM3 += Convert.ToDouble(odtg.Rows(i)("Volumen Bulto"))

            indice = indice + 1
        Next
        indice = indice + 1

        '===Validaindicetotalesmos  ToTALES

        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal - 1).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal - 1).SetCellValue("TOTAL")

        txtFiltro2 = TotalBUL
        If txtFiltro2 = "" Then txtFiltro2 = "0"
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))

        txtFiltro2 = TotalKG
        If txtFiltro2 = "" Then txtFiltro2 = "0"
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")).Ordinal).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")).Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))

        txtFiltro2 = TotalM3
        If txtFiltro2 = "" Then txtFiltro2 = "0"
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns("Volumen Bulto").Ordinal).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns("Volumen Bulto").Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))

        indice = indice + 1

        objWorkSheet.DefaultColumnWidth = 25
        For z As Integer = 0 To odtg.Columns.Count + 1
            objWorkSheet.AutoSizeColumn(z)
            If z = 0 Then
                objWorkSheet.SetColumnWidth(0, 10000)
            End If
        Next

        Dim FileName As String = "Reporte" & HelpClass.NowNumeric & "_" & Title & ".xls" 'xml
        Dim fs As New IO.FileStream(FileName, IO.FileMode.Create)
        'objWorkBook.Write(memoryStream)
        'memoryStream.Flush()
        'Dim response As HttpResponse = HttpContext.Current.Response
        'response.ContentType = "application/vnd.ms-excel"
        'response.AddHeader("Content-Disposition", String.Format("attachment;filename={0}", FileName))
        'response.Clear()
        'response.BinaryWrite(memoryStream.GetBuffer())
        'response.End()
        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(FileName)
    End Sub

    Public Shared Sub ExportExcelDespachoOC(ByVal Title As String, ByVal loCabecera As List(Of String), ByVal oDs As DataSet, ByVal gv As DataGridView)
        '=====================================================================
        Dim objWorkBook As New HSSFWorkbook()
        Dim memoryStream As New MemoryStream()
        Dim objWorkSheet As New HSSFSheet(objWorkBook)

        Dim odtg As New DataTable
        Dim odtFiltro As New DataTable
        Dim odtTotales As New DataTable
        Dim odtTemp As New DataTable
        odtg = oDs.Tables(0)
        'odtg.Columns.Remove("LINK")
        'odtg.Columns.Remove("ROWNUMBER")
        '=============Stilos======================

        Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        ' style.WrapText = True
        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleNumber As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleMonto As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleFecha As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleTotales As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        Dim styleTextNegitra As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()

        Dim oFontFiltro As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontFiltro.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontFiltro.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFontFiltro.FontHeight = 165

        Dim oFontCab As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFontCab.Color = NPOI.HSSF.Util.HSSFColor.WHITE.index
        oFontCab.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFontCab.FontHeight = 165

        Dim oFont As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFont.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.Boldweight = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFont.FontHeight = 170

        Estilos_Excel_NPOI(styleFiltro, FORMATO.Filtro)
        Estilos_Excel_NPOI(styleCab, FORMATO.Cabecera)
        Estilos_Excel_NPOI(style, FORMATO.Normal)
        Estilos_Excel_NPOI(styleTitulo, FORMATO.Titulo)
        Estilos_Excel_NPOI(styleNumber, FORMATO.Numero)
        Estilos_Excel_NPOI(styleMonto, FORMATO.Monto)
        Estilos_Excel_NPOI(styleFecha, FORMATO.Fecha)
        Estilos_Excel_NPOI(styleTotales, FORMATO.TotalBold)
        Estilos_Excel_NPOI(styleTextNegitra, FORMATO.TextBold)
        '============================================
        styleFiltro.SetFont(oFontFiltro)
        styleCab.SetFont(oFontCab)
        style.SetFont(oFont)
        styleTitulo.SetFont(oFontFiltro)
        styleNumber.SetFont(oFont)
        styleMonto.SetFont(oFont)
        styleFecha.SetFont(oFont)
        styleTotales.SetFont(oFontFiltro)
        styleTextNegitra.SetFont(oFontFiltro)
        '============================================
        Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
        'create the anchor
        Dim anchor As HSSFClientAnchor
        anchor = New HSSFClientAnchor(0, 0, 0, 100, 0, 0, 0, 0)
        ''Dim rutaImagen As String = Urlimagen("../images/logo.png")
        'Try
        'Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImageUrl(rutaImagen, objWorkBook)), HSSFPicture)
        'Picture.Resize(0.4)
        'Catch ex As Exception

        'End Try
        If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If
        If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If

        '===================Se cargan Las Variables de Trabajo=====================
        Dim TotalKG As Double = 0
        Dim TotalM3 As Double = 0
        Dim TotalBUL As Double = 0
        Dim indice As Integer = 0
        Dim rowActual As Integer = 1
        Dim IndiceColum As Integer = 0


        'Dim indiceRowAnt As Integer = 1
        Dim y As Integer = 0 'Posicion Inicial por la Izquierda
        Dim txtFiltro As String = "" 'Valor del filtro en posicion Inicial Actual
        Dim txtFiltro2 As String = "" 'Valor del filtro en posicion Final Actual
        Dim addEspacios As Integer = 8

        '---------------Creamos los rows--------------
        objWorkSheet = objWorkBook.CreateSheet(Title.ToString.Trim)
        For s As Integer = 0 To (odtg.Rows.Count + 10 + loCabecera.Count + addEspacios)
            objWorkSheet.CreateRow(s)
        Next
        'Titulo Principal
        objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(3).CellStyle = styleTitulo
        txtFiltro = loCabecera(0).ToString()
        objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(3).SetCellValue(txtFiltro)
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 3, indice - 1 + rowActual, 6))
        indice = indice + 3

        ''Se crear Los Titulos de Los filtros
        For Xfiltro As Integer = 1 To loCabecera.Count - 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(0).CellStyle = styleFiltro
            txtFiltro = loCabecera(Xfiltro).ToString()
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(0).SetCellValue(txtFiltro)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1 + rowActual, 0, indice - 1 + rowActual, 5))
            indice = indice + 1
        Next

        ''Limpiamos las Columnas que no estan en la Grilla
        Dim bol As Boolean = False
        For Columnax As Integer = odtg.Columns.Count - 1 To 0 Step -1
            bol = False
            For Columna As Integer = 0 To gv.Columns.Count - 1
                If gv.Columns(Columna).DataPropertyName.Trim.Equals(odtg.Columns(Columnax).ColumnName.Trim) Then
                    bol = True
                    Exit For
                End If
            Next
            If bol = False Then
                odtg.Columns.RemoveAt(Columnax)
            End If
        Next

        'Nombre Para los Detalles
        'Cambiamos los Indices de las Columnas (Ordenamos el Detalle)
        '-------------------------------------------------
        Dim intCountColum As Integer = 1
        For Columna As Integer = 0 To gv.Columns.Count - 1
            For ColumnaX As Integer = 0 To odtg.Columns.Count - 1
                If gv.Columns(Columna).DataPropertyName.Trim = odtg.Columns(ColumnaX).ColumnName Then
                    odtg.Columns(ColumnaX).ColumnName = gv.Columns(Columna).HeaderText.Trim
                End If
            Next
        Next

        '-------------------------------------------------
        Dim colum As New Data.DataColumn
        Dim dtCopyColum As DataTable = odtg.Clone

        Dim intIndexDetalle As Integer
        For Columna As Integer = 0 To gv.Columns.Count - 1
            For Each colum In dtCopyColum.Columns
                If gv.Columns(Columna).HeaderText.Trim = colum.ColumnName Then
                    odtg.Columns(colum.ColumnName).SetOrdinal(intIndexDetalle)
                    odtg.Columns(colum.ColumnName).ColumnName = gv.Columns(Columna).HeaderText.Trim
                    intIndexDetalle += 1
                End If
            Next
        Next

        '--------------------------------------------------------------------------------------------------

        'Copiamos los Valores en un Temporal Para Realizar la Suma de los Totales por NSEQIN
        odtTemp = odtg.Copy
        If Not odtg.Columns("NSEQIN") Is Nothing Then
            odtg.Columns.Remove("NSEQIN")
        End If

        indice = indice + 1
        ' ===Generamos la Cabecera
        Dim INICIO, FIN As Integer
        INICIO = 32
        FIN = 10
        Dim intTramo As Integer = 1
        Dim intMedio As Integer = 1

        For j As Integer = 0 To odtg.Columns.Count - 1
            objWorkSheet.GetRow(indice - 1 + rowActual).CreateCell(IndiceColum).CellStyle = styleCab
            Dim valorCab As String = odtg.Columns(j).ColumnName.ToString().Trim()
            If valorCab.IndexOf("_") <> -1 Then
                Select Case Split(valorCab, "_")(0)
                    Case 1
                        intMedio = 1
                    Case 2
                        intMedio = 3
                    Case 3
                        intMedio = 2
                End Select
                valorCab = Split(valorCab, "_")(1) + " " + HelpClass.ConvierteLetraCapital((HelpClass.MedioEnvioConvertString(intMedio)).ToString)
            End If
            objWorkSheet.GetRow(indice - 1 + rowActual).GetCell(IndiceColum).SetCellValue(valorCab)

            'Crea los Tramos de la Cabecera Superior
            Dim intnumColum As Integer


            If j > 0 AndAlso FIN - INICIO = 10 Then
                If (odtg.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
                    For intnumColum = 0 To 9
                        objWorkSheet.GetRow(indice - 2 + rowActual).CreateCell(IndiceColum + intnumColum).CellStyle = styleCab
                    Next
                    Dim valorCab1 As String = "MEDIO DE ENVIO " + HelpClass.MedioEnvioConvertString(intTramo).ToString
                    objWorkSheet.GetRow(indice - 2 + rowActual).GetCell(IndiceColum).SetCellValue(valorCab1)
                    Dim Region As New NPOI.SS.Util.Region(indice + rowActual - 2, INICIO, indice + rowActual - 2, FIN - 1)
                    objWorkSheet.AddMergedRegion(Region)
                    INICIO = FIN
                    intTramo += 1
                End If

            End If
            FIN = FIN + 1
            IndiceColum = IndiceColum + 1
        Next


        '=================================================================

        Dim drTemp As DataRow = Nothing
        'Generamos los Registros del Detalle
        For i As Integer = 0 To odtg.Rows.Count - 1
            '  Dim txtFiltro_ As String = ""
            IndiceColum = 0
            For x As Integer = 0 To odtg.Columns.Count - 1
                y = IndiceColum
                Dim celda As String = odtg.Rows(i).Item(x).ToString().Trim()

                If drTemp IsNot Nothing _
                   AndAlso odtTemp.Rows(i).Item("Cliente").ToString = drTemp.Item("Cliente") _
                   AndAlso odtTemp.Rows(i).Item("Planta").ToString = drTemp.Item("Planta") _
                   AndAlso odtTemp.Rows(i).Item("Bulto").ToString = drTemp.Item("Bulto") Then _
                   'AndAlso odtTemp.Rows(i).Item("NSEQIN").ToString = drTemp.Item("NSEQIN") 

                    If Not odtg.Columns(x).ColumnName.ToString.Trim.Contains("_") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Guía Remisión") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Medio Envio G/R") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Transportista") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Placa") AndAlso _
                    Not odtg.Columns(x).ColumnName.ToString.Trim.Equals("Acoplado") Then
                        celda = ""
                    End If
                End If



                If odtg.Columns(x).ColumnName.Equals("Guía Remisión") Then
                    celda = HelpClass.SetFormatoGuiaRemision(celda)
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                ElseIf odtg.Columns(x).ColumnName.Equals("Orden de Compra") Then
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

                ElseIf odtg.Columns(x).ColumnName.ToLower.Contains("cuenta") Then
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)

                ElseIf odtg.Columns(x).ColumnName.ToLower.Contains("acoplado") Then
                    objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                    objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(ExisteCero(celda))
                ElseIf IsNumeric(celda) Then
                    If celda.Contains("-") OrElse celda.Contains("+") Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                    ElseIf celda.Contains(".") Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleMonto
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = style
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                    Else
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleNumber
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                    End If
                Else
                    If IsDate(celda) Then
                        celda = String.Format("{0:d}", CDate(celda))
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).CellStyle = styleFecha
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).SetCellValue(celda)
                    Else
                        objWorkSheet.GetRow(indice + rowActual).CreateCell(y).SetCellValue(celda)
                        objWorkSheet.GetRow(indice + rowActual).GetCell(y).CellStyle = style
                    End If
                End If
                IndiceColum = IndiceColum + 1


            Next
            'TotalBUL += Convert.ToDouble(odtg.Rows(i)(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")))
            'TotalKG += Convert.ToDouble(odtg.Rows(i)(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")))
            'TotalM3 += Convert.ToDouble(odtg.Rows(i)("Volumen Bulto"))
            drTemp = odtTemp.Rows(i)
            indice = indice + 1
        Next


        Dim dt As DataTable = SelectDistinct(odtTemp, "Planta", "Cliente", "Bulto", IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida"), IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido"), "Volumen Bulto")

        For Each dr As DataRow In dt.Rows
            TotalBUL += Convert.ToDouble(dr(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")))
            TotalKG += Convert.ToDouble(dr(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")))
            TotalM3 += Convert.ToDouble(dr("Volumen Bulto"))
        Next

        indice = indice + 1

        '===Validaindicetotalesmos  ToTALES
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal - 1).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal - 1).SetCellValue("TOTAL")
        txtFiltro2 = TotalBUL
        If txtFiltro2 = "" Then txtFiltro2 = "0"
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Cant. Despachada", "Cant. Recibida")).Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))
        txtFiltro2 = TotalKG
        If txtFiltro2 = "" Then txtFiltro2 = "0"
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")).Ordinal).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns(IIf(Title.Length = 8, "Peso Despachado", "Peso Recibido")).Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))
        txtFiltro2 = TotalM3
        If txtFiltro2 = "" Then txtFiltro2 = "0"
        objWorkSheet.GetRow(indice + rowActual).CreateCell(odtg.Columns("Volumen Bulto").Ordinal).CellStyle = styleTotales
        objWorkSheet.GetRow(indice + rowActual).GetCell(odtg.Columns("Volumen Bulto").Ordinal).SetCellValue(Convert.ToDouble(txtFiltro2))
        indice = indice + 1
        objWorkSheet.DefaultColumnWidth = 25
        For z As Integer = 0 To odtg.Columns.Count + 1
            objWorkSheet.AutoSizeColumn(z)
            If z = 0 Then
                objWorkSheet.SetColumnWidth(0, 10000)
            End If
        Next

        '----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        '----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        'SE CREA LOS RESUMENES CON NUEVAS HOJAS

        For intSheet As Integer = 1 To oDs.Tables.Count - 1
            If Not oDs.Tables(intSheet) Is Nothing AndAlso oDs.Tables(intSheet).Namespace <> "" Then
                Dim odtResumen As New DataTable
                odtResumen = oDs.Tables(intSheet)
                objWorkSheet = objWorkBook.CreateSheet(odtResumen.Namespace.ToString)
                For s As Integer = 0 To (odtResumen.Rows.Count * 3 + loCabecera.Count + 60 + addEspacios)
                    objWorkSheet.CreateRow(s)
                Next
                indice = 1
                'Se crear Los Titulos de Los filtros en la Nueva Hoja
                For Xfiltro As Integer = 1 To loCabecera.Count - 1
                    objWorkSheet.GetRow(indice - 1).CreateCell(0).CellStyle = styleFiltro
                    txtFiltro = loCabecera(Xfiltro).ToString()
                    objWorkSheet.GetRow(indice - 1).GetCell(0).SetCellValue(txtFiltro)
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(indice - 1, 0, indice - 1, 5))
                    indice = indice + 1
                Next
                indice = indice + 2
                '===Generamos la Cabecera Del Resumen
                If intSheet = 1 Then
                    INICIO = 2
                Else
                    INICIO = 3
                End If

                If odtResumen.TableName.Equals("DT_Resumen_MedioEnvio") Then
                    INICIO = 4
                    FIN = 3
                    For j As Integer = 0 To odtResumen.Columns.Count - 1
                        y = j
                        objWorkSheet.GetRow(indice - 1).CreateCell(y).CellStyle = styleCab
                        If odtResumen.Columns(j).ColumnName.Equals("ORDEN_COMPRA") OrElse _
                         odtResumen.Columns(j).ColumnName.Equals("MEDIO_ENVIO") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("SENTIDO_CARGA") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("TIPO_UNIDAD") Then
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(odtResumen.Columns(j).ColumnName.ToString().Trim())
                        Else
                            Dim valorCab As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(0)
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(valorCab)
                        End If

                        If j > 0 AndAlso FIN - INICIO = 3 Then
                            If intSheet = 1 OrElse (odtResumen.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
                                objWorkSheet.GetRow(indice - 2).CreateCell(y).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 1).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 2).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 3).CellStyle = styleCab
                                Dim valorCab1 As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(1)
                                objWorkSheet.GetRow(indice - 2).GetCell(y).SetCellValue(valorCab1)
                                Dim Region As New NPOI.SS.Util.Region(indice - 2, INICIO, indice - 2, FIN)
                                objWorkSheet.AddMergedRegion(Region)
                                INICIO = FIN + 1
                            End If
                        End If
                        FIN = FIN + 1
                    Next
                Else
                    FIN = 2
                    For j As Integer = 0 To odtResumen.Columns.Count - 1
                        y = j
                        objWorkSheet.GetRow(indice - 1).CreateCell(y).CellStyle = styleCab
                        If odtResumen.Columns(j).ColumnName.Equals("ORDEN_COMPRA") OrElse _
                         odtResumen.Columns(j).ColumnName.Equals("MEDIO_ENVIO") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("SENTIDO_CARGA") OrElse _
                        odtResumen.Columns(j).ColumnName.Equals("TIPO_UNIDAD") Then
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(odtResumen.Columns(j).ColumnName.ToString().Trim())
                        Else
                            Dim valorCab As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(0)
                            objWorkSheet.GetRow(indice - 1).GetCell(y).SetCellValue(valorCab)
                        End If

                        If j > 0 AndAlso FIN - INICIO = 2 Then
                            If intSheet = 1 OrElse (odtResumen.Columns(j).ColumnName.ToString().Trim().IndexOf("_") <> -1) Then
                                objWorkSheet.GetRow(indice - 2).CreateCell(y).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 1).CellStyle = styleCab
                                objWorkSheet.GetRow(indice - 2).CreateCell(y + 2).CellStyle = styleCab
                                Dim valorCab1 As String = Split(odtResumen.Columns(j).ColumnName.ToString().Trim(), "_")(1)
                                objWorkSheet.GetRow(indice - 2).GetCell(y).SetCellValue(valorCab1)
                                Dim Region As New NPOI.SS.Util.Region(indice - 2, INICIO, indice - 2, FIN)
                                objWorkSheet.AddMergedRegion(Region)
                                INICIO = FIN + 1
                            End If
                        End If
                        FIN = FIN + 1
                    Next
                End If

                Dim oDtClientes As DataTable = oDs.Tables("DT_Clientes")
                Dim ClienteRow As DataRow
                Dim RowInicioTemp As Integer = indice
                Dim RowInicioTemp2 As Integer = indice
                Dim RowInicioTemp3 As Integer = indice
                Dim lstInicioReg As New List(Of String)

                For Each ClienteRow In oDtClientes.Rows
                    Dim drSelFiltro As DataRow()
                    Dim drSelFiltroSentido As DataRow()
                    Dim drSelFiltroLote As DataRow()
                    Dim odtResumenTempLote As New DataTable
                    Dim odtResumenTemp As New DataTable
                    drSelFiltro = odtResumen.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString.Trim + "'")
                    odtResumenTemp = RowToDatatable(drSelFiltro, odtResumen)

                    For i As Integer = 0 To odtResumenTemp.Rows.Count - 1
                        RowInicioTemp2 = indice
                        If odtResumenTemp.TableName.Equals("DT_Resumen_Sentido") OrElse odtResumenTemp.TableName.Equals("DT_Resumen_MedioEnvio") Then
                            'Agrupa Por Medio de Envio o Sentido de Carga
                            If Not odtResumenTemp.Columns("MEDIO_ENVIO") Is Nothing Then
                                drSelFiltroSentido = odtResumenTemp.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString.Trim + "' and MEDIO_ENVIO = '" + odtResumenTemp.Rows(i)("MEDIO_ENVIO").ToString.Trim + "'")
                                odtResumenTempLote = RowToDatatable(drSelFiltroSentido, odtResumenTemp)
                            Else
                                drSelFiltroSentido = odtResumenTemp.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString.Trim + "' and SENTIDO_CARGA = '" + odtResumenTemp.Rows(i)("SENTIDO_CARGA").ToString.Trim + "'")
                            End If

                            For j As Integer = 0 To drSelFiltroSentido.Length - 1
                                'Agrupa por Lotes
                                RowInicioTemp3 = indice
                                If Not odtResumenTemp.Columns("MEDIO_ENVIO") Is Nothing Then
                                    drSelFiltroLote = odtResumenTempLote.Select("CLIENTE = '" + ClienteRow("CLIENTE").ToString.Trim + "' and MEDIO_ENVIO = '" + odtResumenTempLote.Rows(j)("MEDIO_ENVIO").ToString.Trim + "' and LOTE = '" + odtResumenTempLote.Rows(j)("LOTE").ToString.Trim + "'")
                                    For Each RowTemp2 As DataRow In drSelFiltroLote
                                        IndiceColum = 0
                                        For x As Integer = 0 To odtResumenTemp.Columns.Count - 1 '
                                            y = IndiceColum
                                            Dim celda As String = RowTemp2.Item(x).ToString().Trim()
                                            If odtResumen.Columns(x).ColumnName.Equals("ORDEN_COMPRA") Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                            ElseIf IsNumeric(celda) Then
                                                If celda.Contains("-") OrElse celda.Contains("+") Then
                                                    objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                                    objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                                ElseIf celda.Contains(".") Then
                                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleMonto
                                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                                ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                                Else
                                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleNumber
                                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                                End If
                                            Else
                                                If IsDate(celda) Then
                                                    celda = String.Format("{0:d}", CDate(celda))
                                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleFecha
                                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                                Else
                                                    objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                                    objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                                End If
                                            End If
                                            IndiceColum = IndiceColum + 1
                                        Next
                                        indice = indice + 1
                                    Next
                                    objWorkSheet.GetRow(indice).CreateCell(0).CellStyle = style
                                    objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = style
                                    objWorkSheet.GetRow(indice).CreateCell(2).CellStyle = styleTextNegitra
                                    objWorkSheet.GetRow(indice).GetCell(2).SetCellValue("SUB TOTAL")

                                    For x As Integer = 4 To odtResumenTemp.Columns.Count
                                        Dim sumKg As String = "SUM(" & HelpClass.LetraNumero(x) & (RowInicioTemp3 + 1).ToString & ":" & HelpClass.LetraNumero(x) & (indice).ToString & ")"
                                        objWorkSheet.GetRow(indice).CreateCell(x - 1).CellStyle = styleTotales
                                        objWorkSheet.GetRow(indice).GetCell(x - 1).CellFormula = (sumKg)
                                    Next

                                    objWorkSheet.GetRow(indice).GetCell(3).CellFormula = ""
                                    indice = indice + 1

                                    ' ''Merge Por cada Sentido Distinto
                                    If RowInicioTemp3 < indice - 1 Then
                                        Dim Region As New NPOI.SS.Util.Region(RowInicioTemp3, 2, indice - 2, 2)
                                        objWorkSheet.AddMergedRegion(Region)
                                    End If

                                    j += drSelFiltroLote.Length - 1

                                Else
                                    IndiceColum = 0
                                    For x As Integer = 0 To odtResumenTemp.Columns.Count - 1 '
                                        y = IndiceColum
                                        Dim celda As String = drSelFiltroSentido(j).Item(x).ToString().Trim()
                                        If odtResumen.Columns(x).ColumnName.Equals("ORDEN_COMPRA") Then
                                            objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                            objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                        ElseIf IsNumeric(celda) Then
                                            If celda.Contains("-") OrElse celda.Contains("+") Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                                objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                            ElseIf celda.Contains(".") Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleMonto
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                            ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                            Else
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleNumber
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                            End If
                                        Else
                                            If IsDate(celda) Then
                                                celda = String.Format("{0:d}", CDate(celda))
                                                objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleFecha
                                                objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                            Else
                                                objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                                objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                            End If
                                        End If
                                        IndiceColum = IndiceColum + 1
                                    Next
                                    indice = indice + 1
                                End If

                            Next
                            i += drSelFiltroSentido.Length - 1
                        Else
                            ''Otros Reportes
                            IndiceColum = 0
                            For x As Integer = 0 To odtResumenTemp.Columns.Count - 1 '
                                y = IndiceColum
                                Dim celda As String = odtResumenTemp.Rows(i).Item(x).ToString().Trim()
                                If odtResumen.Columns(x).ColumnName.Equals("ORDEN_COMPRA") Then
                                    objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                    objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                ElseIf IsNumeric(celda) Then
                                    If celda.Contains("-") OrElse celda.Contains("+") Then
                                        objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                        objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                    ElseIf celda.Contains(".") Then
                                        objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleMonto
                                        objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                    ElseIf celda.Substring(0, 1) = "0" AndAlso celda.Length > 1 Then
                                        objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = style
                                        objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                    Else
                                        objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleNumber
                                        objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(Convert.ToDouble(celda))
                                    End If
                                Else
                                    If IsDate(celda) Then
                                        celda = String.Format("{0:d}", CDate(celda))
                                        objWorkSheet.GetRow(indice).CreateCell(y).CellStyle = styleFecha
                                        objWorkSheet.GetRow(indice).GetCell(y).SetCellValue(celda)
                                    Else
                                        objWorkSheet.GetRow(indice).CreateCell(y).SetCellValue(celda)
                                        objWorkSheet.GetRow(indice).GetCell(y).CellStyle = style
                                    End If
                                End If
                                IndiceColum = IndiceColum + 1
                            Next
                            indice = indice + 1
                            ''
                        End If

                        If odtResumenTemp.TableName.Equals("DT_Resumen_MedioEnvio") Then
                            objWorkSheet.GetRow(indice).CreateCell(0).CellStyle = style
                            objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = styleTextNegitra
                            objWorkSheet.GetRow(indice).GetCell(1).SetCellValue("SUB TOTAL")
                            '
                            For x As Integer = 3 To odtResumenTemp.Columns.Count
                                Dim strRango As String = HelpClass.LetraNumero(x) & (RowInicioTemp2 + 1).ToString & ":" & HelpClass.LetraNumero(x) & (indice).ToString
                                Dim strRango2 As String = HelpClass.LetraNumero(3) & (RowInicioTemp2 + 1).ToString & ":" & HelpClass.LetraNumero(3) & (indice).ToString

                                Dim sumKg As String = "SUMIF(" & strRango2 & " ," & HelpClass.LetraNumero(3) & (indice).ToString & " , " & strRango & ")"
                                objWorkSheet.GetRow(indice).CreateCell(x - 1).CellStyle = styleTotales
                                objWorkSheet.GetRow(indice).GetCell(x - 1).CellFormula = (sumKg)
                            Next
                            objWorkSheet.GetRow(indice).GetCell(2).CellFormula = ""
                            objWorkSheet.GetRow(indice).GetCell(3).CellFormula = ""
                            indice = indice + 1
                            'Merge Por cada Medio de Envio
                            If RowInicioTemp2 < indice - 1 Then
                                Dim Region As New NPOI.SS.Util.Region(RowInicioTemp2, 1, indice - 2, 1)
                                objWorkSheet.AddMergedRegion(Region)
                            End If
                        Else
                            'Merge Por cada Sentido Distinto
                            If RowInicioTemp2 < indice - 1 Then
                                Dim Region As New NPOI.SS.Util.Region(RowInicioTemp2, 1, indice - 1, 1)
                                objWorkSheet.AddMergedRegion(Region)
                            End If
                        End If
                        RowInicioTemp2 = indice + 1
                    Next


                    If Not odtResumenTemp.TableName.Equals("DT_Resumen_MedioEnvio") Then
                        'Totales Por cada Cliente
                        objWorkSheet.GetRow(indice).CreateCell(0).CellStyle = style
                        objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = styleTextNegitra
                        objWorkSheet.GetRow(indice).GetCell(1).SetCellValue("SUB TOTAL")
                        For x As Integer = 3 To odtResumenTemp.Columns.Count
                            Dim sumKg As String = "SUM(" & HelpClass.LetraNumero(x) & (RowInicioTemp + 1).ToString & ":" & HelpClass.LetraNumero(x) & (indice).ToString & ")"
                            objWorkSheet.GetRow(indice).CreateCell(x - 1).CellStyle = styleTotales
                            objWorkSheet.GetRow(indice).GetCell(x - 1).CellFormula = (sumKg)
                        Next
                        'Borra lo de la Columna con la sumatoria de las O/C
                        If intSheet <> 1 Then
                            objWorkSheet.GetRow(indice).GetCell(2).CellFormula = ""
                        End If
                        objWorkSheet.GetRow(RowInicioTemp + 1).GetCell(0).SetCellValue("")
                    Else
                        indice = indice - 1
                        objWorkSheet.GetRow(RowInicioTemp + 1).GetCell(0).SetCellValue("")
                    End If
                    'Negrita para el Cliente del Grupo

                    objWorkSheet.GetRow(RowInicioTemp).GetCell(0).CellStyle = styleTextNegitra

                    ''Merge Por Cliente
                    Dim Region2 As New NPOI.SS.Util.Region(RowInicioTemp + 1, 0, indice, 0)
                    objWorkSheet.AddMergedRegion(Region2)
                    RowInicioTemp = indice + 1
                    indice = indice + 1
                    lstInicioReg.Add(indice)
                Next

                objWorkSheet.SetColumnWidth(0, 10000)
                If Not odtResumen.TableName.Equals("DT_Resumen_MedioEnvio") Then
                    'Suma El total Por Todos Los Clientes
                    objWorkSheet.GetRow(indice).CreateCell(1).CellStyle = styleTotales
                    objWorkSheet.GetRow(indice).GetCell(1).SetCellValue("TOTALES")
                    IndiceColum = 0
                    For z As Integer = 0 To odtResumen.Columns.Count - 3
                        IndiceColum = z + 2
                        Dim strSum As String
                        strSum = "SUM("

                        For reg As Integer = 0 To lstInicioReg.Count - 2
                            strSum = strSum & HelpClass.LetraNumero(IndiceColum + 1) & lstInicioReg(reg).ToString & ","
                        Next
                        strSum = strSum & HelpClass.LetraNumero(IndiceColum + 1) & lstInicioReg(lstInicioReg.Count - 1).ToString & ")"
                        objWorkSheet.GetRow(indice).CreateCell(IndiceColum).CellStyle = styleTotales
                        objWorkSheet.GetRow(indice).GetCell(IndiceColum).CellFormula = (strSum)
                        'Borra lo de la Columna con la sumatoria de las O/C
                        If intSheet <> 1 Then
                            objWorkSheet.GetRow(indice).GetCell(2).CellFormula = ""
                        End If

                        objWorkSheet.AutoSizeColumn(z)
                    Next
                Else

                    For z As Integer = 1 To odtResumen.Columns.Count - 3
                        objWorkSheet.AutoSizeColumn(z)
                    Next
                    objWorkSheet.SetColumnWidth(2, 10000)
                End If

            End If
        Next

        Dim FileName As String = "Reporte" & HelpClass.NowNumeric & "_" & Title & ".xls" 'xml
        Dim fs As New IO.FileStream(FileName, IO.FileMode.Create)

        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(FileName)
    End Sub


    Public Shared Sub ExportExcel_EvalOp(ByVal Title As String, ByVal strlis As Hashtable, ByVal TB As DataTable, ByVal TbKmRecor As DataTable, ByVal tbInc As DataTable)
        '=====================================================================



        Dim path As String = Application.StartupPath.ToString
        Dim archivo As String = "Evaluacion Operativa" & HelpClass.NowNumeric & ".xls" 'xml
        Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

        Dim objWorkBook As New HSSFWorkbook()  'Creamos un Libro
        Dim memoryStream As New MemoryStream()
        Dim objWorkSheet As New HSSFSheet(objWorkBook) 'Creamos la Hoja

        '====================================================================
        'creando Fuente  
        Dim oFuente As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFuente.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFuente.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFuente.FontHeight = 180
        'Estilo de celda
        Dim styleCeldaSubcat As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleCeldaSubcat.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleCeldaSubcat.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleCeldaSubcat.WrapText = True
        styleCeldaSubcat.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleCeldaSubcat.VerticalAlignment = VerticalAlignment.CENTER
        styleCeldaSubcat.Rotation = 90
        'le pasamos la fuente creada
        styleCeldaSubcat.SetFont(oFuente)
        'Creamos los bordes de la celda
        styleCeldaSubcat.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleCeldaSubcat.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleCeldaSubcat.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleCeldaSubcat.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleCeldaSubcat.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleCeldaSubcat.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleCeldaSubcat.BorderTop = CellBorderType.THIN      'Border Arriba
        styleCeldaSubcat.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'Estilo de celda
        Dim oFuente1 As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFuente.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFuente.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFuente.FontHeight = 160
        Dim styleCeldaCat As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleCeldaCat.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREY_25_PERCENT.index
        styleCeldaCat.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleCeldaCat.WrapText = True
        styleCeldaCat.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleCeldaCat.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleCeldaCat.SetFont(oFuente1)
        'Creamos los bordes de la celda
        styleCeldaCat.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleCeldaCat.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleCeldaCat.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleCeldaCat.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleCeldaCat.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleCeldaCat.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleCeldaCat.BorderTop = CellBorderType.THIN      'Border Arriba
        styleCeldaCat.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'Estilo de celda Factor Categoria
        Dim styleFacCat As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        'Estilo de celda
        styleFacCat.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.PALE_BLUE.index
        styleFacCat.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleFacCat.WrapText = True
        styleFacCat.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleFacCat.VerticalAlignment = VerticalAlignment.CENTER
        styleFacCat.Rotation = 90
        'le pasamos la fuente creada
        styleFacCat.SetFont(oFuente)
        'Creamos los bordes de la celda
        styleFacCat.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleFacCat.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleFacCat.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleFacCat.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleFacCat.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleFacCat.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleFacCat.BorderTop = CellBorderType.THIN      'Border Arriba
        styleFacCat.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        Dim styleValFacCat As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleValFacCat.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.PALE_BLUE.index
        styleValFacCat.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleValFacCat.WrapText = True
        styleValFacCat.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleValFacCat.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleValFacCat.SetFont(oFuente1)
        'Creamos los bordes de la celda
        styleValFacCat.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleValFacCat.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleValFacCat.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleValFacCat.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleValFacCat.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleValFacCat.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleValFacCat.BorderTop = CellBorderType.THIN      'Border Arriba
        styleValFacCat.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'Estilo de celda Factor SUBCategoria
        Dim styleFacCst As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleFacCst.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.YELLOW.index
        styleFacCst.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleFacCst.WrapText = True
        styleFacCst.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleFacCst.VerticalAlignment = VerticalAlignment.CENTER
        styleFacCst.DataFormat = HSSFDataFormat.GetBuiltinFormat("#,##0.00")
        'le pasamos la fuente creada
        styleFacCst.SetFont(oFuente)
        'Creamos los bordes de la celda
        styleFacCst.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleFacCst.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleFacCst.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleFacCst.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleFacCst.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleFacCst.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleFacCst.BorderTop = CellBorderType.THIN      'Border Arriba
        styleFacCst.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'



        'Estilo de celdas
        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        style.FillPattern = FillPatternType.SOLID_FOREGROUND
        style.WrapText = True
        style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        style.VerticalAlignment = VerticalAlignment.CENTER
        style.DataFormat = HSSFDataFormat.GetBuiltinFormat("#.##0,00")
        'le pasamos la fuente creada
        style.SetFont(oFuente1)
        'Creamos los bordes de la celda
        style.BorderBottom = CellBorderType.THIN   'Borde abajo
        style.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        style.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        style.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        style.BorderRight = CellBorderType.THIN    'Borde Derecho
        style.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        style.BorderTop = CellBorderType.THIN      'Border Arriba
        style.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'Estilo de celda Proveedor
        Dim styleProv As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleProv.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.LIGHT_GREEN.index
        styleProv.FillPattern = FillPatternType.SOLID_FOREGROUND
        style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT    'Aliniar  ---
        style.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleProv.SetFont(oFuente1)
        'Creamos los bordes de la celda
        styleProv.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleProv.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleProv.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleProv.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleProv.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleProv.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleProv.BorderTop = CellBorderType.THIN      'Border Arriba
        styleProv.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        '_____________________________________________________________________________________________

        Dim styleCelPRM_KM As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleCelPRM_KM.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.AQUA.index
        styleCelPRM_KM.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleCelPRM_KM.WrapText = True
        styleCelPRM_KM.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleCelPRM_KM.VerticalAlignment = VerticalAlignment.CENTER
        styleCelPRM_KM.Rotation = 90
        'le pasamos la fuente creada
        styleCelPRM_KM.SetFont(oFuente)
        'Creamos los bordes de la celda
        styleCelPRM_KM.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleCelPRM_KM.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleCelPRM_KM.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleCelPRM_KM.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleCelPRM_KM.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleCelPRM_KM.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleCelPRM_KM.BorderTop = CellBorderType.THIN      'Border Arriba
        styleCelPRM_KM.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba

        Dim styleCelEVOP As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleCelEVOP.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.ORANGE.index
        styleCelEVOP.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleCelEVOP.WrapText = True
        styleCelEVOP.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleCelEVOP.VerticalAlignment = VerticalAlignment.CENTER
        styleCelEVOP.Rotation = 90
        'le pasamos la fuente creada
        styleCelEVOP.SetFont(oFuente)
        'Creamos los bordes de la celda
        styleCelEVOP.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleCelEVOP.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleCelEVOP.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleCelEVOP.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleCelEVOP.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleCelEVOP.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleCelEVOP.BorderTop = CellBorderType.THIN      'Border Arriba
        styleCelEVOP.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        Dim styleCelTOTIN As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleCelTOTIN.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREY_40_PERCENT.index
        styleCelTOTIN.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleCelTOTIN.WrapText = True
        styleCelTOTIN.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleCelTOTIN.VerticalAlignment = VerticalAlignment.CENTER
        styleCelTOTIN.Rotation = 90
        'le pasamos la fuente creada
        styleCelTOTIN.SetFont(oFuente)
        'Creamos los bordes de la celda
        styleCelTOTIN.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleCelTOTIN.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleCelTOTIN.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleCelTOTIN.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleCelTOTIN.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleCelTOTIN.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleCelTOTIN.BorderTop = CellBorderType.THIN      'Border Arriba
        styleCelTOTIN.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        Dim styleValTOTIN As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleValTOTIN.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREY_40_PERCENT.index
        styleValTOTIN.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleValTOTIN.WrapText = True
        styleValTOTIN.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleValTOTIN.VerticalAlignment = VerticalAlignment.CENTER
        styleValTOTIN.DataFormat = HSSFDataFormat.GetBuiltinFormat("#,##0.00")
        'le pasamos la fuente creada
        styleValTOTIN.SetFont(oFuente1)
        'Creamos los bordes de la celda
        styleValTOTIN.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleValTOTIN.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleValTOTIN.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleValTOTIN.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleValTOTIN.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleValTOTIN.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleValTOTIN.BorderTop = CellBorderType.THIN      'Border Arriba
        styleValTOTIN.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'



        Dim styleVALPRM_KM As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleVALPRM_KM.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleVALPRM_KM.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleVALPRM_KM.WrapText = True
        styleVALPRM_KM.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleVALPRM_KM.VerticalAlignment = VerticalAlignment.CENTER
        styleVALPRM_KM.DataFormat = HSSFDataFormat.GetBuiltinFormat("#,##0.00")
        'le pasamos la fuente creada
        styleVALPRM_KM.SetFont(oFuente1)
        'Creamos los bordes de la celda
        styleVALPRM_KM.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleVALPRM_KM.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleVALPRM_KM.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleVALPRM_KM.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleVALPRM_KM.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleVALPRM_KM.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleVALPRM_KM.BorderTop = CellBorderType.THIN      'Border Arriba
        styleVALPRM_KM.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'
        '_____________________________________________________________________________________________



        '===================Se cargan Las Variables de Trabajo=====================


        'Dim indiceRowAnt As Integer = 1
        Dim y As Integer = 0 'Posiccation Inicial por la Izquierda
        Dim txtFiltro As String = "" 'Valor del filtro en posicion Inicial Actual
        Dim txtFiltro2 As String = "" 'Valor del filtro en posicion Final Actual
        Dim addEspacios As Integer = 8

        '---------------Creamos los rows (Ttulo)--------------


        'Estilo de celda
        Dim oFuenteTitulo As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFuenteTitulo.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        'oFuenteTitulo. = NPOI.SS.UserModel.FontUnderline.SINGLE
        oFuenteTitulo.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFuenteTitulo.FontHeight = 220
        oFuenteTitulo.Underline = 1
        Dim titulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        titulo.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        titulo.FillPattern = FillPatternType.SOLID_FOREGROUND
        titulo.WrapText = True
        titulo.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
        titulo.VerticalAlignment = VerticalAlignment.CENTER
        titulo.SetFont(oFuenteTitulo)
        Dim styleCeldaTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleCeldaTitulo.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleCeldaTitulo.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleCeldaTitulo.WrapText = True
        styleCeldaTitulo.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER
        styleCeldaTitulo.VerticalAlignment = VerticalAlignment.CENTER
        styleCeldaTitulo.SetFont(oFuenteTitulo)
        styleCeldaTitulo.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleCeldaTitulo.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleCeldaTitulo.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleCeldaTitulo.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleCeldaTitulo.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleCeldaTitulo.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleCeldaTitulo.BorderTop = CellBorderType.THIN      'Border Arriba
        styleCeldaTitulo.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        objWorkSheet = objWorkBook.CreateSheet(Title.ToString.Trim)

        'Fila del titulo'
        objWorkSheet.CreateRow(1)
        objWorkSheet.CreateRow(2)
        objWorkSheet.CreateRow(3)
        objWorkSheet.CreateRow(4)
        objWorkSheet.CreateRow(5)
        For i As Integer = 0 To strlis.Count - 1
            objWorkSheet.GetRow(i + 3).CreateCell(1).SetCellValue(strlis.Item(i).ToString)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(i + 3, 1, i + 3, 3))
        Next

        For c As Integer = 6 To 26
            objWorkSheet.GetRow(1).CreateCell(c)
            objWorkSheet.GetRow(1).GetCell(c).CellStyle = titulo
            objWorkSheet.GetRow(3).CreateCell(c)
            objWorkSheet.GetRow(3).GetCell(c).CellStyle = styleCeldaTitulo
            objWorkSheet.GetRow(4).CreateCell(c)
            objWorkSheet.GetRow(4).GetCell(c).CellStyle = styleCeldaTitulo
            objWorkSheet.GetRow(5).CreateCell(c)
            objWorkSheet.GetRow(5).GetCell(c).CellStyle = styleCeldaTitulo
        Next
        'objWorkSheet.GetRow(1).GetCell(5).CellStyle = styleCeldaTitulo
        objWorkSheet.GetRow(1).GetCell(6).SetCellValue("Evaluación Operativa")
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(1, 6, 1, 26))
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(3, 6, 3, 26))
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(4, 6, 4, 26))
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(5, 6, 5, 26))

        objWorkSheet.CreateRow(8).HeightInPoints = 15
        objWorkSheet.CreateRow(9).HeightInPoints = 145
        objWorkSheet.CreateRow(10)

        Dim Lista As New List(Of Object)
        Lista.Add("Item")
        Lista.Add("RUC")
        Lista.Add("Proveedor")
        Lista.Add("Total de Km Recorridos")
        Lista.Add("Total de Viajes en el Mes")
        Lista.Add("Total de Viajes con Incidencias")

        For index As Integer = 0 To Lista.Count - 1
            objWorkSheet.GetRow(9).CreateCell(index).CellStyle = styleCeldaSubcat
            objWorkSheet.GetRow(10).CreateCell(index).CellStyle = styleCeldaSubcat
            objWorkSheet.GetRow(9).GetCell(index).SetCellValue(Lista(index).ToString)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(9, index, 10, index))
            'objWorkSheet.AutoSizeColumn(index)
            objWorkSheet.AutoSizeColumn(index)
            'objWorkSheet.AutoSizeColumn(index)
            'objWorkSheet.AutoSizeColumn(index)
        Next
        'Cargar las Categrias   

        Dim Tbla As New DataTable
        Tbla = TB

        Dim CellIni As Integer = 6
        Dim CellFin As Integer = 5
        Dim count As Integer = 0
        Dim valorI As Integer = 0
        Dim validar As Integer = 0
        Dim ini As Integer = 0
        Dim valorTexto As String = ""

        Dim UltimColum As Integer = 0
        UltimColum = Tbla.Rows.Count

        For Ca As Integer = 1 To 1
            Dim cellcab As Integer = 0
            For i As Integer = 0 To Tbla.Rows.Count - 1
                CellIni = CellFin + 1
                ini = CellFin
                valorI = Tbla.Rows.Item(i)(0)
                If validar <> valorI Then
                    validar = valorI
                    objWorkSheet.GetRow(8).CreateCell(CellIni).CellStyle = styleCeldaCat
                    valorTexto = Tbla.Rows.Item(i)(1).ToString.Trim
                    objWorkSheet.GetRow(8).GetCell(CellIni).SetCellValue(valorTexto)
                    For j As Integer = 0 To Tbla.Rows.Count - 1
                        If Tbla.Rows.Item(j)(0).ToString.Trim = valorI Then
                            CellIni = CellIni

                            objWorkSheet.GetRow(9).CreateCell(CellIni).CellStyle = styleCeldaSubcat
                            objWorkSheet.GetRow(9).GetCell(CellIni).SetCellValue(Tbla.Rows.Item(j)(4).ToString.Trim)
                            objWorkSheet.GetRow(10).CreateCell(CellIni).CellStyle = styleFacCst
                            objWorkSheet.GetRow(10).GetCell(CellIni).SetCellValue(Convert.ToInt32(Tbla.Rows.Item(j)(5)))
                            CellIni += 1
                            objWorkSheet.GetRow(8).CreateCell(CellIni).CellStyle = styleCeldaSubcat
                            objWorkSheet.AutoSizeColumn(CellIni)
                        End If
                    Next
                    CellFin = CellIni
                    objWorkSheet.GetRow(9).CreateCell(CellFin).CellStyle = styleFacCat
                    objWorkSheet.GetRow(9).GetCell(CellFin).SetCellValue("Factor-" & valorTexto)
                    objWorkSheet.GetRow(10).CreateCell(CellIni).CellStyle = styleValFacCat
                    objWorkSheet.GetRow(10).GetCell(CellIni).SetCellValue(Convert.ToDecimal(Tbla.Rows.Item(i)(2)))
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(8, ini + 1, 8, CellFin))

                End If

            Next
            cellcab = CellIni
            Dim Lista2 As New List(Of Object)
            Lista2.Add("Total de Incidencias en el Mes")
            Lista2.Add("Promedio de Variables")
            Lista2.Add("% Efectividad en KM Recorridos")
            'Lista2.Add("%Performance del Servicio")
            Lista2.Add("Evaluacion Operativa Final")
            Dim ultimos As Integer = cellcab

            For index As Integer = 0 To Lista2.Count - 1
                objWorkSheet.GetRow(9).CreateCell(ultimos)
                objWorkSheet.GetRow(10).CreateCell(ultimos)

                If index = 0 Then
                    objWorkSheet.GetRow(9).GetCell(ultimos).CellStyle = styleCelTOTIN
                    objWorkSheet.GetRow(10).GetCell(ultimos).CellStyle = styleCelTOTIN
                ElseIf index = 1 Then
                    objWorkSheet.GetRow(9).GetCell(ultimos).CellStyle = styleCelPRM_KM
                    objWorkSheet.GetRow(10).GetCell(ultimos).CellStyle = styleCelPRM_KM
                ElseIf index = 2 Then
                    objWorkSheet.GetRow(9).GetCell(ultimos).CellStyle = styleCelPRM_KM
                    objWorkSheet.GetRow(10).GetCell(ultimos).CellStyle = styleCelPRM_KM
                ElseIf index = 3 Then
                    objWorkSheet.GetRow(9).GetCell(ultimos).CellStyle = styleCelEVOP
                    objWorkSheet.GetRow(10).GetCell(ultimos).CellStyle = styleCelEVOP

                End If
                ' objWorkSheet.GetRow(9).CreateCell(ultimos).CellStyle = styleCelPRM_KM
                objWorkSheet.GetRow(9).GetCell(ultimos).SetCellValue(Lista2(index).ToString)
                'objWorkSheet.GetRow(10).CreateCell(ultimos).CellStyle = styleCelPRM_KM
                objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(9, ultimos, 10, ultimos))
                objWorkSheet.AutoSizeColumn(ultimos)
                objWorkSheet.AutoSizeColumn(ultimos)
                objWorkSheet.AutoSizeColumn(ultimos)
                objWorkSheet.AutoSizeColumn(ultimos)
                ultimos += 1
            Next

        Next

        Dim TbProv As DataTable
        Dim DatosIni As Integer = 6
        Dim DAtosFin As Integer = 5
        Dim countDatos As Integer = 0
        Dim valDatosI As String = ""
        Dim validarDatos As String = ""
        Dim cat As Integer = 0
        Dim valcat As Integer = 0
        Dim tbinciden As DataTable
        Dim rucIni As String = ""
        tbinciden = tbInc
        TbProv = TbKmRecor
        Dim RowINI = 11
        Dim RowFIN = 10
        Dim IndiceRow As Integer = 0
        For k As Integer = 0 To TbProv.Rows.Count - 1
            IndiceRow += 1
            RowINI = RowFIN + 1
            rucIni = TbProv.Rows.Item(k)(0).ToString.Trim
            objWorkSheet.CreateRow(RowINI)


            objWorkSheet.GetRow(RowINI).CreateCell(0).CellStyle = styleProv
            objWorkSheet.GetRow(RowINI).GetCell(0).SetCellValue(IndiceRow)
            objWorkSheet.GetRow(RowINI).CreateCell(1).CellStyle = styleProv
            objWorkSheet.GetRow(RowINI).GetCell(1).SetCellValue(TbProv.Rows.Item(k)(0).ToString.Trim)
            objWorkSheet.GetRow(RowINI).CreateCell(2).CellStyle = styleProv
            objWorkSheet.GetRow(RowINI).GetCell(2).SetCellValue(TbProv.Rows.Item(k)(1).ToString.Trim)
            objWorkSheet.GetRow(RowINI).CreateCell(3).CellStyle = styleCeldaCat
            objWorkSheet.GetRow(RowINI).GetCell(3).SetCellValue(Convert.ToInt32(TbProv.Rows.Item(k)(2)))
            objWorkSheet.GetRow(RowINI).CreateCell(4).CellStyle = styleValTOTIN
            objWorkSheet.GetRow(RowINI).GetCell(4).SetCellValue(Convert.ToInt32(TbProv.Rows.Item(k)(3)))
            objWorkSheet.GetRow(RowINI).CreateCell(5).CellStyle = styleValTOTIN
            If TbProv.Rows.Item(k)(4).ToString.Trim = "" Then
                objWorkSheet.GetRow(RowINI).GetCell(5).SetCellValue(0)
            Else
                objWorkSheet.GetRow(RowINI).GetCell(5).SetCellValue(Convert.ToInt32(TbProv.Rows.Item(k)(4)))
            End If

            objWorkSheet.AutoSizeColumn(1)

            'la  Categoria'
            '===============Variables de FORMULA===========
            Dim Rang As String = ""
            Dim ListFactor As New List(Of Object)
            Dim factorColumn As String = ""
            '==============================================
            For i As Integer = 0 To tbInc.Rows.Count - 1
                DatosIni = DAtosFin + 1
                valDatosI = tbInc.Rows.Item(i)(3).ToString.Trim
                cat = tbInc.Rows.Item(i)(4)
                If rucIni = valDatosI AndAlso valcat <> cat Then
                    validarDatos = valDatosI
                    valcat = cat
                    Dim factor As String = ""
                    Dim listCeldas As New List(Of Object)
                    'Incidencias por categoria
                    For j As Integer = 0 To tbInc.Rows.Count - 1
                        If tbInc.Rows.Item(j)(3).ToString.Trim.Equals(rucIni) AndAlso tbInc.Rows.Item(j)(4) = valcat Then
                            DatosIni = DatosIni
                            objWorkSheet.GetRow(RowINI).CreateCell(DatosIni).CellStyle = style
                            objWorkSheet.GetRow(RowINI).GetCell(DatosIni).SetCellValue(Convert.ToSingle(tbInc.Rows.Item(j)(0)))
                            DatosIni += 1
                            listCeldas.Add(DatosIni - 1)
                        End If
                    Next
                    DAtosFin = DatosIni
                    objWorkSheet.GetRow(RowINI).CreateCell(DAtosFin).CellStyle = styleFacCst
                    For Each item As Object In listCeldas
                        factor = factor & "(" & Letra_Numnero(item) & "$11" & "*" & Letra_Numnero(item) & RowINI + 1 & "*" & Letra_Numnero(DAtosFin) & "$11" & ") + "
                    Next
                    Rang = Rang + "" & Letra_Numnero(listCeldas.Item(0)) & RowINI + 1 & ":" & Letra_Numnero(listCeldas.Item(listCeldas.Count - 1)) & RowINI + 1 & ","
                    Dim ff As String = ""
                    ff = "100-(" & factor & 0 & ")"
                    objWorkSheet.GetRow(RowINI).GetCell(DAtosFin).CellFormula = (ff)
                    ListFactor.Add(DAtosFin)
                End If
            Next
            Dim Sum As String = ""
            Dim kmRecorridos As String = ""
            Dim promVar As String = ""
            Dim PerformService As String = ""
            For Each item As Object In ListFactor
                factorColumn = factorColumn & "(" & Letra_Numnero(item) & "$11" & "*" & Letra_Numnero(item) & RowINI + 1 & ") + "
            Next
            Sum = "SUM(" & Rang & 0 & ")"
            promVar = factorColumn & 0
            kmRecorridos = "(100-((" & Letra_Numnero(5) & RowINI + 1 & "*100)-((" & Letra_Numnero(4) & RowINI + 1 & "-" & Letra_Numnero(5) & RowINI + 1 & ")*(" & Letra_Numnero(3) & RowINI + 1 & ")/10000))/" & Letra_Numnero(4) & RowINI + 1 & ")>100,100,((100-((" & Letra_Numnero(5) & RowINI + 1 & "*100)-((" & Letra_Numnero(4) & RowINI + 1 & "-" & Letra_Numnero(5) & RowINI + 1 & ")*(" & Letra_Numnero(3) & RowINI + 1 & ")/10000))/" & Letra_Numnero(4) & RowINI + 1 & "))"

            'Total de Incidencias
            objWorkSheet.GetRow(RowINI).CreateCell(DAtosFin + 1).CellStyle = styleValTOTIN
            objWorkSheet.GetRow(RowINI).GetCell(DAtosFin + 1).CellFormula = (Sum)
            'Promedio de Variables
            objWorkSheet.GetRow(RowINI).CreateCell(DAtosFin + 2).CellStyle = style
            objWorkSheet.GetRow(RowINI).GetCell(DAtosFin + 2).CellFormula = (promVar)
            'Efectividad en KM recorridos 
            objWorkSheet.GetRow(RowINI).CreateCell(DAtosFin + 3).CellStyle = styleVALPRM_KM
            objWorkSheet.GetRow(RowINI).GetCell(DAtosFin + 3).CellFormula = ("IF(" & kmRecorridos & ")")

            PerformService = "" & Letra_Numnero(DAtosFin + 2) & RowINI + 1 & ">=0,((" & Letra_Numnero(DAtosFin + 2) & RowINI + 1 & "+(" & Letra_Numnero(DAtosFin + 3) & RowINI + 1 & "*2))/3),0"

            'Performance del Servicio
            objWorkSheet.GetRow(RowINI).CreateCell(DAtosFin + 4).CellStyle = styleFacCst
            objWorkSheet.GetRow(RowINI).GetCell(DAtosFin + 4).CellFormula = ("IF(" & PerformService & ")")
            ' objWorkSheet.GetRow(RowINI).GetCell(DAtosFin + 4).CellType.NUMERIC()

            RowFIN = RowINI
            DAtosFin = 5
        Next

        objWorkSheet.SetColumnWidth(0, 800)
        objWorkSheet.SetColumnWidth(1, 9350)
        '============================================================================
        'Cargando Logo
        'objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(0, 0, 0, 1))
        Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
        'create the anchor
        Dim anchor As HSSFClientAnchor
        anchor = New HSSFClientAnchor(0, 0, 0, 100, 0, 0, 0, 0)
        If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If
        If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If
        objWorkSheet.DisplayGridlines = False
        'objWorkSheet.AutoSizeColumn(1)
        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(archivo)

    End Sub


    Public Shared Sub ExportExcel_EvalAdmin(ByVal Title As String, ByVal strlis As Hashtable, ByVal AA As String, ByVal MM As String, ByVal TbCategoria As DataTable, ByVal tbProveedor As DataTable, ByVal tbEvaAdm As DataTable)
        ''=========================================================================
        Dim path As String = Application.StartupPath.ToString
        Dim archivo As String = "Evaluacion Administrativa" & HelpClass.NowNumeric & ".xls" 'xml
        Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

        Dim objWorkBook As New HSSFWorkbook()  'Creamos un Libro
        Dim memoryStream As New MemoryStream()
        Dim objWorkSheet As New HSSFSheet(objWorkBook) 'Creamos la Hoja

        '=====================================CREANDO ESTILO DE LAS CELDAS============================

        'Estilo de celda Titulo
        Dim oFuente1 As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFuente1.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFuente1.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFuente1.FontHeight = 180
        'oFuente1.FontNam = NPOI.SS.UserModel.FontFamily.ROMAN.ToString
        '---------------------------------------------------------------------------------------------
        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleTitulo.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.LIGHT_ORANGE.index
        styleTitulo.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleTitulo.WrapText = True
        styleTitulo.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleTitulo.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleTitulo.SetFont(oFuente1)
        'Creamos los bordes de la celda
        styleTitulo.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleTitulo.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleTitulo.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleTitulo.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleTitulo.BorderRight = CellBorderType.THIN     'Borde Derecho
        styleTitulo.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleTitulo.BorderTop = CellBorderType.THIN      'Border Arriba
        styleTitulo.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'Estilo de celda Filtro
        Dim oFuente2 As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFuente2.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFuente2.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFuente2.FontHeight = 220
        'oFuente1.FontNam = NPOI.SS.UserModel.FontFamily.ROMAN.ToString
        '------------------------------------------------------------------------------------------------
        Dim styleFiltro As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleFiltro.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.YELLOW.index
        styleFiltro.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleFiltro.WrapText = True
        styleFiltro.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleFiltro.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleFiltro.SetFont(oFuente2)
        'Creamos los bordes de la celda
        styleFiltro.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleFiltro.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleFiltro.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleFiltro.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleFiltro.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleFiltro.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleFiltro.BorderTop = CellBorderType.THIN      'Border Arriba
        styleFiltro.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'Estilo de celda Cabecera
        Dim oFuente3 As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFuente3.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFuente3.Boldweight = NPOI.SS.UserModel.FontBoldWeight.NORMAL
        oFuente3.FontHeight = 160
        'oFuente1.FontNam = NPOI.SS.UserModel.FontFamily.ROMAN.ToString
        '------------------------------------------------------------------------------------------------
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleCab.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleCab.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleCab.WrapText = True
        styleCab.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleCab.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleCab.SetFont(oFuente3)
        'Creamos los bordes de la celda
        styleCab.BorderBottom = CellBorderType.THIN    'Borde abajo
        styleCab.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleCab.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleCab.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleCab.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleCab.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleCab.BorderTop = CellBorderType.THIN      'Border Arriba
        styleCab.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        Dim style As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        style.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        style.FillPattern = FillPatternType.SOLID_FOREGROUND
        style.WrapText = True
        style.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        style.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        style.SetFont(oFuente3)
        'Creamos los bordes de la celda
        style.BorderBottom = CellBorderType.THIN   'Borde abajo
        style.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        style.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        style.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        style.BorderRight = CellBorderType.THIN    'Borde Derecho
        style.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        style.BorderTop = CellBorderType.THIN      'Border Arriba
        style.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        '------------------------------------------------------------------------------------------------
        Dim stylecabProv As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        stylecabProv.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREY_25_PERCENT.index
        stylecabProv.FillPattern = FillPatternType.SOLID_FOREGROUND
        stylecabProv.WrapText = True
        stylecabProv.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        stylecabProv.VerticalAlignment = VerticalAlignment.CENTER
        stylecabProv.Rotation = 30
        'le pasamos la fuente creada
        stylecabProv.SetFont(oFuente3)
        'Creamos los bordes de la celda
        stylecabProv.BorderBottom = CellBorderType.THIN   'Borde abajo
        stylecabProv.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        stylecabProv.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        stylecabProv.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        stylecabProv.BorderRight = CellBorderType.THIN    'Borde Derecho
        stylecabProv.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        stylecabProv.BorderTop = CellBorderType.THIN      'Border Arriba
        stylecabProv.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        Dim styleProv As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleProv.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREY_25_PERCENT.index
        styleProv.FillPattern = FillPatternType.SOLID_FOREGROUND
        'styleProv.WrapText = True
        styleProv.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT    'Aliniar  ---
        styleProv.VerticalAlignment = VerticalAlignment.CENTER
        'styleProv()
        'le pasamos la fuente creada
        styleProv.SetFont(oFuente3)
        'Creamos los bordes de la celda
        styleProv.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleProv.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleProv.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleProv.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleProv.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleProv.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleProv.BorderTop = CellBorderType.THIN      'Border Arriba
        styleProv.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'Estilo de los Promedio
        Dim styleProm As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleProm.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.LIGHT_ORANGE.index
        styleProm.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleProm.WrapText = True
        styleProm.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleProm.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleProm.SetFont(oFuente3)
        'Creamos los bordes de la celda
        styleProm.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleProm.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleProm.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleProm.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleProm.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleProm.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleProm.BorderTop = CellBorderType.THIN      'Border Arriba
        styleProm.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'Estilo de los Promedio Final
        Dim stylePromFin As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        stylePromFin.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.LIGHT_BLUE.index
        stylePromFin.FillPattern = FillPatternType.SOLID_FOREGROUND
        stylePromFin.WrapText = True
        stylePromFin.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        stylePromFin.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        stylePromFin.SetFont(oFuente1)
        'Creamos los bordes de la celda
        stylePromFin.BorderBottom = CellBorderType.THIN   'Borde abajo
        stylePromFin.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        stylePromFin.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        stylePromFin.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        stylePromFin.BorderRight = CellBorderType.THIN    'Borde Derecho
        stylePromFin.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        stylePromFin.BorderTop = CellBorderType.THIN      'Border Arriba
        stylePromFin.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'
        '===============================================================================================

        Dim RowInicio As Integer = 0
        Dim CellInicio As Integer = 1
        Dim CellFin As Integer = TbCategoria.Rows.Count + 6

        ''---------------Creamos los rows (Titulo)--------------
        objWorkSheet = objWorkBook.CreateSheet(Title.ToString.Trim)

        'Fila del titulo'
        objWorkSheet.CreateRow(RowInicio)
        For T As Integer = CellInicio To CellFin
            objWorkSheet.GetRow(0).CreateCell(T).CellStyle = styleTitulo
        Next
        objWorkSheet.GetRow(0).GetCell(1).SetCellValue("EVALUACIÓN ADMINISTRATIVA")
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(0, 1, 0, 16))

        '==================================FILTORS===============================
        'Dim Mes As String = ""
        'Dim Año As String = ""
        'Mes = MM
        'Año = AA

        'objWorkSheet.CreateRow(3).HeightInPoints = 25
        'For T As Integer = CellInicio To CellFin
        '    objWorkSheet.GetRow(3).CreateCell(T).CellStyle = styleFiltro
        'Next
        'objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(3, 1, 3, TbCategoria.Rows.Count + 6))
        'objWorkSheet.GetRow(3).GetCell(1).SetCellValue("De " & Mes & " del " & Año)

        '=======================CREACION DE LAS CABECERAS=========================   

        'Fila del titulo'
        objWorkSheet.CreateRow(1)
        objWorkSheet.CreateRow(2)
        objWorkSheet.CreateRow(3)

        For i As Integer = 0 To strlis.Count - 1
            objWorkSheet.GetRow(i + 1).CreateCell(1).SetCellValue(strlis.Item(i).ToString)
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(i + 1, 1, i + 1, 3))
        Next

        '===============
        RowInicio += 2
        objWorkSheet.CreateRow(4)
        objWorkSheet.CreateRow(5)
        objWorkSheet.CreateRow(6).HeightInPoints = 27
        objWorkSheet.CreateRow(7)
        Dim tbCab As DataTable
        Dim CellIniCab As Integer = 3
        Dim CellFinCab As Integer = 2
        Dim valorTexto As String = ""

        Dim validar As String = ""
        Dim valorI As String = ""
        Dim ini As Integer = 0
        Dim CellCab As Integer = 0
        tbCab = TbCategoria

        objWorkSheet.GetRow(4).CreateCell(1).CellStyle = styleCab
        objWorkSheet.GetRow(5).CreateCell(1).CellStyle = styleCab

        objWorkSheet.GetRow(4).CreateCell(2).CellStyle = styleCab
        objWorkSheet.GetRow(5).CreateCell(2).CellStyle = styleCab

        objWorkSheet.GetRow(6).CreateCell(1).CellStyle = stylecabProv
        objWorkSheet.GetRow(6).CreateCell(2).CellStyle = stylecabProv

        objWorkSheet.GetRow(7).CreateCell(1).CellStyle = stylecabProv
        objWorkSheet.GetRow(7).CreateCell(2).CellStyle = stylecabProv

        'Pegando el estilo
        objWorkSheet.GetRow(6).GetCell(1).CellStyle = stylecabProv
        objWorkSheet.GetRow(6).GetCell(2).CellStyle = stylecabProv

        objWorkSheet.GetRow(7).GetCell(1).CellStyle = styleProv
        objWorkSheet.GetRow(7).GetCell(2).CellStyle = styleProv

        objWorkSheet.GetRow(6).GetCell(1).SetCellValue("Asistio ?")
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(6, 1, 6, 2))

        objWorkSheet.GetRow(7).GetCell(1).SetCellValue("Ruc")
        objWorkSheet.GetRow(7).GetCell(2).SetCellValue("Proveedor")

        Dim intInicio As Integer

        For index As Integer = 1 To 1
            For i As Integer = 0 To tbCab.Rows.Count - 1
                CellIniCab = CellFinCab + 1
                ini = CellFinCab
                valorI = tbCab.Rows.Item(i)(0)
                If validar <> valorI Then
                    validar = valorI
                    intInicio = CellIniCab
                    objWorkSheet.GetRow(4).CreateCell(CellIniCab)
                    objWorkSheet.GetRow(5).CreateCell(CellIniCab)

                    valorTexto = tbCab.Rows.Item(i)(1).ToString.Trim
                    objWorkSheet.GetRow(4).GetCell(CellIniCab).SetCellValue(valorTexto)
                    objWorkSheet.GetRow(4).GetCell(CellIniCab).CellStyle = styleCab

                    objWorkSheet.GetRow(5).GetCell(CellIniCab).CellStyle = styleCab

                    '=======================SUB CATEGORIA===============================
                    For j As Integer = 0 To tbCab.Rows.Count - 1
                        If tbCab.Rows.Item(j)(0).ToString.Trim = valorI Then
                            CellIniCab = CellIniCab
                            objWorkSheet.GetRow(6).CreateCell(CellIniCab).CellStyle = styleCab
                            objWorkSheet.GetRow(6).GetCell(CellIniCab).SetCellValue(tbCab.Rows.Item(j)(4).ToString.Trim)
                            objWorkSheet.GetRow(7).CreateCell(CellIniCab).CellStyle = styleCab
                            objWorkSheet.GetRow(7).GetCell(CellIniCab).SetCellValue(Convert.ToInt32(tbCab.Rows.Item(j)(5)))
                            CellIniCab += 1
                            objWorkSheet.AutoSizeColumn(CellIniCab)
                        End If
                    Next
                    CellFinCab = CellIniCab
                    objWorkSheet.GetRow(4).CreateCell(CellIniCab)
                    objWorkSheet.GetRow(5).CreateCell(CellIniCab)

                    objWorkSheet.GetRow(5).GetCell(CellIniCab).CellStyle = styleCab
                    objWorkSheet.GetRow(4).GetCell(CellIniCab).CellStyle = styleCab

                    objWorkSheet.GetRow(4).GetCell(CellIniCab).SetCellValue(Convert.ToDecimal(tbCab.Rows.Item(i)(2)))


                    objWorkSheet.GetRow(6).CreateCell(CellFinCab)
                    objWorkSheet.GetRow(6).GetCell(CellFinCab).CellStyle = styleProm

                    objWorkSheet.GetRow(7).CreateCell(CellFinCab)
                    objWorkSheet.GetRow(7).GetCell(CellFinCab).CellStyle = styleProm
                    objWorkSheet.GetRow(6).GetCell(CellFinCab).SetCellValue("PROMEDIO")

                    

                    If ini + 1 <> 2 Then
                        For T As Integer = intInicio + 1 To CellFinCab - 1
                            objWorkSheet.GetRow(4).CreateCell(T).CellStyle = styleCab
                            objWorkSheet.GetRow(5).CreateCell(T).CellStyle = styleCab
                        Next
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(4, ini + 1, 5, CellFinCab - 1))
                    Else
                        For T As Integer = 3 To 5
                            objWorkSheet.GetRow(4).CreateCell(T).CellStyle = styleCab
                            objWorkSheet.GetRow(5).CreateCell(T).CellStyle = styleCab
                        Next
                        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(4, 2, 5, 5))
                    End If
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(4, CellFinCab, 5, CellFinCab))
                    objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(6, CellFinCab, 7, CellFinCab))
                End If

            Next
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(4, 1, 5, 5))
            CellCab = CellIniCab
            objWorkSheet.GetRow(4).CreateCell(CellCab).CellStyle = stylePromFin
            objWorkSheet.GetRow(5).CreateCell(CellCab).CellStyle = stylePromFin
            objWorkSheet.GetRow(6).CreateCell(CellCab).CellStyle = stylePromFin
            objWorkSheet.GetRow(7).CreateCell(CellCab).CellStyle = stylePromFin
            objWorkSheet.GetRow(4).GetCell(CellCab).SetCellValue("PROMEDIO FINAL")
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(4, CellCab, 7, CellCab))
        Next

        '======================================CARGAMOS LOS DATOS====================================
        Dim TB_Proveedor As New DataTable
        Dim TB_EvaAdm As New DataTable
        Dim rucIni As String = ""
        Dim RowINI As Integer = 8
        Dim RowFIN As Integer = 7
        Dim DatosIni As Integer = 3
        Dim DAtosFin As Integer = 2
        Dim countDatos As Integer = 0
        Dim valDatosI As String = ""
        Dim validarDatos As String = ""
        Dim cat As Integer = 0
        Dim valcat As Integer = 0
        TB_Proveedor = tbProveedor
        TB_EvaAdm = tbEvaAdm

        ''====================================================
        For n As Integer = 0 To TB_Proveedor.Rows.Count - 1
            RowINI = RowFIN + 1
            rucIni = TB_Proveedor.Rows.Item(n)(0).ToString.Trim

            objWorkSheet.CreateRow(RowINI)
            objWorkSheet.GetRow(RowINI).CreateCell(1).CellStyle = styleProv
            objWorkSheet.GetRow(RowINI).GetCell(1).SetCellValue(TB_Proveedor.Rows.Item(n)(0).ToString.Trim)

            objWorkSheet.GetRow(RowINI).CreateCell(2).CellStyle = styleProv
            objWorkSheet.GetRow(RowINI).GetCell(2).SetCellValue(TB_Proveedor.Rows.Item(n)(1).ToString.Trim)

            '===============================CATEGORIA==============================================
            Dim Promedio As String = ""
            Dim listPromedio As New List(Of Object)
            For i As Integer = 0 To TB_EvaAdm.Rows.Count - 1
                DatosIni = DAtosFin + 1
                valDatosI = TB_EvaAdm.Rows.Item(i)(3).ToString.Trim
                cat = TB_EvaAdm.Rows.Item(i)(4)
                If rucIni = valDatosI AndAlso valcat <> cat Then
                    validarDatos = valDatosI
                    valcat = cat
                    Dim factor As String = ""
                    Dim listCeldas As New List(Of Object)

                    'Ecaluacion  por categoria
                    For j As Integer = 0 To TB_EvaAdm.Rows.Count - 1
                        If TB_EvaAdm.Rows.Item(j)(3).ToString.Trim.Equals(rucIni) AndAlso TB_EvaAdm.Rows.Item(j)(4) = valcat Then
                            DatosIni = DatosIni
                            objWorkSheet.GetRow(RowINI).CreateCell(DatosIni).CellStyle = style
                            objWorkSheet.GetRow(RowINI).GetCell(DatosIni).SetCellValue(Convert.ToSingle(tbEvaAdm.Rows.Item(j)(0)))
                            DatosIni += 1
                            listCeldas.Add(DatosIni - 1)
                        End If
                    Next
                    DAtosFin = DatosIni
                    objWorkSheet.GetRow(RowINI).CreateCell(DAtosFin).CellStyle = styleProm
                    For Each item As Object In listCeldas
                        factor = factor & "(" & Letra_Numnero(item) & "$8" & "*" & Letra_Numnero(item) & RowINI + 1 & ") + "
                    Next
                    objWorkSheet.GetRow(RowINI).GetCell(DAtosFin).CellFormula = (factor & 0)
                    listPromedio.Add(DAtosFin)
                End If
            Next

            For Each item As Object In listPromedio
                Promedio = Promedio & "(" & Letra_Numnero(item) & "$5" & "*" & Letra_Numnero(item) & RowINI + 1 & ") + "
            Next
            objWorkSheet.GetRow(RowINI).CreateCell(DAtosFin + 1).CellStyle = stylePromFin
            objWorkSheet.GetRow(RowINI).GetCell(DAtosFin + 1).CellFormula = (Promedio & 0)
            RowFIN = RowINI
            DAtosFin = 2
        Next
        ''Cargando los los valores
        objWorkSheet.DisplayGridlines = False
        objWorkSheet.SetColumnWidth(0, 800)
        objWorkSheet.SetColumnWidth(1, 10100)
        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(archivo)
    End Sub

    Public Shared Sub ExportExcel_EvalFinal(ByVal Title As String, ByVal TbMes As DataTable, ByVal TbEvaFin As DataTable, ByVal HTProvedoor As Hashtable)

        ''=========================================================================
        Dim path As String = Application.StartupPath.ToString
        Dim archivo As String = "Evaluacion Final" & HelpClass.NowNumeric & ".xls" 'xml
        Dim fs As New IO.FileStream(archivo, IO.FileMode.Create)

        Dim objWorkBook As New HSSFWorkbook()  'Creamos un Libro
        Dim memoryStream As New MemoryStream()
        Dim objWorkSheet As New HSSFSheet(objWorkBook) 'Creamos la Hoja
        '==========================================================================
        'ESTILO DEL TITULO'
        Dim oFuente As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFuente.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFuente.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFuente.FontHeight = 240
        oFuente.FontName = "Arial"
        '---------------------------------------------------------------------------------------------
        Dim styleTitulo As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleTitulo.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.GREY_25_PERCENT.index
        styleTitulo.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleTitulo.WrapText = True
        styleTitulo.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT    'Aliniar  ---
        styleTitulo.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleTitulo.SetFont(oFuente)
        'Creamos los bordes de la celda
        styleTitulo.BorderBottom = CellBorderType.MEDIUM   'Borde abajo
        styleTitulo.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleTitulo.BorderLeft = CellBorderType.MEDIUM     'Borde izquierdo'
        styleTitulo.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleTitulo.BorderRight = CellBorderType.MEDIUM    'Borde Derecho
        styleTitulo.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleTitulo.BorderTop = CellBorderType.MEDIUM      'Border Arriba
        styleTitulo.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'ESTILO DE LAS CABECERAS'
        Dim oFuente1 As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFuente1.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFuente1.Boldweight = NPOI.SS.UserModel.FontBoldWeight.BOLD
        oFuente1.FontHeight = 160
        oFuente1.FontName = "Arial Narrow"
        '---------------------------------------------------------------------------------------------
        Dim styleCab As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleCab.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.YELLOW.index
        styleCab.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleCab.WrapText = True
        styleCab.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleCab.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleCab.SetFont(oFuente1)
        'Creamos los bordes de la celda
        styleCab.BorderBottom = CellBorderType.MEDIUM   'Borde abajo
        styleCab.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleCab.BorderLeft = CellBorderType.MEDIUM     'Borde izquierdo'
        styleCab.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleCab.BorderRight = CellBorderType.MEDIUM    'Borde Derecho
        styleCab.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleCab.BorderTop = CellBorderType.MEDIUM      'Border Arriba
        styleCab.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'
        'ESTILO DEL DETALLE
        Dim styleDet As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleDet.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleDet.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleDet.WrapText = True
        styleDet.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleDet.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleDet.SetFont(oFuente1)
        'Creamos los bordes de la celda
        styleDet.BorderBottom = CellBorderType.MEDIUM   'Borde abajo
        styleDet.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleDet.BorderLeft = CellBorderType.MEDIUM     'Borde izquierdo'
        styleDet.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleDet.BorderRight = CellBorderType.MEDIUM    'Borde Derecho
        styleDet.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleDet.BorderTop = CellBorderType.MEDIUM      'Border Arriba
        styleDet.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        'ESTILO PROVEEDOR

        Dim oFuente2 As NPOI.SS.UserModel.Font = objWorkBook.CreateFont
        oFuente2.Color = NPOI.HSSF.Util.HSSFColor.BLACK.index
        oFuente2.Boldweight = NPOI.SS.UserModel.FontBoldWeight.NORMAL
        oFuente2.FontHeight = 160
        oFuente2.FontName = "Trebuchet MS"
        Dim styleProv As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleProv.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.LIGHT_GREEN.index
        styleProv.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleProv.Alignment = NPOI.SS.UserModel.HorizontalAlignment.LEFT    'Aliniar  ---
        styleProv.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleProv.SetFont(oFuente2)
        'Creamos los bordes de la celda
        styleProv.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleProv.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleProv.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleProv.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleProv.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleProv.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleProv.BorderTop = CellBorderType.THIN      'Border Arriba
        styleProv.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'
        'ESTILO DE OP VALOR
        Dim styleVALOP As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleVALOP.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.YELLOW.index
        styleVALOP.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleVALOP.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleVALOP.VerticalAlignment = VerticalAlignment.CENTER
        styleVALOP.DataFormat = HSSFDataFormat.GetBuiltinFormat("#,##0.00")
        'le pasamos la fuente creada
        styleVALOP.SetFont(oFuente2)
        'Creamos los bordes de la celda
        styleVALOP.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleVALOP.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleVALOP.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleVALOP.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleVALOP.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleVALOP.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleVALOP.BorderTop = CellBorderType.THIN      'Border Arriba
        styleVALOP.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        Dim styleEVFIN As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleEVFIN.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.LEMON_CHIFFON.index
        styleEVFIN.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleEVFIN.WrapText = True
        styleEVFIN.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleEVFIN.VerticalAlignment = VerticalAlignment.CENTER
        'le pasamos la fuente creada
        styleEVFIN.SetFont(oFuente1)
        'Creamos los bordes de la celda
        styleEVFIN.BorderBottom = CellBorderType.MEDIUM   'Borde abajo
        styleEVFIN.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleEVFIN.BorderLeft = CellBorderType.MEDIUM     'Borde izquierdo'
        styleEVFIN.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleEVFIN.BorderRight = CellBorderType.MEDIUM    'Borde Derecho
        styleEVFIN.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleEVFIN.BorderTop = CellBorderType.MEDIUM      'Border Arriba
        styleEVFIN.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'

        Dim styleVALFN As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleVALFN.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.LEMON_CHIFFON.index
        styleVALFN.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleVALFN.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleVALFN.VerticalAlignment = VerticalAlignment.CENTER
        styleVALFN.DataFormat = HSSFDataFormat.GetBuiltinFormat("#,##0.00")
        'le pasamos la fuente creada
        styleVALFN.SetFont(oFuente2)
        'Creamos los bordes de la celda
        styleVALFN.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleVALFN.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleVALFN.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleVALFN.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleVALFN.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleVALFN.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleVALFN.BorderTop = CellBorderType.THIN      'Border Arriba
        styleVALFN.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'
        'ESTILO EV ADM VALORES
        Dim styleVAADM As NPOI.SS.UserModel.CellStyle = objWorkBook.CreateCellStyle()
        styleVAADM.FillForegroundColor = NPOI.HSSF.Util.HSSFColor.WHITE.index
        styleVAADM.FillPattern = FillPatternType.SOLID_FOREGROUND
        styleVAADM.Alignment = NPOI.SS.UserModel.HorizontalAlignment.CENTER    'Aliniar  ---
        styleVAADM.VerticalAlignment = VerticalAlignment.CENTER
        styleVAADM.DataFormat = HSSFDataFormat.GetBuiltinFormat("#,##0.00")
        'le pasamos la fuente creada
        styleVAADM.SetFont(oFuente2)
        'Creamos los bordes de la celda
        styleVAADM.BorderBottom = CellBorderType.THIN   'Borde abajo
        styleVAADM.BottomBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index 'Color del borde abajp
        styleVAADM.BorderLeft = CellBorderType.THIN     'Borde izquierdo'
        styleVAADM.LeftBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde izquierdo'
        styleVAADM.BorderRight = CellBorderType.THIN    'Borde Derecho
        styleVAADM.RightBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde derecho'
        styleVAADM.BorderTop = CellBorderType.THIN      'Border Arriba
        styleVAADM.TopBorderColor = NPOI.HSSF.Util.HSSFColor.BLACK.index  'Color del borde Arriba'
        '==========================================================================
        Dim RowInicio As Integer = 5
        Dim CellInicio As Integer = 3
        Dim CellFin As Integer = 38

        ''---------------Creamos los rows (Titulo)--------------
        objWorkSheet = objWorkBook.CreateSheet(Title.ToString.Trim)

        'Fila del titulo'
        objWorkSheet.CreateRow(5)
        objWorkSheet.CreateRow(6)
        For T As Integer = CellInicio To CellFin
            objWorkSheet.GetRow(5).CreateCell(T).CellStyle = styleTitulo
            objWorkSheet.GetRow(6).CreateCell(T).CellStyle = styleTitulo
        Next
        objWorkSheet.GetRow(5).GetCell(3).SetCellValue("% Performance Mensual del Servicio")
        objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(5, 3, 6, 38))
        ''=======================CREACION DE LAS CABECERAS=========================   

        Dim lista As New List(Of String)
        lista.Add("EV. OPERATIVA")
        lista.Add("EV. ADMISNTR.")
        lista.Add("FINAL")

        Dim tbCab As New DataTable
        tbCab = TbMes
        Dim CellIniCab As Integer = 0
        Dim CellIniDet As Integer = 0
        Dim count As Integer = 0
        objWorkSheet.CreateRow(7).HeightInPoints = 18
        objWorkSheet.CreateRow(8)
        For i As Integer = 0 To tbCab.Rows.Count - 1
            CellIniCab = CellIniCab + 3
            objWorkSheet.GetRow(7).CreateCell(CellIniCab).CellStyle = styleCab
            objWorkSheet.GetRow(7).GetCell(CellIniCab).SetCellValue(tbCab.Rows.Item(i)(2).ToString)
            CellIniDet = CellIniCab
            count = 0
            For Each list As String In lista
                If count = 0 Then
                    objWorkSheet.GetRow(8).CreateCell(CellIniDet).CellStyle = styleDet
                    objWorkSheet.GetRow(8).GetCell(CellIniDet).SetCellValue(list)
                ElseIf count = 1 Then
                    objWorkSheet.GetRow(8).CreateCell(CellIniDet).CellStyle = styleDet
                    objWorkSheet.GetRow(8).GetCell(CellIniDet).SetCellValue(list)
                ElseIf count = 2 Then
                    objWorkSheet.GetRow(8).CreateCell(CellIniDet).CellStyle = styleEVFIN
                    objWorkSheet.GetRow(8).GetCell(CellIniDet).SetCellValue(list)
                    objWorkSheet.GetRow(7).CreateCell(CellIniDet).CellStyle = styleCab
                End If
                count += 1
                CellIniDet = CellIniDet + 1
            Next
            objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(7, CellIniCab, 7, CellIniDet - 1))
        Next
        '===================================CARGANDO LA DATA=========================================

        Dim rucIni As String = ""
        Dim RowINI As Integer = 9
        Dim RowFIN As Integer = 8
        Dim DatosIni As Integer = 0
        'Dim DAtosFin As Integer = -1
        Dim validaRuc As String = ""
        Dim CellIniDeta As Integer = 3
        Dim CellFinDeta As Integer = 2
        Dim cellvacia As Integer = 0
        Dim Mes As Integer = 0
        Dim tb_EvaFin As New DataTable
        Dim htProv As New Hashtable
        Dim index As Integer = 0
        Dim estado As Boolean
        tb_EvaFin = TbEvaFin
     
        For Each key As Object In HTProvedoor.Keys
            RowINI = RowFIN + 1
            index += 1
            rucIni = key.ToString.Trim
            objWorkSheet.CreateRow(RowINI)
            objWorkSheet.GetRow(RowINI).CreateCell(0).CellStyle = styleProv
            objWorkSheet.GetRow(RowINI).GetCell(0).SetCellValue(index)
            objWorkSheet.GetRow(RowINI).CreateCell(1).CellStyle = styleProv
            objWorkSheet.GetRow(RowINI).GetCell(1).SetCellValue(rucIni)
            objWorkSheet.GetRow(RowINI).CreateCell(2).CellStyle = styleProv
            objWorkSheet.GetRow(RowINI).GetCell(2).SetCellValue(HTProvedoor.Item(key).ToString.Trim)

            For M As Integer = 0 To TbMes.Rows.Count - 1
                Mes = TbMes.Rows.Item(M)(0)
                DatosIni = DatosIni + 3
                cellvacia = DatosIni
                estado = False
                For R As Integer = 0 To tb_EvaFin.Rows.Count - 1
                    CellIniDeta = DatosIni
                    If rucIni = tb_EvaFin.Rows.Item(R)(0).ToString.Trim AndAlso Mes = tb_EvaFin.Rows.Item(R)(3) Then
                        estado = True
                        objWorkSheet.GetRow(RowINI).CreateCell(CellIniDeta).CellStyle = styleVALOP

                        If tb_EvaFin.Rows.Item(R)(5) IsNot DBNull.Value AndAlso Convert.ToDecimal(tb_EvaFin.Rows.Item(R)(5)) <> -1 Then
                            objWorkSheet.GetRow(RowINI).GetCell(CellIniDeta).SetCellValue(Convert.ToDecimal(tb_EvaFin.Rows.Item(R)(5)))
                        End If
                        objWorkSheet.GetRow(RowINI).CreateCell(CellIniDeta + 1).CellStyle = styleVAADM
                        If tb_EvaFin.Rows.Item(R)(6) IsNot DBNull.Value AndAlso Convert.ToDecimal(tb_EvaFin.Rows.Item(R)(6)) <> -1 Then
                            objWorkSheet.GetRow(RowINI).GetCell(CellIniDeta + 1).SetCellValue(Convert.ToDecimal(tb_EvaFin.Rows.Item(R)(6)))
                        End If
                        objWorkSheet.GetRow(RowINI).CreateCell(CellIniDeta + 2).CellStyle = styleVALFN

                        If tb_EvaFin.Rows.Item(R)(7) IsNot DBNull.Value AndAlso Convert.ToDecimal(tb_EvaFin.Rows.Item(R)(7)) <> -1 Then
                            objWorkSheet.GetRow(RowINI).GetCell(CellIniDeta + 2).SetCellValue(Convert.ToDecimal(tb_EvaFin.Rows.Item(R)(7)))
                        End If
                    End If
                Next

                If estado = False Then
                    CellIniDeta = DatosIni
                    For index1 As Integer = 0 To 2
                        If index1 = 0 Then
                            objWorkSheet.GetRow(RowINI).CreateCell(CellIniDeta).CellStyle = styleVALOP
                            'objWorkSheet.GetRow(RowINI).GetCell(CellIniDeta).SetCellValue(Convert.ToDecimal(0))
                        ElseIf index1 = 1 Then
                            objWorkSheet.GetRow(RowINI).CreateCell(CellIniDeta).CellStyle = styleVAADM
                            ' objWorkSheet.GetRow(RowINI).GetCell(CellIniDeta).SetCellValue(Convert.ToDecimal(0))
                        ElseIf index1 = 2 Then
                            objWorkSheet.GetRow(RowINI).CreateCell(CellIniDeta).CellStyle = styleVALFN
                            'objWorkSheet.GetRow(RowINI).GetCell(CellIniDeta).SetCellValue(Convert.ToDecimal(0))
                        End If
                        'objWorkSheet.GetRow(RowINI).CreateCell(CellIniDeta).SetCellValue(Convert.ToDecimal(0))
                        ' objWorkSheet.GetRow(RowINI).GetCell(CellIniDet)
                        CellIniDeta = CellIniDeta + 1
                    Next

                End If



                ' DAtosFin = DatosIni
            Next
            RowFIN = RowINI
            DatosIni = 0
        Next

        objWorkSheet.SetColumnWidth(0, 800)
        objWorkSheet.SetColumnWidth(1, 10100)
        '===============================CARGANDO EL LOGO============================================
        'objWorkSheet.AddMergedRegion(New NPOI.SS.Util.Region(0, 0, 0, 1))
        Dim patriarch As HSSFPatriarch = DirectCast(objWorkSheet.CreateDrawingPatriarch(), HSSFPatriarch)
        'create the anchor
        Dim anchor As HSSFClientAnchor
        anchor = New HSSFClientAnchor(0, 0, 0, 100, 0, 0, 0, 0)
        If IO.File.Exists(Application.StartupPath & " \Resources\logo.png") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Resources\logo.png", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If
        If IO.File.Exists(Application.StartupPath & "\Imagenes\logo.gif") Then
            'load the picture and get the picture index in the workbook
            Dim picture As HSSFPicture = DirectCast(patriarch.CreatePicture(anchor, LoadImage(Application.StartupPath & " \Imagenes\logo.gif", objWorkBook)), HSSFPicture)
            'Reset the image to the original size.
            picture.Resize(0.5)
        End If
        '===========================Cargando los los valores===============================
        objWorkSheet.DisplayGridlines = False
        'objWorkSheet.SetColumnWidth(0, 800)
        'objWorkSheet.SetColumnWidth(1, 10100)
        'objWorkSheet.SetZoom(85, 1)
        objWorkBook.Write(fs)
        fs.Close()
        HelpClass.AbrirDocumento(archivo)
    End Sub



    Public Shared Function Letra_Numnero(ByVal Index As Integer) As String
        Dim LETRA As String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        Dim Longitud As Integer
        Dim L As String = ""
        Longitud = LETRA.Length

        Dim VV As Decimal = 0D
        VV = CInt(Fix(Index / Longitud))


        If VV < 1 Then
            L = LETRA.Chars(Index)
        Else
            Dim x As Integer
            x = CInt(Fix(VV)) - 1
            Dim y As Integer = Index - Longitud
            L = LETRA.Chars(x) & "" & LETRA.Chars(y)
        End If
        Return L

    End Function

End Class
