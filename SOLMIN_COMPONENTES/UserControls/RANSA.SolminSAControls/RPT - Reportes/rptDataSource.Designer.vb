'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.3082
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("rptDataSource"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class rptDataSource
    Inherits Global.System.Data.DataSet
    
    Private tableucMercaderia_DgF01A As ucMercaderia_DgF01ADataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ucMercaderia_DgF01A")) Is Nothing) Then
                MyBase.Tables.Add(New ucMercaderia_DgF01ADataTable(ds.Tables("ucMercaderia_DgF01A")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ucMercaderia_DgF01A() As ucMercaderia_DgF01ADataTable
        Get
            Return Me.tableucMercaderia_DgF01A
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As rptDataSource = CType(MyBase.Clone,rptDataSource)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("ucMercaderia_DgF01A")) Is Nothing) Then
                MyBase.Tables.Add(New ucMercaderia_DgF01ADataTable(ds.Tables("ucMercaderia_DgF01A")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableucMercaderia_DgF01A = CType(MyBase.Tables("ucMercaderia_DgF01A"),ucMercaderia_DgF01ADataTable)
        If (initTable = true) Then
            If (Not (Me.tableucMercaderia_DgF01A) Is Nothing) Then
                Me.tableucMercaderia_DgF01A.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "rptDataSource"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/rptDataSource.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableucMercaderia_DgF01A = New ucMercaderia_DgF01ADataTable
        MyBase.Tables.Add(Me.tableucMercaderia_DgF01A)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeucMercaderia_DgF01A() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As rptDataSource = New rptDataSource
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub ucMercaderia_DgF01ARowChangeEventHandler(ByVal sender As Object, ByVal e As ucMercaderia_DgF01ARowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ucMercaderia_DgF01ADataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCMRCLR As Global.System.Data.DataColumn
        
        Private columnTMRCD2 As Global.System.Data.DataColumn
        
        Private columnCMRCD As Global.System.Data.DataColumn
        
        Private columnFPUWEB As Global.System.Data.DataColumn
        
        Private columnCFMCLR As Global.System.Data.DataColumn
        
        Private columnTFMCLR As Global.System.Data.DataColumn
        
        Private columnCGRCLR As Global.System.Data.DataColumn
        
        Private columnTGRCLR As Global.System.Data.DataColumn
        
        Private _columnIMVTA_ As Global.System.Data.DataColumn
        
        Private columnIMVTAS As Global.System.Data.DataColumn
        
        Private columnTMRCTR As Global.System.Data.DataColumn
        
        Private columnFVNCMR As Global.System.Data.DataColumn
        
        Private columnFINVRN As Global.System.Data.DataColumn
        
        Private columnCPTDAR As Global.System.Data.DataColumn
        
        Private columnSESTRG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ucMercaderia_DgF01A"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CMRCLRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCMRCLR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TMRCD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTMRCD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CMRCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCMRCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FPUWEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFPUWEB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CFMCLRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCFMCLR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TFMCLRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTFMCLR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CGRCLRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCGRCLR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TGRCLRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGRCLR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _IMVTA_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnIMVTA_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMVTASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMVTAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TMRCTRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTMRCTR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FVNCMRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFVNCMR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FINVRNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINVRN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CPTDARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPTDAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SESTRGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSESTRG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ucMercaderia_DgF01ARow
            Get
                Return CType(Me.Rows(index),ucMercaderia_DgF01ARow)
            End Get
        End Property
        
        Public Event ucMercaderia_DgF01ARowChanging As ucMercaderia_DgF01ARowChangeEventHandler
        
        Public Event ucMercaderia_DgF01ARowChanged As ucMercaderia_DgF01ARowChangeEventHandler
        
        Public Event ucMercaderia_DgF01ARowDeleting As ucMercaderia_DgF01ARowChangeEventHandler
        
        Public Event ucMercaderia_DgF01ARowDeleted As ucMercaderia_DgF01ARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AdducMercaderia_DgF01ARow(ByVal row As ucMercaderia_DgF01ARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AdducMercaderia_DgF01ARow(ByVal CMRCLR As String, ByVal TMRCD2 As String, ByVal CMRCD As String, ByVal FPUWEB As String, ByVal CFMCLR As String, ByVal TFMCLR As String, ByVal CGRCLR As String, ByVal TGRCLR As String, ByVal _IMVTA_ As String, ByVal IMVTAS As String, ByVal TMRCTR As String, ByVal FVNCMR As String, ByVal FINVRN As String, ByVal CPTDAR As String, ByVal SESTRG As String) As ucMercaderia_DgF01ARow
            Dim rowucMercaderia_DgF01ARow As ucMercaderia_DgF01ARow = CType(Me.NewRow,ucMercaderia_DgF01ARow)
            Dim columnValuesArray() As Object = New Object() {CMRCLR, TMRCD2, CMRCD, FPUWEB, CFMCLR, TFMCLR, CGRCLR, TGRCLR, _IMVTA_, IMVTAS, TMRCTR, FVNCMR, FINVRN, CPTDAR, SESTRG}
            rowucMercaderia_DgF01ARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowucMercaderia_DgF01ARow)
            Return rowucMercaderia_DgF01ARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ucMercaderia_DgF01ADataTable = CType(MyBase.Clone,ucMercaderia_DgF01ADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ucMercaderia_DgF01ADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCMRCLR = MyBase.Columns("CMRCLR")
            Me.columnTMRCD2 = MyBase.Columns("TMRCD2")
            Me.columnCMRCD = MyBase.Columns("CMRCD")
            Me.columnFPUWEB = MyBase.Columns("FPUWEB")
            Me.columnCFMCLR = MyBase.Columns("CFMCLR")
            Me.columnTFMCLR = MyBase.Columns("TFMCLR")
            Me.columnCGRCLR = MyBase.Columns("CGRCLR")
            Me.columnTGRCLR = MyBase.Columns("TGRCLR")
            Me._columnIMVTA_ = MyBase.Columns("IMVTA$")
            Me.columnIMVTAS = MyBase.Columns("IMVTAS")
            Me.columnTMRCTR = MyBase.Columns("TMRCTR")
            Me.columnFVNCMR = MyBase.Columns("FVNCMR")
            Me.columnFINVRN = MyBase.Columns("FINVRN")
            Me.columnCPTDAR = MyBase.Columns("CPTDAR")
            Me.columnSESTRG = MyBase.Columns("SESTRG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCMRCLR = New Global.System.Data.DataColumn("CMRCLR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCMRCLR)
            Me.columnTMRCD2 = New Global.System.Data.DataColumn("TMRCD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTMRCD2)
            Me.columnCMRCD = New Global.System.Data.DataColumn("CMRCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCMRCD)
            Me.columnFPUWEB = New Global.System.Data.DataColumn("FPUWEB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFPUWEB)
            Me.columnCFMCLR = New Global.System.Data.DataColumn("CFMCLR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCFMCLR)
            Me.columnTFMCLR = New Global.System.Data.DataColumn("TFMCLR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTFMCLR)
            Me.columnCGRCLR = New Global.System.Data.DataColumn("CGRCLR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCGRCLR)
            Me.columnTGRCLR = New Global.System.Data.DataColumn("TGRCLR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGRCLR)
            Me._columnIMVTA_ = New Global.System.Data.DataColumn("IMVTA$", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnIMVTA_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnIMVTA_")
            Me._columnIMVTA_.ExtendedProperties.Add("Generator_UserColumnName", "IMVTA$")
            MyBase.Columns.Add(Me._columnIMVTA_)
            Me.columnIMVTAS = New Global.System.Data.DataColumn("IMVTAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMVTAS)
            Me.columnTMRCTR = New Global.System.Data.DataColumn("TMRCTR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTMRCTR)
            Me.columnFVNCMR = New Global.System.Data.DataColumn("FVNCMR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFVNCMR)
            Me.columnFINVRN = New Global.System.Data.DataColumn("FINVRN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINVRN)
            Me.columnCPTDAR = New Global.System.Data.DataColumn("CPTDAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPTDAR)
            Me.columnSESTRG = New Global.System.Data.DataColumn("SESTRG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSESTRG)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewucMercaderia_DgF01ARow() As ucMercaderia_DgF01ARow
            Return CType(Me.NewRow,ucMercaderia_DgF01ARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ucMercaderia_DgF01ARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ucMercaderia_DgF01ARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ucMercaderia_DgF01ARowChangedEvent) Is Nothing) Then
                RaiseEvent ucMercaderia_DgF01ARowChanged(Me, New ucMercaderia_DgF01ARowChangeEvent(CType(e.Row,ucMercaderia_DgF01ARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ucMercaderia_DgF01ARowChangingEvent) Is Nothing) Then
                RaiseEvent ucMercaderia_DgF01ARowChanging(Me, New ucMercaderia_DgF01ARowChangeEvent(CType(e.Row,ucMercaderia_DgF01ARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ucMercaderia_DgF01ARowDeletedEvent) Is Nothing) Then
                RaiseEvent ucMercaderia_DgF01ARowDeleted(Me, New ucMercaderia_DgF01ARowChangeEvent(CType(e.Row,ucMercaderia_DgF01ARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ucMercaderia_DgF01ARowDeletingEvent) Is Nothing) Then
                RaiseEvent ucMercaderia_DgF01ARowDeleting(Me, New ucMercaderia_DgF01ARowChangeEvent(CType(e.Row,ucMercaderia_DgF01ARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveucMercaderia_DgF01ARow(ByVal row As ucMercaderia_DgF01ARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As rptDataSource = New rptDataSource
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ucMercaderia_DgF01ADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ucMercaderia_DgF01ARow
        Inherits Global.System.Data.DataRow
        
        Private tableucMercaderia_DgF01A As ucMercaderia_DgF01ADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableucMercaderia_DgF01A = CType(Me.Table,ucMercaderia_DgF01ADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CMRCLR() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.CMRCLRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CMRCLR' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.CMRCLRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TMRCD2() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.TMRCD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TMRCD2' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.TMRCD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CMRCD() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.CMRCDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CMRCD' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.CMRCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FPUWEB() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.FPUWEBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FPUWEB' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.FPUWEBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CFMCLR() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.CFMCLRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CFMCLR' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.CFMCLRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TFMCLR() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.TFMCLRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TFMCLR' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.TFMCLRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CGRCLR() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.CGRCLRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CGRCLR' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.CGRCLRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TGRCLR() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.TGRCLRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TGRCLR' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.TGRCLRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _IMVTA_() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A._IMVTA_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMVTA$' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A._IMVTA_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMVTAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.IMVTASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMVTAS' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.IMVTASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TMRCTR() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.TMRCTRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TMRCTR' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.TMRCTRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FVNCMR() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.FVNCMRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FVNCMR' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.FVNCMRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FINVRN() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.FINVRNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FINVRN' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.FINVRNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CPTDAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.CPTDARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CPTDAR' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.CPTDARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SESTRG() As String
            Get
                Try 
                    Return CType(Me(Me.tableucMercaderia_DgF01A.SESTRGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SESTRG' de la tabla 'ucMercaderia_DgF01A' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableucMercaderia_DgF01A.SESTRGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCMRCLRNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.CMRCLRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCMRCLRNull()
            Me(Me.tableucMercaderia_DgF01A.CMRCLRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTMRCD2Null() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.TMRCD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTMRCD2Null()
            Me(Me.tableucMercaderia_DgF01A.TMRCD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCMRCDNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.CMRCDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCMRCDNull()
            Me(Me.tableucMercaderia_DgF01A.CMRCDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFPUWEBNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.FPUWEBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFPUWEBNull()
            Me(Me.tableucMercaderia_DgF01A.FPUWEBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCFMCLRNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.CFMCLRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCFMCLRNull()
            Me(Me.tableucMercaderia_DgF01A.CFMCLRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTFMCLRNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.TFMCLRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTFMCLRNull()
            Me(Me.tableucMercaderia_DgF01A.TFMCLRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCGRCLRNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.CGRCLRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCGRCLRNull()
            Me(Me.tableucMercaderia_DgF01A.CGRCLRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTGRCLRNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.TGRCLRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTGRCLRNull()
            Me(Me.tableucMercaderia_DgF01A.TGRCLRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_IMVTA_Null() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A._IMVTA_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_IMVTA_Null()
            Me(Me.tableucMercaderia_DgF01A._IMVTA_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMVTASNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.IMVTASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMVTASNull()
            Me(Me.tableucMercaderia_DgF01A.IMVTASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTMRCTRNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.TMRCTRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTMRCTRNull()
            Me(Me.tableucMercaderia_DgF01A.TMRCTRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFVNCMRNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.FVNCMRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFVNCMRNull()
            Me(Me.tableucMercaderia_DgF01A.FVNCMRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFINVRNNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.FINVRNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFINVRNNull()
            Me(Me.tableucMercaderia_DgF01A.FINVRNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCPTDARNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.CPTDARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCPTDARNull()
            Me(Me.tableucMercaderia_DgF01A.CPTDARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSESTRGNull() As Boolean
            Return Me.IsNull(Me.tableucMercaderia_DgF01A.SESTRGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSESTRGNull()
            Me(Me.tableucMercaderia_DgF01A.SESTRGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ucMercaderia_DgF01ARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ucMercaderia_DgF01ARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ucMercaderia_DgF01ARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ucMercaderia_DgF01ARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
