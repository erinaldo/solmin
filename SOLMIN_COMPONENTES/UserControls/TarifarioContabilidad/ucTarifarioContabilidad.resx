<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Codigo.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Cliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Descripcion.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="RUC.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Direccion.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6Zt85n8AdV3QbV1Cn5kAAAAASUVORK5CYII=
</value>
  </data>
</root>