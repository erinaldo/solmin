'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5477
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.42.
'

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Web.Services.WebServiceBindingAttribute(Name:="ws_syncSoap", [Namespace]:="http://ransa.net/")>  _
Partial Public Class ws_sync
    Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
    
    Private testOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ListarGuiasOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ObtenerEtiquetaOperationCompleted As System.Threading.SendOrPostCallback
    
    Private Etiqueta6x4OutotecOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ObtenerDataEtiqueta6x4OperationCompleted As System.Threading.SendOrPostCallback
    
    Private TraceLogCPSAAOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GenericTraceLogOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ActualizarGuiaOperationCompleted As System.Threading.SendOrPostCallback
    
    '''<remarks/>
    Public Sub New()
        MyBase.New
        Me.Url = "http://secure.ransa.net/wssolmin/common/ws_sync.asmx"
    End Sub
    
    '''<remarks/>
    Public Event testCompleted As testCompletedEventHandler
    
    '''<remarks/>
    Public Event ListarGuiasCompleted As ListarGuiasCompletedEventHandler
    
    '''<remarks/>
    Public Event ObtenerEtiquetaCompleted As ObtenerEtiquetaCompletedEventHandler
    
    '''<remarks/>
    Public Event Etiqueta6x4OutotecCompleted As Etiqueta6x4OutotecCompletedEventHandler
    
    '''<remarks/>
    Public Event ObtenerDataEtiqueta6x4Completed As ObtenerDataEtiqueta6x4CompletedEventHandler
    
    '''<remarks/>
    Public Event TraceLogCPSAACompleted As TraceLogCPSAACompletedEventHandler
    
    '''<remarks/>
    Public Event GenericTraceLogCompleted As GenericTraceLogCompletedEventHandler
    
    '''<remarks/>
    Public Event ActualizarGuiaCompleted As ActualizarGuiaCompletedEventHandler
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.net/test", RequestNamespace:="http://ransa.net/", ResponseNamespace:="http://ransa.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function test(ByVal code As String) As String
        Dim results() As Object = Me.Invoke("test", New Object() {code})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function Begintest(ByVal code As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("test", New Object() {code}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function Endtest(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub testAsync(ByVal code As String)
        Me.testAsync(code, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub testAsync(ByVal code As String, ByVal userState As Object)
        If (Me.testOperationCompleted Is Nothing) Then
            Me.testOperationCompleted = AddressOf Me.OntestOperationCompleted
        End If
        Me.InvokeAsync("test", New Object() {code}, Me.testOperationCompleted, userState)
    End Sub
    
    Private Sub OntestOperationCompleted(ByVal arg As Object)
        If (Not (Me.testCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent testCompleted(Me, New testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.net/ListarGuias", RequestNamespace:="http://ransa.net/", ResponseNamespace:="http://ransa.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ListarGuias(ByVal usuario As String, ByVal password As String, ByVal xml_data As String) As String
        Dim results() As Object = Me.Invoke("ListarGuias", New Object() {usuario, password, xml_data})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginListarGuias(ByVal usuario As String, ByVal password As String, ByVal xml_data As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ListarGuias", New Object() {usuario, password, xml_data}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndListarGuias(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ListarGuiasAsync(ByVal usuario As String, ByVal password As String, ByVal xml_data As String)
        Me.ListarGuiasAsync(usuario, password, xml_data, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ListarGuiasAsync(ByVal usuario As String, ByVal password As String, ByVal xml_data As String, ByVal userState As Object)
        If (Me.ListarGuiasOperationCompleted Is Nothing) Then
            Me.ListarGuiasOperationCompleted = AddressOf Me.OnListarGuiasOperationCompleted
        End If
        Me.InvokeAsync("ListarGuias", New Object() {usuario, password, xml_data}, Me.ListarGuiasOperationCompleted, userState)
    End Sub
    
    Private Sub OnListarGuiasOperationCompleted(ByVal arg As Object)
        If (Not (Me.ListarGuiasCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ListarGuiasCompleted(Me, New ListarGuiasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.net/ObtenerEtiqueta", RequestNamespace:="http://ransa.net/", ResponseNamespace:="http://ransa.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ObtenerEtiqueta(ByVal usuario As String, ByVal password As String, ByVal xml_data As String) As String
        Dim results() As Object = Me.Invoke("ObtenerEtiqueta", New Object() {usuario, password, xml_data})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginObtenerEtiqueta(ByVal usuario As String, ByVal password As String, ByVal xml_data As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ObtenerEtiqueta", New Object() {usuario, password, xml_data}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndObtenerEtiqueta(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ObtenerEtiquetaAsync(ByVal usuario As String, ByVal password As String, ByVal xml_data As String)
        Me.ObtenerEtiquetaAsync(usuario, password, xml_data, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ObtenerEtiquetaAsync(ByVal usuario As String, ByVal password As String, ByVal xml_data As String, ByVal userState As Object)
        If (Me.ObtenerEtiquetaOperationCompleted Is Nothing) Then
            Me.ObtenerEtiquetaOperationCompleted = AddressOf Me.OnObtenerEtiquetaOperationCompleted
        End If
        Me.InvokeAsync("ObtenerEtiqueta", New Object() {usuario, password, xml_data}, Me.ObtenerEtiquetaOperationCompleted, userState)
    End Sub
    
    Private Sub OnObtenerEtiquetaOperationCompleted(ByVal arg As Object)
        If (Not (Me.ObtenerEtiquetaCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ObtenerEtiquetaCompleted(Me, New ObtenerEtiquetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.net/Etiqueta6x4Outotec", RequestNamespace:="http://ransa.net/", ResponseNamespace:="http://ransa.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Etiqueta6x4Outotec(ByVal usuario As String, ByVal password As String, ByVal xml_data As String) As String
        Dim results() As Object = Me.Invoke("Etiqueta6x4Outotec", New Object() {usuario, password, xml_data})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginEtiqueta6x4Outotec(ByVal usuario As String, ByVal password As String, ByVal xml_data As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Etiqueta6x4Outotec", New Object() {usuario, password, xml_data}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndEtiqueta6x4Outotec(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub Etiqueta6x4OutotecAsync(ByVal usuario As String, ByVal password As String, ByVal xml_data As String)
        Me.Etiqueta6x4OutotecAsync(usuario, password, xml_data, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub Etiqueta6x4OutotecAsync(ByVal usuario As String, ByVal password As String, ByVal xml_data As String, ByVal userState As Object)
        If (Me.Etiqueta6x4OutotecOperationCompleted Is Nothing) Then
            Me.Etiqueta6x4OutotecOperationCompleted = AddressOf Me.OnEtiqueta6x4OutotecOperationCompleted
        End If
        Me.InvokeAsync("Etiqueta6x4Outotec", New Object() {usuario, password, xml_data}, Me.Etiqueta6x4OutotecOperationCompleted, userState)
    End Sub
    
    Private Sub OnEtiqueta6x4OutotecOperationCompleted(ByVal arg As Object)
        If (Not (Me.Etiqueta6x4OutotecCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent Etiqueta6x4OutotecCompleted(Me, New Etiqueta6x4OutotecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.net/ObtenerDataEtiqueta6x4", RequestNamespace:="http://ransa.net/", ResponseNamespace:="http://ransa.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ObtenerDataEtiqueta6x4(ByVal usuario As String, ByVal password As String, ByVal xml_data As String) As String
        Dim results() As Object = Me.Invoke("ObtenerDataEtiqueta6x4", New Object() {usuario, password, xml_data})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginObtenerDataEtiqueta6x4(ByVal usuario As String, ByVal password As String, ByVal xml_data As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ObtenerDataEtiqueta6x4", New Object() {usuario, password, xml_data}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndObtenerDataEtiqueta6x4(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ObtenerDataEtiqueta6x4Async(ByVal usuario As String, ByVal password As String, ByVal xml_data As String)
        Me.ObtenerDataEtiqueta6x4Async(usuario, password, xml_data, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ObtenerDataEtiqueta6x4Async(ByVal usuario As String, ByVal password As String, ByVal xml_data As String, ByVal userState As Object)
        If (Me.ObtenerDataEtiqueta6x4OperationCompleted Is Nothing) Then
            Me.ObtenerDataEtiqueta6x4OperationCompleted = AddressOf Me.OnObtenerDataEtiqueta6x4OperationCompleted
        End If
        Me.InvokeAsync("ObtenerDataEtiqueta6x4", New Object() {usuario, password, xml_data}, Me.ObtenerDataEtiqueta6x4OperationCompleted, userState)
    End Sub
    
    Private Sub OnObtenerDataEtiqueta6x4OperationCompleted(ByVal arg As Object)
        If (Not (Me.ObtenerDataEtiqueta6x4CompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ObtenerDataEtiqueta6x4Completed(Me, New ObtenerDataEtiqueta6x4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.net/TraceLogCPSAA", RequestNamespace:="http://ransa.net/", ResponseNamespace:="http://ransa.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function TraceLogCPSAA(ByVal Texto As String) As Boolean
        Dim results() As Object = Me.Invoke("TraceLogCPSAA", New Object() {Texto})
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Function BeginTraceLogCPSAA(ByVal Texto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("TraceLogCPSAA", New Object() {Texto}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndTraceLogCPSAA(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Overloads Sub TraceLogCPSAAAsync(ByVal Texto As String)
        Me.TraceLogCPSAAAsync(Texto, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub TraceLogCPSAAAsync(ByVal Texto As String, ByVal userState As Object)
        If (Me.TraceLogCPSAAOperationCompleted Is Nothing) Then
            Me.TraceLogCPSAAOperationCompleted = AddressOf Me.OnTraceLogCPSAAOperationCompleted
        End If
        Me.InvokeAsync("TraceLogCPSAA", New Object() {Texto}, Me.TraceLogCPSAAOperationCompleted, userState)
    End Sub
    
    Private Sub OnTraceLogCPSAAOperationCompleted(ByVal arg As Object)
        If (Not (Me.TraceLogCPSAACompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent TraceLogCPSAACompleted(Me, New TraceLogCPSAACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.net/GenericTraceLog", RequestNamespace:="http://ransa.net/", ResponseNamespace:="http://ransa.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function GenericTraceLog(ByVal Texto As String) As String
        Dim results() As Object = Me.Invoke("GenericTraceLog", New Object() {Texto})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginGenericTraceLog(ByVal Texto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GenericTraceLog", New Object() {Texto}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGenericTraceLog(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub GenericTraceLogAsync(ByVal Texto As String)
        Me.GenericTraceLogAsync(Texto, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GenericTraceLogAsync(ByVal Texto As String, ByVal userState As Object)
        If (Me.GenericTraceLogOperationCompleted Is Nothing) Then
            Me.GenericTraceLogOperationCompleted = AddressOf Me.OnGenericTraceLogOperationCompleted
        End If
        Me.InvokeAsync("GenericTraceLog", New Object() {Texto}, Me.GenericTraceLogOperationCompleted, userState)
    End Sub
    
    Private Sub OnGenericTraceLogOperationCompleted(ByVal arg As Object)
        If (Not (Me.GenericTraceLogCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GenericTraceLogCompleted(Me, New GenericTraceLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.net/ActualizarGuia", RequestNamespace:="http://ransa.net/", ResponseNamespace:="http://ransa.net/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ActualizarGuia(ByVal mmcusr As String, ByVal passwd As String, ByVal cclnt As String, ByVal nguirm As String, ByVal culusa As String) As Integer
        Dim results() As Object = Me.Invoke("ActualizarGuia", New Object() {mmcusr, passwd, cclnt, nguirm, culusa})
        Return CType(results(0),Integer)
    End Function
    
    '''<remarks/>
    Public Function BeginActualizarGuia(ByVal mmcusr As String, ByVal passwd As String, ByVal cclnt As String, ByVal nguirm As String, ByVal culusa As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ActualizarGuia", New Object() {mmcusr, passwd, cclnt, nguirm, culusa}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndActualizarGuia(ByVal asyncResult As System.IAsyncResult) As Integer
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Integer)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ActualizarGuiaAsync(ByVal mmcusr As String, ByVal passwd As String, ByVal cclnt As String, ByVal nguirm As String, ByVal culusa As String)
        Me.ActualizarGuiaAsync(mmcusr, passwd, cclnt, nguirm, culusa, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ActualizarGuiaAsync(ByVal mmcusr As String, ByVal passwd As String, ByVal cclnt As String, ByVal nguirm As String, ByVal culusa As String, ByVal userState As Object)
        If (Me.ActualizarGuiaOperationCompleted Is Nothing) Then
            Me.ActualizarGuiaOperationCompleted = AddressOf Me.OnActualizarGuiaOperationCompleted
        End If
        Me.InvokeAsync("ActualizarGuia", New Object() {mmcusr, passwd, cclnt, nguirm, culusa}, Me.ActualizarGuiaOperationCompleted, userState)
    End Sub
    
    Private Sub OnActualizarGuiaOperationCompleted(ByVal arg As Object)
        If (Not (Me.ActualizarGuiaCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ActualizarGuiaCompleted(Me, New ActualizarGuiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub testCompletedEventHandler(ByVal sender As Object, ByVal e As testCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class testCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ListarGuiasCompletedEventHandler(ByVal sender As Object, ByVal e As ListarGuiasCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ListarGuiasCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ObtenerEtiquetaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerEtiquetaCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ObtenerEtiquetaCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub Etiqueta6x4OutotecCompletedEventHandler(ByVal sender As Object, ByVal e As Etiqueta6x4OutotecCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class Etiqueta6x4OutotecCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ObtenerDataEtiqueta6x4CompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDataEtiqueta6x4CompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ObtenerDataEtiqueta6x4CompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub TraceLogCPSAACompletedEventHandler(ByVal sender As Object, ByVal e As TraceLogCPSAACompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class TraceLogCPSAACompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub GenericTraceLogCompletedEventHandler(ByVal sender As Object, ByVal e As GenericTraceLogCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GenericTraceLogCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ActualizarGuiaCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarGuiaCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ActualizarGuiaCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As Integer
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),Integer)
        End Get
    End Property
End Class
