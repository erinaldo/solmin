'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.3615
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Este código fuente fue generado automáticamente por wsdl, Versión=2.0.50727.42.
'

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Web.Services.WebServiceBindingAttribute(Name:="WsSolminSilSoap", [Namespace]:="http://ransa.biz/")>  _
Partial Public Class WsSolminSil
    Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
    
    Private ListaDirectoriosOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ListaArchivosDirectorioOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GuardarArchivosFtpOperationCompleted As System.Threading.SendOrPostCallback
    
    Private DescargaArchivoFtpOperationCompleted As System.Threading.SendOrPostCallback
    
    '''<remarks/>
    Public Sub New()
        MyBase.New
        Me.Url = "http://asp.ransa.net/wsmineria/wssolminsil.asmx"
    End Sub
    
    '''<remarks/>
    Public Event ListaDirectoriosCompleted As ListaDirectoriosCompletedEventHandler
    
    '''<remarks/>
    Public Event ListaArchivosDirectorioCompleted As ListaArchivosDirectorioCompletedEventHandler
    
    '''<remarks/>
    Public Event GuardarArchivosFtpCompleted As GuardarArchivosFtpCompletedEventHandler
    
    '''<remarks/>
    Public Event DescargaArchivoFtpCompleted As DescargaArchivoFtpCompletedEventHandler
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/ListaDirectorios", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ListaDirectorios(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String) As String
        Dim results() As Object = Me.Invoke("ListaDirectorios", New Object() {FtpServer, User, Passwd, FolderName})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginListaDirectorios(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ListaDirectorios", New Object() {FtpServer, User, Passwd, FolderName}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndListaDirectorios(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ListaDirectoriosAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String)
        Me.ListaDirectoriosAsync(FtpServer, User, Passwd, FolderName, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ListaDirectoriosAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal userState As Object)
        If (Me.ListaDirectoriosOperationCompleted Is Nothing) Then
            Me.ListaDirectoriosOperationCompleted = AddressOf Me.OnListaDirectoriosOperationCompleted
        End If
        Me.InvokeAsync("ListaDirectorios", New Object() {FtpServer, User, Passwd, FolderName}, Me.ListaDirectoriosOperationCompleted, userState)
    End Sub
    
    Private Sub OnListaDirectoriosOperationCompleted(ByVal arg As Object)
        If (Not (Me.ListaDirectoriosCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ListaDirectoriosCompleted(Me, New ListaDirectoriosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/ListaArchivosDirectorio", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ListaArchivosDirectorio(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String) As String
        Dim results() As Object = Me.Invoke("ListaArchivosDirectorio", New Object() {FtpServer, User, Passwd, FolderName})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginListaArchivosDirectorio(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ListaArchivosDirectorio", New Object() {FtpServer, User, Passwd, FolderName}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndListaArchivosDirectorio(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ListaArchivosDirectorioAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String)
        Me.ListaArchivosDirectorioAsync(FtpServer, User, Passwd, FolderName, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ListaArchivosDirectorioAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal userState As Object)
        If (Me.ListaArchivosDirectorioOperationCompleted Is Nothing) Then
            Me.ListaArchivosDirectorioOperationCompleted = AddressOf Me.OnListaArchivosDirectorioOperationCompleted
        End If
        Me.InvokeAsync("ListaArchivosDirectorio", New Object() {FtpServer, User, Passwd, FolderName}, Me.ListaArchivosDirectorioOperationCompleted, userState)
    End Sub
    
    Private Sub OnListaArchivosDirectorioOperationCompleted(ByVal arg As Object)
        If (Not (Me.ListaArchivosDirectorioCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ListaArchivosDirectorioCompleted(Me, New ListaArchivosDirectorioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/GuardarArchivosFtp", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function GuardarArchivosFtp(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal cantidad_extraccion As Integer) As String
        Dim results() As Object = Me.Invoke("GuardarArchivosFtp", New Object() {FtpServer, User, Passwd, FolderName, cantidad_extraccion})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginGuardarArchivosFtp(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal cantidad_extraccion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GuardarArchivosFtp", New Object() {FtpServer, User, Passwd, FolderName, cantidad_extraccion}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGuardarArchivosFtp(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub GuardarArchivosFtpAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal cantidad_extraccion As Integer)
        Me.GuardarArchivosFtpAsync(FtpServer, User, Passwd, FolderName, cantidad_extraccion, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GuardarArchivosFtpAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal cantidad_extraccion As Integer, ByVal userState As Object)
        If (Me.GuardarArchivosFtpOperationCompleted Is Nothing) Then
            Me.GuardarArchivosFtpOperationCompleted = AddressOf Me.OnGuardarArchivosFtpOperationCompleted
        End If
        Me.InvokeAsync("GuardarArchivosFtp", New Object() {FtpServer, User, Passwd, FolderName, cantidad_extraccion}, Me.GuardarArchivosFtpOperationCompleted, userState)
    End Sub
    
    Private Sub OnGuardarArchivosFtpOperationCompleted(ByVal arg As Object)
        If (Not (Me.GuardarArchivosFtpCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GuardarArchivosFtpCompleted(Me, New GuardarArchivosFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/DescargaArchivoFtp", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function DescargaArchivoFtp(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal filename As String) As String
        Dim results() As Object = Me.Invoke("DescargaArchivoFtp", New Object() {FtpServer, User, Passwd, FolderName, filename})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginDescargaArchivoFtp(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal filename As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("DescargaArchivoFtp", New Object() {FtpServer, User, Passwd, FolderName, filename}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndDescargaArchivoFtp(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub DescargaArchivoFtpAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal filename As String)
        Me.DescargaArchivoFtpAsync(FtpServer, User, Passwd, FolderName, filename, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub DescargaArchivoFtpAsync(ByVal FtpServer As String, ByVal User As String, ByVal Passwd As String, ByVal FolderName As String, ByVal filename As String, ByVal userState As Object)
        If (Me.DescargaArchivoFtpOperationCompleted Is Nothing) Then
            Me.DescargaArchivoFtpOperationCompleted = AddressOf Me.OnDescargaArchivoFtpOperationCompleted
        End If
        Me.InvokeAsync("DescargaArchivoFtp", New Object() {FtpServer, User, Passwd, FolderName, filename}, Me.DescargaArchivoFtpOperationCompleted, userState)
    End Sub
    
    Private Sub OnDescargaArchivoFtpOperationCompleted(ByVal arg As Object)
        If (Not (Me.DescargaArchivoFtpCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent DescargaArchivoFtpCompleted(Me, New DescargaArchivoFtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ListaDirectoriosCompletedEventHandler(ByVal sender As Object, ByVal e As ListaDirectoriosCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ListaDirectoriosCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ListaArchivosDirectorioCompletedEventHandler(ByVal sender As Object, ByVal e As ListaArchivosDirectorioCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ListaArchivosDirectorioCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub GuardarArchivosFtpCompletedEventHandler(ByVal sender As Object, ByVal e As GuardarArchivosFtpCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GuardarArchivosFtpCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub DescargaArchivoFtpCompletedEventHandler(ByVal sender As Object, ByVal e As DescargaArchivoFtpCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class DescargaArchivoFtpCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class
