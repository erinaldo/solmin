'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Este código fuente fue generado automáticamente por wsdl, Versión=4.0.30319.18020.
'
Namespace ProxyFileManagerAWS

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="WsFileManagerSoap", [Namespace]:="http://ransa.biz/")> _
    Partial Public Class WsFileManager
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private getFileListAWSOperationCompleted As System.Threading.SendOrPostCallback

        Private CargarFileAWSOperationCompleted As System.Threading.SendOrPostCallback

        Private EliminarFileAWSOperationCompleted As System.Threading.SendOrPostCallback

        Private SendPostPacasmayoGuiaElectronicaOperationCompleted As System.Threading.SendOrPostCallback

        Private SendEmailOutlookOperationCompleted As System.Threading.SendOrPostCallback

        Private SendGmailOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            'Me.Url = "http://ranmoliispr1:7653/WsFileManager.asmx"
            'Me.Url = "http://secure.ransa.net:7653/WsFileManager.asmx"
            'Me.Url = "http://ranmolapl01.gruporansa.gromero.net/DocumentosWeb/wsfilemanager.asmx"
            'Me.Url = "http://ranmoliispr1:7653/WsFileManager.asmx"
            Me.Url = "https://secure.ransa.net/WsFileManager.asmx"

        End Sub

        '''<remarks/>
        Public Event getFileListAWSCompleted As getFileListAWSCompletedEventHandler

        '''<remarks/>
        Public Event CargarFileAWSCompleted As CargarFileAWSCompletedEventHandler

        '''<remarks/>
        Public Event EliminarFileAWSCompleted As EliminarFileAWSCompletedEventHandler

        '''<remarks/>
        Public Event SendPostPacasmayoGuiaElectronicaCompleted As SendPostPacasmayoGuiaElectronicaCompletedEventHandler

        '''<remarks/>
        Public Event SendEmailOutlookCompleted As SendEmailOutlookCompletedEventHandler

        '''<remarks/>
        Public Event SendGmailCompleted As SendGmailCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/getFileListAWS", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function getFileListAWS(ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String) As FileResult
            Dim results() As Object = Me.Invoke("getFileListAWS", New Object() {rutaBucket, nombreFile, bucketRegion, IdentityPoolId})
            Return CType(results(0), FileResult)
        End Function

        '''<remarks/>
        Public Function BegingetFileListAWS(ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getFileListAWS", New Object() {rutaBucket, nombreFile, bucketRegion, IdentityPoolId}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndgetFileListAWS(ByVal asyncResult As System.IAsyncResult) As FileResult
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), FileResult)
        End Function

        '''<remarks/>
        Public Overloads Sub getFileListAWSAsync(ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String)
            Me.getFileListAWSAsync(rutaBucket, nombreFile, bucketRegion, IdentityPoolId, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub getFileListAWSAsync(ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String, ByVal userState As Object)
            If (Me.getFileListAWSOperationCompleted Is Nothing) Then
                Me.getFileListAWSOperationCompleted = AddressOf Me.OngetFileListAWSOperationCompleted
            End If
            Me.InvokeAsync("getFileListAWS", New Object() {rutaBucket, nombreFile, bucketRegion, IdentityPoolId}, Me.getFileListAWSOperationCompleted, userState)
        End Sub

        Private Sub OngetFileListAWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.getFileListAWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getFileListAWSCompleted(Me, New getFileListAWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/CargarFileAWS", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function CargarFileAWS(ByVal oFileResult As FileResult, ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String) As String
            Dim results() As Object = Me.Invoke("CargarFileAWS", New Object() {oFileResult, rutaBucket, nombreFile, bucketRegion, IdentityPoolId})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BeginCargarFileAWS(ByVal oFileResult As FileResult, ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargarFileAWS", New Object() {oFileResult, rutaBucket, nombreFile, bucketRegion, IdentityPoolId}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndCargarFileAWS(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub CargarFileAWSAsync(ByVal oFileResult As FileResult, ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String)
            Me.CargarFileAWSAsync(oFileResult, rutaBucket, nombreFile, bucketRegion, IdentityPoolId, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub CargarFileAWSAsync(ByVal oFileResult As FileResult, ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String, ByVal userState As Object)
            If (Me.CargarFileAWSOperationCompleted Is Nothing) Then
                Me.CargarFileAWSOperationCompleted = AddressOf Me.OnCargarFileAWSOperationCompleted
            End If
            Me.InvokeAsync("CargarFileAWS", New Object() {oFileResult, rutaBucket, nombreFile, bucketRegion, IdentityPoolId}, Me.CargarFileAWSOperationCompleted, userState)
        End Sub

        Private Sub OnCargarFileAWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarFileAWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarFileAWSCompleted(Me, New CargarFileAWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/EliminarFileAWS", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function EliminarFileAWS(ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String) As String
            Dim results() As Object = Me.Invoke("EliminarFileAWS", New Object() {rutaBucket, nombreFile, bucketRegion, IdentityPoolId})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BeginEliminarFileAWS(ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarFileAWS", New Object() {rutaBucket, nombreFile, bucketRegion, IdentityPoolId}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndEliminarFileAWS(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub EliminarFileAWSAsync(ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String)
            Me.EliminarFileAWSAsync(rutaBucket, nombreFile, bucketRegion, IdentityPoolId, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub EliminarFileAWSAsync(ByVal rutaBucket As String, ByVal nombreFile As String, ByVal bucketRegion As String, ByVal IdentityPoolId As String, ByVal userState As Object)
            If (Me.EliminarFileAWSOperationCompleted Is Nothing) Then
                Me.EliminarFileAWSOperationCompleted = AddressOf Me.OnEliminarFileAWSOperationCompleted
            End If
            Me.InvokeAsync("EliminarFileAWS", New Object() {rutaBucket, nombreFile, bucketRegion, IdentityPoolId}, Me.EliminarFileAWSOperationCompleted, userState)
        End Sub

        Private Sub OnEliminarFileAWSOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarFileAWSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarFileAWSCompleted(Me, New EliminarFileAWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/SendPostPacasmayoGuiaElectronica", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function SendPostPacasmayoGuiaElectronica(ByVal url_servicio As String, ByVal jsonData As String, ByVal usu_servicio As String, ByVal psw_servicio As String) As String
            Dim results() As Object = Me.Invoke("SendPostPacasmayoGuiaElectronica", New Object() {url_servicio, jsonData, usu_servicio, psw_servicio})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BeginSendPostPacasmayoGuiaElectronica(ByVal url_servicio As String, ByVal jsonData As String, ByVal usu_servicio As String, ByVal psw_servicio As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SendPostPacasmayoGuiaElectronica", New Object() {url_servicio, jsonData, usu_servicio, psw_servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndSendPostPacasmayoGuiaElectronica(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub SendPostPacasmayoGuiaElectronicaAsync(ByVal url_servicio As String, ByVal jsonData As String, ByVal usu_servicio As String, ByVal psw_servicio As String)
            Me.SendPostPacasmayoGuiaElectronicaAsync(url_servicio, jsonData, usu_servicio, psw_servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SendPostPacasmayoGuiaElectronicaAsync(ByVal url_servicio As String, ByVal jsonData As String, ByVal usu_servicio As String, ByVal psw_servicio As String, ByVal userState As Object)
            If (Me.SendPostPacasmayoGuiaElectronicaOperationCompleted Is Nothing) Then
                Me.SendPostPacasmayoGuiaElectronicaOperationCompleted = AddressOf Me.OnSendPostPacasmayoGuiaElectronicaOperationCompleted
            End If
            Me.InvokeAsync("SendPostPacasmayoGuiaElectronica", New Object() {url_servicio, jsonData, usu_servicio, psw_servicio}, Me.SendPostPacasmayoGuiaElectronicaOperationCompleted, userState)
        End Sub

        Private Sub OnSendPostPacasmayoGuiaElectronicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendPostPacasmayoGuiaElectronicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendPostPacasmayoGuiaElectronicaCompleted(Me, New SendPostPacasmayoGuiaElectronicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/SendEmailOutlook", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function SendEmailOutlook(ByVal EmailParamJson As String, ByVal bodyEmail As String) As String
            Dim results() As Object = Me.Invoke("SendEmailOutlook", New Object() {EmailParamJson, bodyEmail})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BeginSendEmailOutlook(ByVal EmailParamJson As String, ByVal bodyEmail As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SendEmailOutlook", New Object() {EmailParamJson, bodyEmail}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndSendEmailOutlook(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub SendEmailOutlookAsync(ByVal EmailParamJson As String, ByVal bodyEmail As String)
            Me.SendEmailOutlookAsync(EmailParamJson, bodyEmail, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SendEmailOutlookAsync(ByVal EmailParamJson As String, ByVal bodyEmail As String, ByVal userState As Object)
            If (Me.SendEmailOutlookOperationCompleted Is Nothing) Then
                Me.SendEmailOutlookOperationCompleted = AddressOf Me.OnSendEmailOutlookOperationCompleted
            End If
            Me.InvokeAsync("SendEmailOutlook", New Object() {EmailParamJson, bodyEmail}, Me.SendEmailOutlookOperationCompleted, userState)
        End Sub

        Private Sub OnSendEmailOutlookOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendEmailOutlookCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendEmailOutlookCompleted(Me, New SendEmailOutlookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/SendGmail", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function SendGmail(ByVal EmailParamJson As String, ByVal bodyEmail As String) As String
            Dim results() As Object = Me.Invoke("SendGmail", New Object() {EmailParamJson, bodyEmail})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BeginSendGmail(ByVal EmailParamJson As String, ByVal bodyEmail As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SendGmail", New Object() {EmailParamJson, bodyEmail}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndSendGmail(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub SendGmailAsync(ByVal EmailParamJson As String, ByVal bodyEmail As String)
            Me.SendGmailAsync(EmailParamJson, bodyEmail, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SendGmailAsync(ByVal EmailParamJson As String, ByVal bodyEmail As String, ByVal userState As Object)
            If (Me.SendGmailOperationCompleted Is Nothing) Then
                Me.SendGmailOperationCompleted = AddressOf Me.OnSendGmailOperationCompleted
            End If
            Me.InvokeAsync("SendGmail", New Object() {EmailParamJson, bodyEmail}, Me.SendGmailOperationCompleted, userState)
        End Sub

        Private Sub OnSendGmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendGmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendGmailCompleted(Me, New SendGmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ransa.biz/")> _
    Partial Public Class FileResult

        Private ifFileField As Integer

        Private fileNameField As String

        Private fileDataField() As Byte

        '''<remarks/>
        Public Property IfFile() As Integer
            Get
                Return Me.ifFileField
            End Get
            Set(value As Integer)
                Me.ifFileField = value
            End Set
        End Property

        '''<remarks/>
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set(value As String)
                Me.fileNameField = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> _
        Public Property FileData() As Byte()
            Get
                Return Me.fileDataField
            End Get
            Set(value As Byte())
                Me.fileDataField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")> _
    Public Delegate Sub getFileListAWSCompletedEventHandler(ByVal sender As Object, ByVal e As getFileListAWSCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class getFileListAWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As FileResult
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), FileResult)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")> _
    Public Delegate Sub CargarFileAWSCompletedEventHandler(ByVal sender As Object, ByVal e As CargarFileAWSCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class CargarFileAWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")> _
    Public Delegate Sub EliminarFileAWSCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarFileAWSCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class EliminarFileAWSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")> _
    Public Delegate Sub SendPostPacasmayoGuiaElectronicaCompletedEventHandler(ByVal sender As Object, ByVal e As SendPostPacasmayoGuiaElectronicaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class SendPostPacasmayoGuiaElectronicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")> _
    Public Delegate Sub SendEmailOutlookCompletedEventHandler(ByVal sender As Object, ByVal e As SendEmailOutlookCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class SendEmailOutlookCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")> _
    Public Delegate Sub SendGmailCompletedEventHandler(ByVal sender As Object, ByVal e As SendGmailCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class SendGmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class
End Namespace
