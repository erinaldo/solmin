'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5466
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Este código fuente fue generado automáticamente por wsdl, Versión=2.0.50727.42.
'

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Web.Services.WebServiceBindingAttribute(Name:="WsFileManagerSoap", [Namespace]:="http://ransa.biz/")>  _
Partial Public Class WsFileManager
    Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
    
    Private getFileOperationCompleted As System.Threading.SendOrPostCallback
    
    Private SaveFileOperationCompleted As System.Threading.SendOrPostCallback
    
    Private getFileFirstListOperationCompleted As System.Threading.SendOrPostCallback
    
    Private getFileListOperationCompleted As System.Threading.SendOrPostCallback
    
    Private DeleteFileOperationCompleted As System.Threading.SendOrPostCallback
    
    Private svPEOperationCompleted As System.Threading.SendOrPostCallback
    
    Private extPEOperationCompleted As System.Threading.SendOrPostCallback
    
    Private delPEOperationCompleted As System.Threading.SendOrPostCallback
    
    Private getFileListCountOperationCompleted As System.Threading.SendOrPostCallback
    
    Private CreateRootDirectoryOperationCompleted As System.Threading.SendOrPostCallback
    
    Private CreateDirectoryOperationCompleted As System.Threading.SendOrPostCallback
    
    Private getFolderStructureOperationCompleted As System.Threading.SendOrPostCallback
    
    Private svBLTOperationCompleted As System.Threading.SendOrPostCallback
    
    Private extBLTOperationCompleted As System.Threading.SendOrPostCallback
    
    Private delBLTOperationCompleted As System.Threading.SendOrPostCallback
    
    '''<remarks/>
    Public Sub New()

        MyBase.New()
        'Me.Url = "http://ranmolapl01/DocumentosWeb/wsfilemanager.asmx"
        ' Me.Url = "http://localhost:19075/SOLMINDOCS/wsfilemanager.asmx"
        Me.Url = "http://ranmolapl01.gruporansa.gromero.net/DocumentosWeb/wsfilemanager.asmx"

    End Sub
    
    '''<remarks/>
    Public Event getFileCompleted As getFileCompletedEventHandler
    
    '''<remarks/>
    Public Event SaveFileCompleted As SaveFileCompletedEventHandler
    
    '''<remarks/>
    Public Event getFileFirstListCompleted As getFileFirstListCompletedEventHandler
    
    '''<remarks/>
    Public Event getFileListCompleted As getFileListCompletedEventHandler
    
    '''<remarks/>
    Public Event DeleteFileCompleted As DeleteFileCompletedEventHandler
    
    '''<remarks/>
    Public Event svPECompleted As svPECompletedEventHandler
    
    '''<remarks/>
    Public Event extPECompleted As extPECompletedEventHandler
    
    '''<remarks/>
    Public Event delPECompleted As delPECompletedEventHandler
    
    '''<remarks/>
    Public Event getFileListCountCompleted As getFileListCountCompletedEventHandler
    
    '''<remarks/>
    Public Event CreateRootDirectoryCompleted As CreateRootDirectoryCompletedEventHandler
    
    '''<remarks/>
    Public Event CreateDirectoryCompleted As CreateDirectoryCompletedEventHandler
    
    '''<remarks/>
    Public Event getFolderStructureCompleted As getFolderStructureCompletedEventHandler
    
    '''<remarks/>
    Public Event svBLTCompleted As svBLTCompletedEventHandler
    
    '''<remarks/>
    Public Event extBLTCompleted As extBLTCompletedEventHandler
    
    '''<remarks/>
    Public Event delBLTCompleted As delBLTCompletedEventHandler
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/getFile", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function getFile(ByVal IdFile As Integer, ByVal sFileName As String) As FileResult
        Dim results() As Object = Me.Invoke("getFile", New Object() {IdFile, sFileName})
        Return CType(results(0),FileResult)
    End Function
    
    '''<remarks/>
    Public Function BegingetFile(ByVal IdFile As Integer, ByVal sFileName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getFile", New Object() {IdFile, sFileName}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndgetFile(ByVal asyncResult As System.IAsyncResult) As FileResult
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),FileResult)
    End Function
    
    '''<remarks/>
    Public Overloads Sub getFileAsync(ByVal IdFile As Integer, ByVal sFileName As String)
        Me.getFileAsync(IdFile, sFileName, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub getFileAsync(ByVal IdFile As Integer, ByVal sFileName As String, ByVal userState As Object)
        If (Me.getFileOperationCompleted Is Nothing) Then
            Me.getFileOperationCompleted = AddressOf Me.OngetFileOperationCompleted
        End If
        Me.InvokeAsync("getFile", New Object() {IdFile, sFileName}, Me.getFileOperationCompleted, userState)
    End Sub
    
    Private Sub OngetFileOperationCompleted(ByVal arg As Object)
        If (Not (Me.getFileCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getFileCompleted(Me, New getFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/SaveFile", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function SaveFile(ByVal objFile As FileResult, ByVal objEntidadDirectorio As Directorio, ByVal objEntidadDocumento As Documento) As Boolean
        Dim results() As Object = Me.Invoke("SaveFile", New Object() {objFile, objEntidadDirectorio, objEntidadDocumento})
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Function BeginSaveFile(ByVal objFile As FileResult, ByVal objEntidadDirectorio As Directorio, ByVal objEntidadDocumento As Documento, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("SaveFile", New Object() {objFile, objEntidadDirectorio, objEntidadDocumento}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndSaveFile(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Overloads Sub SaveFileAsync(ByVal objFile As FileResult, ByVal objEntidadDirectorio As Directorio, ByVal objEntidadDocumento As Documento)
        Me.SaveFileAsync(objFile, objEntidadDirectorio, objEntidadDocumento, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub SaveFileAsync(ByVal objFile As FileResult, ByVal objEntidadDirectorio As Directorio, ByVal objEntidadDocumento As Documento, ByVal userState As Object)
        If (Me.SaveFileOperationCompleted Is Nothing) Then
            Me.SaveFileOperationCompleted = AddressOf Me.OnSaveFileOperationCompleted
        End If
        Me.InvokeAsync("SaveFile", New Object() {objFile, objEntidadDirectorio, objEntidadDocumento}, Me.SaveFileOperationCompleted, userState)
    End Sub
    
    Private Sub OnSaveFileOperationCompleted(ByVal arg As Object)
        If (Not (Me.SaveFileCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent SaveFileCompleted(Me, New SaveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/getFileFirstList", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function getFileFirstList(ByVal NMRGIM As String) As FileResult
        Dim results() As Object = Me.Invoke("getFileFirstList", New Object() {NMRGIM})
        Return CType(results(0),FileResult)
    End Function
    
    '''<remarks/>
    Public Function BegingetFileFirstList(ByVal NMRGIM As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getFileFirstList", New Object() {NMRGIM}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndgetFileFirstList(ByVal asyncResult As System.IAsyncResult) As FileResult
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),FileResult)
    End Function
    
    '''<remarks/>
    Public Overloads Sub getFileFirstListAsync(ByVal NMRGIM As String)
        Me.getFileFirstListAsync(NMRGIM, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub getFileFirstListAsync(ByVal NMRGIM As String, ByVal userState As Object)
        If (Me.getFileFirstListOperationCompleted Is Nothing) Then
            Me.getFileFirstListOperationCompleted = AddressOf Me.OngetFileFirstListOperationCompleted
        End If
        Me.InvokeAsync("getFileFirstList", New Object() {NMRGIM}, Me.getFileFirstListOperationCompleted, userState)
    End Sub
    
    Private Sub OngetFileFirstListOperationCompleted(ByVal arg As Object)
        If (Not (Me.getFileFirstListCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getFileFirstListCompleted(Me, New getFileFirstListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/getFileList", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function getFileList(ByVal objDirectorio As Directorio) As FileResult()
        Dim results() As Object = Me.Invoke("getFileList", New Object() {objDirectorio})
        Return CType(results(0),FileResult())
    End Function
    
    '''<remarks/>
    Public Function BegingetFileList(ByVal objDirectorio As Directorio, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getFileList", New Object() {objDirectorio}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndgetFileList(ByVal asyncResult As System.IAsyncResult) As FileResult()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),FileResult())
    End Function
    
    '''<remarks/>
    Public Overloads Sub getFileListAsync(ByVal objDirectorio As Directorio)
        Me.getFileListAsync(objDirectorio, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub getFileListAsync(ByVal objDirectorio As Directorio, ByVal userState As Object)
        If (Me.getFileListOperationCompleted Is Nothing) Then
            Me.getFileListOperationCompleted = AddressOf Me.OngetFileListOperationCompleted
        End If
        Me.InvokeAsync("getFileList", New Object() {objDirectorio}, Me.getFileListOperationCompleted, userState)
    End Sub
    
    Private Sub OngetFileListOperationCompleted(ByVal arg As Object)
        If (Not (Me.getFileListCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getFileListCompleted(Me, New getFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/DeleteFile", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function DeleteFile(ByVal objEntidadDirectorio As Directorio, ByVal objEntidadDocumento As Documento) As Boolean
        Dim results() As Object = Me.Invoke("DeleteFile", New Object() {objEntidadDirectorio, objEntidadDocumento})
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Function BeginDeleteFile(ByVal objEntidadDirectorio As Directorio, ByVal objEntidadDocumento As Documento, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("DeleteFile", New Object() {objEntidadDirectorio, objEntidadDocumento}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndDeleteFile(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Overloads Sub DeleteFileAsync(ByVal objEntidadDirectorio As Directorio, ByVal objEntidadDocumento As Documento)
        Me.DeleteFileAsync(objEntidadDirectorio, objEntidadDocumento, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub DeleteFileAsync(ByVal objEntidadDirectorio As Directorio, ByVal objEntidadDocumento As Documento, ByVal userState As Object)
        If (Me.DeleteFileOperationCompleted Is Nothing) Then
            Me.DeleteFileOperationCompleted = AddressOf Me.OnDeleteFileOperationCompleted
        End If
        Me.InvokeAsync("DeleteFile", New Object() {objEntidadDirectorio, objEntidadDocumento}, Me.DeleteFileOperationCompleted, userState)
    End Sub
    
    Private Sub OnDeleteFileOperationCompleted(ByVal arg As Object)
        If (Not (Me.DeleteFileCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent DeleteFileCompleted(Me, New DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/svPE", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function svPE(ByVal Carpeta As String, ByVal NroPreemb As String, ByVal clicod As String) As Boolean
        Dim results() As Object = Me.Invoke("svPE", New Object() {Carpeta, NroPreemb, clicod})
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Function BeginsvPE(ByVal Carpeta As String, ByVal NroPreemb As String, ByVal clicod As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("svPE", New Object() {Carpeta, NroPreemb, clicod}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndsvPE(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Overloads Sub svPEAsync(ByVal Carpeta As String, ByVal NroPreemb As String, ByVal clicod As String)
        Me.svPEAsync(Carpeta, NroPreemb, clicod, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub svPEAsync(ByVal Carpeta As String, ByVal NroPreemb As String, ByVal clicod As String, ByVal userState As Object)
        If (Me.svPEOperationCompleted Is Nothing) Then
            Me.svPEOperationCompleted = AddressOf Me.OnsvPEOperationCompleted
        End If
        Me.InvokeAsync("svPE", New Object() {Carpeta, NroPreemb, clicod}, Me.svPEOperationCompleted, userState)
    End Sub
    
    Private Sub OnsvPEOperationCompleted(ByVal arg As Object)
        If (Not (Me.svPECompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent svPECompleted(Me, New svPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/extPE", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function extPE(ByVal Carpeta As String, ByVal NroPreemb As String, ByVal clicod As String) As String
        Dim results() As Object = Me.Invoke("extPE", New Object() {Carpeta, NroPreemb, clicod})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginextPE(ByVal Carpeta As String, ByVal NroPreemb As String, ByVal clicod As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("extPE", New Object() {Carpeta, NroPreemb, clicod}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndextPE(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub extPEAsync(ByVal Carpeta As String, ByVal NroPreemb As String, ByVal clicod As String)
        Me.extPEAsync(Carpeta, NroPreemb, clicod, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub extPEAsync(ByVal Carpeta As String, ByVal NroPreemb As String, ByVal clicod As String, ByVal userState As Object)
        If (Me.extPEOperationCompleted Is Nothing) Then
            Me.extPEOperationCompleted = AddressOf Me.OnextPEOperationCompleted
        End If
        Me.InvokeAsync("extPE", New Object() {Carpeta, NroPreemb, clicod}, Me.extPEOperationCompleted, userState)
    End Sub
    
    Private Sub OnextPEOperationCompleted(ByVal arg As Object)
        If (Not (Me.extPECompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent extPECompleted(Me, New extPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/delPE", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function delPE(ByVal Carpeta As String) As Boolean
        Dim results() As Object = Me.Invoke("delPE", New Object() {Carpeta})
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Function BegindelPE(ByVal Carpeta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("delPE", New Object() {Carpeta}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EnddelPE(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Overloads Sub delPEAsync(ByVal Carpeta As String)
        Me.delPEAsync(Carpeta, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub delPEAsync(ByVal Carpeta As String, ByVal userState As Object)
        If (Me.delPEOperationCompleted Is Nothing) Then
            Me.delPEOperationCompleted = AddressOf Me.OndelPEOperationCompleted
        End If
        Me.InvokeAsync("delPE", New Object() {Carpeta}, Me.delPEOperationCompleted, userState)
    End Sub
    
    Private Sub OndelPEOperationCompleted(ByVal arg As Object)
        If (Not (Me.delPECompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent delPECompleted(Me, New delPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/getFileListCount", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function getFileListCount(ByVal IdFile As Integer) As Integer
        Dim results() As Object = Me.Invoke("getFileListCount", New Object() {IdFile})
        Return CType(results(0),Integer)
    End Function
    
    '''<remarks/>
    Public Function BegingetFileListCount(ByVal IdFile As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getFileListCount", New Object() {IdFile}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndgetFileListCount(ByVal asyncResult As System.IAsyncResult) As Integer
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Integer)
    End Function
    
    '''<remarks/>
    Public Overloads Sub getFileListCountAsync(ByVal IdFile As Integer)
        Me.getFileListCountAsync(IdFile, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub getFileListCountAsync(ByVal IdFile As Integer, ByVal userState As Object)
        If (Me.getFileListCountOperationCompleted Is Nothing) Then
            Me.getFileListCountOperationCompleted = AddressOf Me.OngetFileListCountOperationCompleted
        End If
        Me.InvokeAsync("getFileListCount", New Object() {IdFile}, Me.getFileListCountOperationCompleted, userState)
    End Sub
    
    Private Sub OngetFileListCountOperationCompleted(ByVal arg As Object)
        If (Not (Me.getFileListCountCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getFileListCountCompleted(Me, New getFileListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/CreateRootDirectory", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function CreateRootDirectory(ByVal objEntidad As Directorio) As Directorio
        Dim results() As Object = Me.Invoke("CreateRootDirectory", New Object() {objEntidad})
        Return CType(results(0),Directorio)
    End Function
    
    '''<remarks/>
    Public Function BeginCreateRootDirectory(ByVal objEntidad As Directorio, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("CreateRootDirectory", New Object() {objEntidad}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndCreateRootDirectory(ByVal asyncResult As System.IAsyncResult) As Directorio
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Directorio)
    End Function
    
    '''<remarks/>
    Public Overloads Sub CreateRootDirectoryAsync(ByVal objEntidad As Directorio)
        Me.CreateRootDirectoryAsync(objEntidad, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub CreateRootDirectoryAsync(ByVal objEntidad As Directorio, ByVal userState As Object)
        If (Me.CreateRootDirectoryOperationCompleted Is Nothing) Then
            Me.CreateRootDirectoryOperationCompleted = AddressOf Me.OnCreateRootDirectoryOperationCompleted
        End If
        Me.InvokeAsync("CreateRootDirectory", New Object() {objEntidad}, Me.CreateRootDirectoryOperationCompleted, userState)
    End Sub
    
    Private Sub OnCreateRootDirectoryOperationCompleted(ByVal arg As Object)
        If (Not (Me.CreateRootDirectoryCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent CreateRootDirectoryCompleted(Me, New CreateRootDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/CreateDirectory", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function CreateDirectory(ByVal objEntidad As Directorio) As Directorio
        Dim results() As Object = Me.Invoke("CreateDirectory", New Object() {objEntidad})
        Return CType(results(0),Directorio)
    End Function
    
    '''<remarks/>
    Public Function BeginCreateDirectory(ByVal objEntidad As Directorio, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("CreateDirectory", New Object() {objEntidad}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndCreateDirectory(ByVal asyncResult As System.IAsyncResult) As Directorio
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Directorio)
    End Function
    
    '''<remarks/>
    Public Overloads Sub CreateDirectoryAsync(ByVal objEntidad As Directorio)
        Me.CreateDirectoryAsync(objEntidad, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub CreateDirectoryAsync(ByVal objEntidad As Directorio, ByVal userState As Object)
        If (Me.CreateDirectoryOperationCompleted Is Nothing) Then
            Me.CreateDirectoryOperationCompleted = AddressOf Me.OnCreateDirectoryOperationCompleted
        End If
        Me.InvokeAsync("CreateDirectory", New Object() {objEntidad}, Me.CreateDirectoryOperationCompleted, userState)
    End Sub
    
    Private Sub OnCreateDirectoryOperationCompleted(ByVal arg As Object)
        If (Not (Me.CreateDirectoryCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent CreateDirectoryCompleted(Me, New CreateDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/getFolderStructure", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function getFolderStructure(ByVal objEntidad As Directorio) As Directorio
        Dim results() As Object = Me.Invoke("getFolderStructure", New Object() {objEntidad})
        Return CType(results(0),Directorio)
    End Function
    
    '''<remarks/>
    Public Function BegingetFolderStructure(ByVal objEntidad As Directorio, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getFolderStructure", New Object() {objEntidad}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndgetFolderStructure(ByVal asyncResult As System.IAsyncResult) As Directorio
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Directorio)
    End Function
    
    '''<remarks/>
    Public Overloads Sub getFolderStructureAsync(ByVal objEntidad As Directorio)
        Me.getFolderStructureAsync(objEntidad, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub getFolderStructureAsync(ByVal objEntidad As Directorio, ByVal userState As Object)
        If (Me.getFolderStructureOperationCompleted Is Nothing) Then
            Me.getFolderStructureOperationCompleted = AddressOf Me.OngetFolderStructureOperationCompleted
        End If
        Me.InvokeAsync("getFolderStructure", New Object() {objEntidad}, Me.getFolderStructureOperationCompleted, userState)
    End Sub
    
    Private Sub OngetFolderStructureOperationCompleted(ByVal arg As Object)
        If (Not (Me.getFolderStructureCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getFolderStructureCompleted(Me, New getFolderStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/svBLT", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function svBLT(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal compcod As String, ByVal divcod As String, ByVal placod As String) As Boolean
        Dim results() As Object = Me.Invoke("svBLT", New Object() {Carpeta, nrobulto, clicod, compcod, divcod, placod})
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Function BeginsvBLT(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal compcod As String, ByVal divcod As String, ByVal placod As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("svBLT", New Object() {Carpeta, nrobulto, clicod, compcod, divcod, placod}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndsvBLT(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Overloads Sub svBLTAsync(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal compcod As String, ByVal divcod As String, ByVal placod As String)
        Me.svBLTAsync(Carpeta, nrobulto, clicod, compcod, divcod, placod, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub svBLTAsync(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal compcod As String, ByVal divcod As String, ByVal placod As String, ByVal userState As Object)
        If (Me.svBLTOperationCompleted Is Nothing) Then
            Me.svBLTOperationCompleted = AddressOf Me.OnsvBLTOperationCompleted
        End If
        Me.InvokeAsync("svBLT", New Object() {Carpeta, nrobulto, clicod, compcod, divcod, placod}, Me.svBLTOperationCompleted, userState)
    End Sub
    
    Private Sub OnsvBLTOperationCompleted(ByVal arg As Object)
        If (Not (Me.svBLTCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent svBLTCompleted(Me, New svBLTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/extBLT", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function extBLT(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String) As String
        Dim results() As Object = Me.Invoke("extBLT", New Object() {Carpeta, nrobulto, clicod})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginextBLT(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("extBLT", New Object() {Carpeta, nrobulto, clicod}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndextBLT(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub extBLTAsync(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String)
        Me.extBLTAsync(Carpeta, nrobulto, clicod, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub extBLTAsync(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal userState As Object)
        If (Me.extBLTOperationCompleted Is Nothing) Then
            Me.extBLTOperationCompleted = AddressOf Me.OnextBLTOperationCompleted
        End If
        Me.InvokeAsync("extBLT", New Object() {Carpeta, nrobulto, clicod}, Me.extBLTOperationCompleted, userState)
    End Sub
    
    Private Sub OnextBLTOperationCompleted(ByVal arg As Object)
        If (Not (Me.extBLTCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent extBLTCompleted(Me, New extBLTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ransa.biz/delBLT", RequestNamespace:="http://ransa.biz/", ResponseNamespace:="http://ransa.biz/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function delBLT(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal compcod As String, ByVal divcod As String, ByVal placod As String) As Boolean
        Dim results() As Object = Me.Invoke("delBLT", New Object() {Carpeta, nrobulto, clicod, compcod, divcod, placod})
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Function BegindelBLT(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal compcod As String, ByVal divcod As String, ByVal placod As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("delBLT", New Object() {Carpeta, nrobulto, clicod, compcod, divcod, placod}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EnddelBLT(ByVal asyncResult As System.IAsyncResult) As Boolean
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),Boolean)
    End Function
    
    '''<remarks/>
    Public Overloads Sub delBLTAsync(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal compcod As String, ByVal divcod As String, ByVal placod As String)
        Me.delBLTAsync(Carpeta, nrobulto, clicod, compcod, divcod, placod, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub delBLTAsync(ByVal Carpeta As String, ByVal nrobulto As String, ByVal clicod As String, ByVal compcod As String, ByVal divcod As String, ByVal placod As String, ByVal userState As Object)
        If (Me.delBLTOperationCompleted Is Nothing) Then
            Me.delBLTOperationCompleted = AddressOf Me.OndelBLTOperationCompleted
        End If
        Me.InvokeAsync("delBLT", New Object() {Carpeta, nrobulto, clicod, compcod, divcod, placod}, Me.delBLTOperationCompleted, userState)
    End Sub
    
    Private Sub OndelBLTOperationCompleted(ByVal arg As Object)
        If (Not (Me.delBLTCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent delBLTCompleted(Me, New delBLTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub
End Class

'''<comentarios/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ransa.biz/")>  _
Partial Public Class FileResult
    
    Private ifFileField As Integer
    
    Private fileNameField As String
    
    Private fileDataField() As Byte
    
    '''<comentarios/>
    Public Property IfFile() As Integer
        Get
            Return Me.ifFileField
        End Get
        Set
            Me.ifFileField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property FileName() As String
        Get
            Return Me.fileNameField
        End Get
        Set
            Me.fileNameField = value
        End Set
    End Property
    
    '''<comentarios/>
    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
    Public Property FileData() As Byte()
        Get
            Return Me.fileDataField
        End Get
        Set
            Me.fileDataField = value
        End Set
    End Property
End Class

'''<comentarios/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ransa.biz/")>  _
Partial Public Class Documento
    
    Private nMRGIMField As String
    
    Private nCRIMGField As String
    
    Private tIPIMGField As String
    
    Private qBYTIMField As String
    
    Private tNMBARField As String
    
    Private sESTRGField As String
    
    Private cUSCRTField As String
    
    Private fCHCRTField As String
    
    Private hRACRTField As String
    
    Private nTRMCRField As String
    
    Private cULUSAField As String
    
    Private fULTACField As String
    
    Private hULTACField As String
    
    Private nTRMNLField As String
    
    '''<comentarios/>
    Public Property NMRGIM() As String
        Get
            Return Me.nMRGIMField
        End Get
        Set
            Me.nMRGIMField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property NCRIMG() As String
        Get
            Return Me.nCRIMGField
        End Get
        Set
            Me.nCRIMGField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property TIPIMG() As String
        Get
            Return Me.tIPIMGField
        End Get
        Set
            Me.tIPIMGField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property QBYTIM() As String
        Get
            Return Me.qBYTIMField
        End Get
        Set
            Me.qBYTIMField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property TNMBAR() As String
        Get
            Return Me.tNMBARField
        End Get
        Set
            Me.tNMBARField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property SESTRG() As String
        Get
            Return Me.sESTRGField
        End Get
        Set
            Me.sESTRGField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property CUSCRT() As String
        Get
            Return Me.cUSCRTField
        End Get
        Set
            Me.cUSCRTField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property FCHCRT() As String
        Get
            Return Me.fCHCRTField
        End Get
        Set
            Me.fCHCRTField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property HRACRT() As String
        Get
            Return Me.hRACRTField
        End Get
        Set
            Me.hRACRTField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property NTRMCR() As String
        Get
            Return Me.nTRMCRField
        End Get
        Set
            Me.nTRMCRField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property CULUSA() As String
        Get
            Return Me.cULUSAField
        End Get
        Set
            Me.cULUSAField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property FULTAC() As String
        Get
            Return Me.fULTACField
        End Get
        Set
            Me.fULTACField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property HULTAC() As String
        Get
            Return Me.hULTACField
        End Get
        Set
            Me.hULTACField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property NTRMNL() As String
        Get
            Return Me.nTRMNLField
        End Get
        Set
            Me.nTRMNLField = value
        End Set
    End Property
End Class

'''<comentarios/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ransa.biz/")>  _
Partial Public Class Directorio
    
    Private tIPODCField As String
    
    Private cCMPNField As String
    
    Private mMCAPLField As String
    
    Private tRFTIMField As String
    
    Private nMRGIMField As String
    
    Private nOMFLDField As String
    
    Private tUBIMGField As String
    
    Private tURLIMField As String
    
    Private tDSGIMField As String
    
    Private cCLNTOField As String
    
    Private sESTRGField As String
    
    Private cUSCRTField As String
    
    Private fCHCRTField As String
    
    Private hRACRTField As String
    
    Private nTRMCRField As String
    
    Private cULUSAField As String
    
    Private fULTACField As String
    
    Private hULTACField As String
    
    Private nTRMNLField As String
    
    '''<comentarios/>
    Public Property TIPODC() As String
        Get
            Return Me.tIPODCField
        End Get
        Set
            Me.tIPODCField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property CCMPN() As String
        Get
            Return Me.cCMPNField
        End Get
        Set
            Me.cCMPNField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property MMCAPL() As String
        Get
            Return Me.mMCAPLField
        End Get
        Set
            Me.mMCAPLField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property TRFTIM() As String
        Get
            Return Me.tRFTIMField
        End Get
        Set
            Me.tRFTIMField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property NMRGIM() As String
        Get
            Return Me.nMRGIMField
        End Get
        Set
            Me.nMRGIMField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property NOMFLD() As String
        Get
            Return Me.nOMFLDField
        End Get
        Set
            Me.nOMFLDField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property TUBIMG() As String
        Get
            Return Me.tUBIMGField
        End Get
        Set
            Me.tUBIMGField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property TURLIM() As String
        Get
            Return Me.tURLIMField
        End Get
        Set
            Me.tURLIMField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property TDSGIM() As String
        Get
            Return Me.tDSGIMField
        End Get
        Set
            Me.tDSGIMField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property CCLNTO() As String
        Get
            Return Me.cCLNTOField
        End Get
        Set
            Me.cCLNTOField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property SESTRG() As String
        Get
            Return Me.sESTRGField
        End Get
        Set
            Me.sESTRGField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property CUSCRT() As String
        Get
            Return Me.cUSCRTField
        End Get
        Set
            Me.cUSCRTField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property FCHCRT() As String
        Get
            Return Me.fCHCRTField
        End Get
        Set
            Me.fCHCRTField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property HRACRT() As String
        Get
            Return Me.hRACRTField
        End Get
        Set
            Me.hRACRTField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property NTRMCR() As String
        Get
            Return Me.nTRMCRField
        End Get
        Set
            Me.nTRMCRField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property CULUSA() As String
        Get
            Return Me.cULUSAField
        End Get
        Set
            Me.cULUSAField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property FULTAC() As String
        Get
            Return Me.fULTACField
        End Get
        Set
            Me.fULTACField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property HULTAC() As String
        Get
            Return Me.hULTACField
        End Get
        Set
            Me.hULTACField = value
        End Set
    End Property
    
    '''<comentarios/>
    Public Property NTRMNL() As String
        Get
            Return Me.nTRMNLField
        End Get
        Set
            Me.nTRMNLField = value
        End Set
    End Property
End Class


'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub getFileFirstListCompletedEventHandler(ByVal sender As Object, ByVal e As getFileFirstListCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class getFileFirstListCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As FileResult
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),FileResult)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub getFileListCompletedEventHandler(ByVal sender As Object, ByVal e As getFileListCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class getFileListCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As FileResult()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),FileResult())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub svPECompletedEventHandler(ByVal sender As Object, ByVal e As svPECompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class svPECompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub extPECompletedEventHandler(ByVal sender As Object, ByVal e As extPECompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class extPECompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub delPECompletedEventHandler(ByVal sender As Object, ByVal e As delPECompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class delPECompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub getFileListCountCompletedEventHandler(ByVal sender As Object, ByVal e As getFileListCountCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class getFileListCountCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As Integer
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),Integer)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub CreateRootDirectoryCompletedEventHandler(ByVal sender As Object, ByVal e As CreateRootDirectoryCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class CreateRootDirectoryCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As Directorio
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),Directorio)
        End Get
    End Property
End Class


'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub getFolderStructureCompletedEventHandler(ByVal sender As Object, ByVal e As getFolderStructureCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class getFolderStructureCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As Directorio
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),Directorio)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub svBLTCompletedEventHandler(ByVal sender As Object, ByVal e As svBLTCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class svBLTCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),Boolean)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub extBLTCompletedEventHandler(ByVal sender As Object, ByVal e As extBLTCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class extBLTCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub delBLTCompletedEventHandler(ByVal sender As Object, ByVal e As delBLTCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class delBLTCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As Boolean
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),Boolean)
        End Get
    End Property
End Class
